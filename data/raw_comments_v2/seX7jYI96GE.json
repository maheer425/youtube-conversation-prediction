{
    "publish_date": "2011-05-12T06:18:26.000Z", 
    "video_length": "PT1H3M26S", 
    "captions": [
        {
            "text": "Russell:\nGood afternoon.", 
            "dur": "1.3", 
            "start": "3"
        }, 
        {
            "text": "I&#39;m Alex Russell.", 
            "dur": "1.234", 
            "start": "4.3"
        }, 
        {
            "text": "I&#39;m a software engineer\non the Chrome Team.", 
            "dur": "1.167", 
            "start": "5.534"
        }, 
        {
            "text": "Thanks for tearing yourself\naway from lunch", 
            "dur": "1.733", 
            "start": "6.701"
        }, 
        {
            "text": "to come hear\nabout JavaScript.", 
            "dur": "1.766", 
            "start": "8.434"
        }, 
        {
            "text": "So like I said, I&#39;m an engineer\non the Chrome Team,", 
            "dur": "4.301", 
            "start": "10.2"
        }, 
        {
            "text": "and before I joined Google,", 
            "dur": "1.266", 
            "start": "14.501"
        }, 
        {
            "text": "I spent a lot of my life\nworking in JavaScript.", 
            "dur": "2.633", 
            "start": "15.767"
        }, 
        {
            "text": "I joined the Chrome Team from\na web development background,", 
            "dur": "3.134", 
            "start": "18.4"
        }, 
        {
            "text": "specifically working on open\nsource JavaScript tool kits", 
            "dur": "1.766", 
            "start": "21.534"
        }, 
        {
            "text": "and before that,", 
            "dur": "1.267", 
            "start": "23.3"
        }, 
        {
            "text": "working web application\ndevelopment and security.", 
            "dur": "2.367", 
            "start": "24.567"
        }, 
        {
            "text": "And before my recent\ndetour into C++,", 
            "dur": "4", 
            "start": "26.934"
        }, 
        {
            "text": "I spent most of my day\ntrying to figure out", 
            "dur": "2.099", 
            "start": "30.934"
        }, 
        {
            "text": "how to make JavaScript\ndo interesting things.", 
            "dur": "2.734", 
            "start": "33.033"
        }, 
        {
            "text": "My personal history with\nJavaScript started in 1997,", 
            "dur": "3.266", 
            "start": "35.767"
        }, 
        {
            "text": "I think when a lot of us started\nto be cognizant of the web.", 
            "dur": "3.301", 
            "start": "39.033"
        }, 
        {
            "text": "And at the time, JavaScript\nwas this thing", 
            "dur": "2.2", 
            "start": "42.334"
        }, 
        {
            "text": "that was starting\nto become powerful", 
            "dur": "1.833", 
            "start": "44.534"
        }, 
        {
            "text": "and somewhat standardized", 
            "dur": "1.467", 
            "start": "46.367"
        }, 
        {
            "text": "and somewhat widely available on\nthe back of the browser wars.", 
            "dur": "4.733", 
            "start": "47.834"
        }, 
        {
            "text": "So I want to talk a lot about", 
            "dur": "2.301", 
            "start": "52.567"
        }, 
        {
            "text": "how we got to where we are\ntoday with JavaScript,", 
            "dur": "1.766", 
            "start": "54.868"
        }, 
        {
            "text": "why it&#39;s so important,\nwhy that history,", 
            "dur": "1.8", 
            "start": "56.634"
        }, 
        {
            "text": "that long history continues", 
            "dur": "2.333", 
            "start": "58.434"
        }, 
        {
            "text": "to figure into the sorts of\nthings we try to do", 
            "dur": "2.4", 
            "start": "60.767"
        }, 
        {
            "text": "with JavaScript on\na day-to-day basis.", 
            "dur": "2.167", 
            "start": "63.167"
        }, 
        {
            "text": "And I want to take you\nthrough what&#39;s really", 
            "dur": "2.333", 
            "start": "65.334"
        }, 
        {
            "text": "inside of JavaScript.", 
            "dur": "1.034", 
            "start": "67.667"
        }, 
        {
            "text": "What is it about\nJavaScript that it is,", 
            "dur": "2.066", 
            "start": "68.701"
        }, 
        {
            "text": "that makes it so different\nto the languages", 
            "dur": "1.6", 
            "start": "70.767"
        }, 
        {
            "text": "that you might be using\nin your day-to-day work", 
            "dur": "1.867", 
            "start": "72.367"
        }, 
        {
            "text": "that aren&#39;t JavaScript,\nbecause there&#39;s a lot that is.", 
            "dur": "3.3", 
            "start": "74.234"
        }, 
        {
            "text": "Exactly where\nare we right now?", 
            "dur": "1.533", 
            "start": "77.534"
        }, 
        {
            "text": "Because I think\nthis is also sort of", 
            "dur": "1.534", 
            "start": "79.067"
        }, 
        {
            "text": "an ambiguous question, right?\nIf you&#39;re a browser bender,", 
            "dur": "2.699", 
            "start": "80.601"
        }, 
        {
            "text": "it&#39;s easy to say\nwe&#39;re this fast--easy-ish.", 
            "dur": "4.167", 
            "start": "83.3"
        }, 
        {
            "text": "If you&#39;re a web developer,", 
            "dur": "1.167", 
            "start": "87.467"
        }, 
        {
            "text": "you can look\nin your deployed base", 
            "dur": "1.167", 
            "start": "88.634"
        }, 
        {
            "text": "and understand\nwho&#39;s got what,", 
            "dur": "1.866", 
            "start": "89.801"
        }, 
        {
            "text": "but that doesn&#39;t necessarily\ntell you anything", 
            "dur": "1.1", 
            "start": "91.667"
        }, 
        {
            "text": "about the future.", 
            "dur": "1.4", 
            "start": "92.767"
        }, 
        {
            "text": "And I want to spend a lot\nof time today talking about", 
            "dur": "1.9", 
            "start": "94.167"
        }, 
        {
            "text": "how it is that we are going\nto get a different future", 
            "dur": "2.4", 
            "start": "96.067"
        }, 
        {
            "text": "for JavaScript,", 
            "dur": "1.134", 
            "start": "98.467"
        }, 
        {
            "text": "because JavaScript,\nlike the browsers,", 
            "dur": "1.333", 
            "start": "99.601"
        }, 
        {
            "text": "is starting to move again,", 
            "dur": "1.433", 
            "start": "100.934"
        }, 
        {
            "text": "and I want to\ntear back the veil", 
            "dur": "4.3", 
            "start": "102.367"
        }, 
        {
            "text": "that covers each of\nthese topics", 
            "dur": "1.366", 
            "start": "106.667"
        }, 
        {
            "text": "and help you understand\nexactly what&#39;s going on", 
            "dur": "1.734", 
            "start": "108.033"
        }, 
        {
            "text": "and how these parts relate to\neach other, because they do.", 
            "dur": "2.633", 
            "start": "109.767"
        }, 
        {
            "text": "The history informs\nthe future,", 
            "dur": "1.834", 
            "start": "112.4"
        }, 
        {
            "text": "and the current state informs\nwhat&#39;s going to happen next.", 
            "dur": "3.667", 
            "start": "114.234"
        }, 
        {
            "text": "So JavaScript is\na functional language.", 
            "dur": "2.132", 
            "start": "117.901"
        }, 
        {
            "text": "So how many of you write\nin other functional languages", 
            "dur": "2.334", 
            "start": "120.033"
        }, 
        {
            "text": "or are familiar with\nfunctional languages?", 
            "dur": "1.633", 
            "start": "122.367"
        }, 
        {
            "text": "Awesome.", 
            "dur": "1.267", 
            "start": "124"
        }, 
        {
            "text": "The front of this talk is\ngoing to be something", 
            "dur": "1.5", 
            "start": "125.267"
        }, 
        {
            "text": "that maybe just warms your heart\nand may not be new information.", 
            "dur": "3.6", 
            "start": "126.767"
        }, 
        {
            "text": "So JavaScript is\na functional language.", 
            "dur": "2.367", 
            "start": "130.367"
        }, 
        {
            "text": "In the sort of the history\nof functional languages,", 
            "dur": "5.8", 
            "start": "132.734"
        }, 
        {
            "text": "it supports closures.", 
            "dur": "1.3", 
            "start": "138.534"
        }, 
        {
            "text": "Much like Scheme,", 
            "dur": "1.366", 
            "start": "139.834"
        }, 
        {
            "text": "it&#39;s got this nice\nfirst class function system,", 
            "dur": "4.1", 
            "start": "141.2"
        }, 
        {
            "text": "and in 1995, Brenda and I hacked\nit up as a little prototype", 
            "dur": "5.267", 
            "start": "145.3"
        }, 
        {
            "text": "which made its way\ninto Netscape 2,", 
            "dur": "1.867", 
            "start": "150.567"
        }, 
        {
            "text": "and Netscape 2\nwas the first browser", 
            "dur": "1.966", 
            "start": "152.434"
        }, 
        {
            "text": "to really have any serious\nscripting supported.", 
            "dur": "2.367", 
            "start": "154.4"
        }, 
        {
            "text": "It had DOM level 0,\nand soon afterwards,", 
            "dur": "3.834", 
            "start": "156.767"
        }, 
        {
            "text": "JavaScript sort of, you know,", 
            "dur": "2.699", 
            "start": "160.601"
        }, 
        {
            "text": "once it escaped\ninto the browser,", 
            "dur": "1.334", 
            "start": "163.3"
        }, 
        {
            "text": "started the standards\nprocess at ECMA,", 
            "dur": "2.334", 
            "start": "164.634"
        }, 
        {
            "text": "not inside the W3C,", 
            "dur": "1.332", 
            "start": "166.968"
        }, 
        {
            "text": "because the W3C wasn&#39;t\nthe place for languages.", 
            "dur": "4.067", 
            "start": "168.3"
        }, 
        {
            "text": "And in 1997, we got\nthe first version of JavaScript", 
            "dur": "3.134", 
            "start": "172.367"
        }, 
        {
            "text": "as a standard.", 
            "dur": "1.266", 
            "start": "175.501"
        }, 
        {
            "text": "In 1996, Microsoft\nshipped IE 3.0,", 
            "dur": "5.366", 
            "start": "176.767"
        }, 
        {
            "text": "and that was the first version\nof JScript.", 
            "dur": "1.735", 
            "start": "182.133"
        }, 
        {
            "text": "So we now had two competing,", 
            "dur": "1.933", 
            "start": "183.868"
        }, 
        {
            "text": "mostly compatible\nimplementations", 
            "dur": "1.599", 
            "start": "185.801"
        }, 
        {
            "text": "of a scripting language\nfor the web.", 
            "dur": "2.101", 
            "start": "187.4"
        }, 
        {
            "text": "Nobody knew how big\nthe web was going to be,", 
            "dur": "1.666", 
            "start": "189.501"
        }, 
        {
            "text": "although, at the time,", 
            "dur": "1.167", 
            "start": "191.167"
        }, 
        {
            "text": "it looked like things\nwere trending up.", 
            "dur": "2.2", 
            "start": "192.334"
        }, 
        {
            "text": "Well, we know how\nthat story ends.", 
            "dur": "1.267", 
            "start": "194.534"
        }, 
        {
            "text": "Today, you can&#39;t ship\na credible platform", 
            "dur": "2.167", 
            "start": "195.801"
        }, 
        {
            "text": "that doesn&#39;t have the web.", 
            "dur": "1.666", 
            "start": "197.968"
        }, 
        {
            "text": "In 1999, ECMAScript\nversion 3", 
            "dur": "4.267", 
            "start": "199.634"
        }, 
        {
            "text": "was finalized at TC39,\nwhich is the technical committee", 
            "dur": "3.533", 
            "start": "203.901"
        }, 
        {
            "text": "that is the standards body\nfor JavaScript.", 
            "dur": "5.5", 
            "start": "207.434"
        }, 
        {
            "text": "And from its humble roots", 
            "dur": "1.266", 
            "start": "212.934"
        }, 
        {
            "text": "as Mocha/LiveScript/JavaScript\nin Netscape 2,", 
            "dur": "5.2", 
            "start": "214.2"
        }, 
        {
            "text": "JavaScript 3, ECMAScript 262-3,\nthe version or the standard", 
            "dur": "4.434", 
            "start": "219.4"
        }, 
        {
            "text": "that was released in 1999 has\npowered us pretty much to today.", 
            "dur": "4.867", 
            "start": "223.834"
        }, 
        {
            "text": "It has been the thing\nthat for more than a decade", 
            "dur": "2.399", 
            "start": "228.701"
        }, 
        {
            "text": "has been what\nwe think of as JavaScript.", 
            "dur": "3.067", 
            "start": "231.1"
        }, 
        {
            "text": "And JavaScript, on the back\nof that standard,", 
            "dur": "2.833", 
            "start": "234.167"
        }, 
        {
            "text": "has gone pretty much everywhere.", 
            "dur": "1.767", 
            "start": "237"
        }, 
        {
            "text": "JScript, the component that runs\nJavaScript inside of IE,", 
            "dur": "3.101", 
            "start": "238.767"
        }, 
        {
            "text": "has been built in to the OS\nfor Windows since Windows 98.", 
            "dur": "3.066", 
            "start": "241.868"
        }, 
        {
            "text": "You can&#39;t get\na copy of Windows,", 
            "dur": "1.967", 
            "start": "244.934"
        }, 
        {
            "text": "you can&#39;t buy\na copy of Windows today", 
            "dur": "1.433", 
            "start": "246.901"
        }, 
        {
            "text": "that does not include\nJavaScript in the OS,", 
            "dur": "2.799", 
            "start": "248.334"
        }, 
        {
            "text": "and every browser on the planet\nnow includes", 
            "dur": "2.101", 
            "start": "251.133"
        }, 
        {
            "text": "at least one implementation of\nJavaScript,", 
            "dur": "1.567", 
            "start": "253.234"
        }, 
        {
            "text": "and these things are moving\nreally, really fast.", 
            "dur": "1.599", 
            "start": "254.801"
        }, 
        {
            "text": "I work on the Chrome Team;\ntherefore, I&#39;m partial to V8.", 
            "dur": "3.8", 
            "start": "256.4"
        }, 
        {
            "text": "It goes nice and quickly,", 
            "dur": "1.501", 
            "start": "260.2"
        }, 
        {
            "text": "but these things\nare all compatible", 
            "dur": "1.399", 
            "start": "261.701"
        }, 
        {
            "text": "to a very high degree.", 
            "dur": "1.501", 
            "start": "263.1"
        }, 
        {
            "text": "All of these implementations\nare separate implementations,", 
            "dur": "2.432", 
            "start": "264.601"
        }, 
        {
            "text": "and they&#39;re competing\non things that aren&#39;t,", 
            "dur": "1.601", 
            "start": "267.033"
        }, 
        {
            "text": "&quot;Oh, here&#39;s a new language\nfeature.&quot;", 
            "dur": "1.399", 
            "start": "268.634"
        }, 
        {
            "text": "We&#39;re collaborating\non language features", 
            "dur": "1.935", 
            "start": "270.033"
        }, 
        {
            "text": "in the standards committee,", 
            "dur": "1.065", 
            "start": "271.968"
        }, 
        {
            "text": "but we&#39;re competing\non performance,", 
            "dur": "3.201", 
            "start": "273.033"
        }, 
        {
            "text": "which is a really great place\nto be for a language,", 
            "dur": "1.766", 
            "start": "276.234"
        }, 
        {
            "text": "because it takes\na lot of investment", 
            "dur": "1.467", 
            "start": "278"
        }, 
        {
            "text": "to make a language\na real success.", 
            "dur": "1.3", 
            "start": "279.467"
        }, 
        {
            "text": "It takes\na lot of deployment,", 
            "dur": "1.333", 
            "start": "280.767"
        }, 
        {
            "text": "a lot of competition,\nand a lot of investment", 
            "dur": "1.801", 
            "start": "282.1"
        }, 
        {
            "text": "to sort of get\nthe really smart guys", 
            "dur": "1.333", 
            "start": "283.901"
        }, 
        {
            "text": "that it takes to go make\na VM go like hell.", 
            "dur": "2.433", 
            "start": "285.234"
        }, 
        {
            "text": "And so JavaScript has been\nthe beneficiary", 
            "dur": "2.134", 
            "start": "287.667"
        }, 
        {
            "text": "of this sort of ecosystem of\ninvestment in a way", 
            "dur": "2.633", 
            "start": "289.801"
        }, 
        {
            "text": "that only a couple of languages\nbefore it ever have.", 
            "dur": "2.233", 
            "start": "292.434"
        }, 
        {
            "text": "And as a result, today&#39;s\nJavaScript runtimes", 
            "dur": "3.9", 
            "start": "294.667"
        }, 
        {
            "text": "and today&#39;s JavaScript\nperformance are vastly different", 
            "dur": "2.067", 
            "start": "298.567"
        }, 
        {
            "text": "than they have been in the past,\neven the recent past.", 
            "dur": "3.1", 
            "start": "300.634"
        }, 
        {
            "text": "And so every device\nthat you get today,", 
            "dur": "3.266", 
            "start": "303.734"
        }, 
        {
            "text": "including the tablets that were\nhanded out to you yesterday", 
            "dur": "2.534", 
            "start": "307"
        }, 
        {
            "text": "and the Chrome books that you&#39;ll\nbe receiving as attendees", 
            "dur": "5.866", 
            "start": "309.534"
        }, 
        {
            "text": "on June 15th,", 
            "dur": "2.067", 
            "start": "315.4"
        }, 
        {
            "text": "these all have JavaScript as\na core part of their runtimes", 
            "dur": "3.533", 
            "start": "317.467"
        }, 
        {
            "text": "because the web\nis the platform.", 
            "dur": "1.367", 
            "start": "321"
        }, 
        {
            "text": "The web is the way\nthat you&#39;re going to build", 
            "dur": "1.867", 
            "start": "322.367"
        }, 
        {
            "text": "a lot of the applications", 
            "dur": "1.166", 
            "start": "324.234"
        }, 
        {
            "text": "that your user\nis going to care about,", 
            "dur": "1.201", 
            "start": "325.4"
        }, 
        {
            "text": "and it&#39;s the way to build\nportably today.", 
            "dur": "1.666", 
            "start": "326.601"
        }, 
        {
            "text": "So JavaScript is everywhere,\nand it&#39;s terribly misunderstood.", 
            "dur": "4.967", 
            "start": "328.267"
        }, 
        {
            "text": "And I think what I want to do\nfirst here", 
            "dur": "3.1", 
            "start": "333.234"
        }, 
        {
            "text": "is to talk you\nthrough the parts", 
            "dur": "1.733", 
            "start": "336.334"
        }, 
        {
            "text": "that most people don&#39;t\nreally have a sense of,", 
            "dur": "2.734", 
            "start": "338.067"
        }, 
        {
            "text": "when they talk about,", 
            "dur": "1.332", 
            "start": "340.801"
        }, 
        {
            "text": "like, what is it that makes\nJavaScript different?", 
            "dur": "1.768", 
            "start": "342.133"
        }, 
        {
            "text": "Because we hear it&#39;s\na dynamic language.", 
            "dur": "1.166", 
            "start": "343.901"
        }, 
        {
            "text": "We hear it&#39;s\na functional language.", 
            "dur": "1.333", 
            "start": "345.067"
        }, 
        {
            "text": "But it looks a lot like C.\nIt looks a lot like Java.", 
            "dur": "2.034", 
            "start": "346.4"
        }, 
        {
            "text": "It looks a lot like C++.", 
            "dur": "1.133", 
            "start": "348.434"
        }, 
        {
            "text": "And some folks have been\ndoing a great job", 
            "dur": "1.5", 
            "start": "349.567"
        }, 
        {
            "text": "in the last couple of years at\nsort of helping to tear back", 
            "dur": "2.467", 
            "start": "351.067"
        }, 
        {
            "text": "the blinders\nthat are on us,", 
            "dur": "2.334", 
            "start": "353.534"
        }, 
        {
            "text": "as folks who come from\na C or C++ background,", 
            "dur": "3.132", 
            "start": "355.868"
        }, 
        {
            "text": "and help lay out what it is.", 
            "dur": "2.367", 
            "start": "359"
        }, 
        {
            "text": "But I want to go\nthrough it very briefly,", 
            "dur": "1.4", 
            "start": "361.367"
        }, 
        {
            "text": "because I think it&#39;s\nimportant to understand", 
            "dur": "2.067", 
            "start": "362.767"
        }, 
        {
            "text": "what&#39;s actually in there,", 
            "dur": "1.433", 
            "start": "364.834"
        }, 
        {
            "text": "because when we understand\nwhat&#39;s actually in there,", 
            "dur": "1.234", 
            "start": "366.267"
        }, 
        {
            "text": "we&#39;ll understand how\nthe language can evolve,", 
            "dur": "1.966", 
            "start": "367.501"
        }, 
        {
            "text": "because you don&#39;t want\nnecessarily separate--", 
            "dur": "2.3", 
            "start": "369.467"
        }, 
        {
            "text": "competing ideas to be existing\ninside the same language.", 
            "dur": "2.734", 
            "start": "371.767"
        }, 
        {
            "text": "You want a language to sort of\nhave a theory of itself.", 
            "dur": "2.233", 
            "start": "374.501"
        }, 
        {
            "text": "You want it to be coherent\nin ways that make it,", 
            "dur": "3.5", 
            "start": "376.734"
        }, 
        {
            "text": "so that when you understand\none part of the language,", 
            "dur": "1.5", 
            "start": "380.234"
        }, 
        {
            "text": "you can understand\nthe next part of it.", 
            "dur": "1.5", 
            "start": "381.734"
        }, 
        {
            "text": "And my interest in this is\ncoming from a background", 
            "dur": "1.533", 
            "start": "383.234"
        }, 
        {
            "text": "as a web developer,", 
            "dur": "1.366", 
            "start": "384.767"
        }, 
        {
            "text": "I serve as one of Google&#39;s\nrepresentatives to TC39,", 
            "dur": "2.867", 
            "start": "386.133"
        }, 
        {
            "text": "the standards committee\nfor JavaScript.", 
            "dur": "2.067", 
            "start": "389"
        }, 
        {
            "text": "And so I have a particular\nand keen interest", 
            "dur": "1.801", 
            "start": "391.067"
        }, 
        {
            "text": "in making sure that we evolve\nthe language in ways", 
            "dur": "1.633", 
            "start": "392.868"
        }, 
        {
            "text": "that are reasonable\nand solve real world problems", 
            "dur": "4.033", 
            "start": "394.501"
        }, 
        {
            "text": "that we&#39;ve all got.", 
            "dur": "1.267", 
            "start": "398.534"
        }, 
        {
            "text": "So JavaScript only has\na couple of key languages.", 
            "dur": "3.933", 
            "start": "399.801"
        }, 
        {
            "text": "I said earlier that JavaScript\nis a little functional language,", 
            "dur": "3.167", 
            "start": "403.734"
        }, 
        {
            "text": "and JavaScript started out as\na very small language entity.", 
            "dur": "2.199", 
            "start": "406.901"
        }, 
        {
            "text": "There aren&#39;t a lot\nof core concepts.", 
            "dur": "1.601", 
            "start": "409.1"
        }, 
        {
            "text": "There&#39;s no type\nsystem, per se.", 
            "dur": "1.399", 
            "start": "410.701"
        }, 
        {
            "text": "There are types.", 
            "dur": "1.267", 
            "start": "412.1"
        }, 
        {
            "text": "You can have a number,\nor an object, or an array,", 
            "dur": "4.267", 
            "start": "413.367"
        }, 
        {
            "text": "but there&#39;s no\ntype testing.", 
            "dur": "1.399", 
            "start": "417.634"
        }, 
        {
            "text": "There&#39;s no way to define\nyour own types, necessarily,", 
            "dur": "2.868", 
            "start": "419.033"
        }, 
        {
            "text": "and have them participate at,\nlike, function call time", 
            "dur": "3.733", 
            "start": "421.901"
        }, 
        {
            "text": "and have the system throw\nan exception for you,", 
            "dur": "1.766", 
            "start": "425.634"
        }, 
        {
            "text": "unless you do the testing\nyourself.", 
            "dur": "2.301", 
            "start": "427.4"
        }, 
        {
            "text": "And JavaScript\nreads top to bottom.", 
            "dur": "2.167", 
            "start": "429.701"
        }, 
        {
            "text": "JavaScript has\nrun-to-completion semantics.", 
            "dur": "1.833", 
            "start": "431.868"
        }, 
        {
            "text": "That means that if you\nstart a body of code,", 
            "dur": "1.466", 
            "start": "433.701"
        }, 
        {
            "text": "there&#39;s no multithreading\nin the language.", 
            "dur": "1.734", 
            "start": "435.167"
        }, 
        {
            "text": "There&#39;s no way for you to sort\nof fork off some other process.", 
            "dur": "2.399", 
            "start": "436.901"
        }, 
        {
            "text": "Anything that does that in\na JavaScript environment", 
            "dur": "3.034", 
            "start": "439.3"
        }, 
        {
            "text": "is doing it as a built-on.", 
            "dur": "1.5", 
            "start": "442.334"
        }, 
        {
            "text": "So browsers with their set\ntimeout and their set interval.", 
            "dur": "2.8", 
            "start": "443.834"
        }, 
        {
            "text": "That&#39;s all happening outside\nof the core language semantics.", 
            "dur": "3.067", 
            "start": "446.634"
        }, 
        {
            "text": "JavaScript reads\ntop to bottom,", 
            "dur": "1.366", 
            "start": "449.701"
        }, 
        {
            "text": "and the interpreter\nand runtimes read it exactly", 
            "dur": "2.6", 
            "start": "451.067"
        }, 
        {
            "text": "and run it exactly that way.", 
            "dur": "1.433", 
            "start": "453.667"
        }, 
        {
            "text": "If you see a block of\nJavaScript code,", 
            "dur": "1.501", 
            "start": "455.1"
        }, 
        {
            "text": "it goes from top to bottom,\nand that&#39;ll become important,", 
            "dur": "3.267", 
            "start": "456.601"
        }, 
        {
            "text": "as we see in\njust a minute.", 
            "dur": "2.499", 
            "start": "459.868"
        }, 
        {
            "text": "Almost everything in\nJavaScript is mutable.", 
            "dur": "1.8", 
            "start": "462.367"
        }, 
        {
            "text": "That means that you can\nchange nearly everything,", 
            "dur": "2.2", 
            "start": "464.167"
        }, 
        {
            "text": "and we&#39;ll talk about the\nseveral exemptions to this rule,", 
            "dur": "4.601", 
            "start": "466.367"
        }, 
        {
            "text": "but those exemptions\nare very small,", 
            "dur": "1.566", 
            "start": "470.968"
        }, 
        {
            "text": "and they&#39;re very narrow,\nbut they wind up being powerful.", 
            "dur": "2.7", 
            "start": "472.534"
        }, 
        {
            "text": "So that means that if you\nget an object back from", 
            "dur": "1.567", 
            "start": "475.234"
        }, 
        {
            "text": "some function call,", 
            "dur": "1.167", 
            "start": "476.801"
        }, 
        {
            "text": "you can probably change it\nin JavaScript.", 
            "dur": "2.032", 
            "start": "477.968"
        }, 
        {
            "text": "Closure is the way we do\nprivate state, though,", 
            "dur": "1.868", 
            "start": "480"
        }, 
        {
            "text": "so if I get an object,", 
            "dur": "1.033", 
            "start": "481.868"
        }, 
        {
            "text": "and everything is mutable,", 
            "dur": "1.433", 
            "start": "482.901"
        }, 
        {
            "text": "it means, ah, I might be able\nto surprise somebody else.", 
            "dur": "1.4", 
            "start": "484.334"
        }, 
        {
            "text": "I might be able to go\nchange some state out", 
            "dur": "1.299", 
            "start": "485.734"
        }, 
        {
            "text": "from underneath them.", 
            "dur": "1.334", 
            "start": "487.033"
        }, 
        {
            "text": "The thing that returned me\nthe object might expect it", 
            "dur": "1.8", 
            "start": "488.367"
        }, 
        {
            "text": "back in some\nreasonably okay state.", 
            "dur": "3.133", 
            "start": "490.167"
        }, 
        {
            "text": "Well, the way we do data\nhiding in JavaScript", 
            "dur": "1.8", 
            "start": "493.3"
        }, 
        {
            "text": "isn&#39;t through the private key\norder,", 
            "dur": "2.3", 
            "start": "495.1"
        }, 
        {
            "text": "through some method that gives\nyou some sort of a private field", 
            "dur": "2.633", 
            "start": "497.4"
        }, 
        {
            "text": "that you can only see.", 
            "dur": "1.935", 
            "start": "500.033"
        }, 
        {
            "text": "Instead, we invert\nthe relationship", 
            "dur": "2.366", 
            "start": "501.968"
        }, 
        {
            "text": "between classes and functions,", 
            "dur": "2.4", 
            "start": "504.334"
        }, 
        {
            "text": "and we treat functions as\nbehavior that can carry data,", 
            "dur": "3.967", 
            "start": "506.734"
        }, 
        {
            "text": "versus classes,", 
            "dur": "1.133", 
            "start": "510.701"
        }, 
        {
            "text": "which are data that can\ncarry behavior.", 
            "dur": "1.767", 
            "start": "511.834"
        }, 
        {
            "text": "And so the last key concept is,\ninstead of having a class,", 
            "dur": "3.633", 
            "start": "513.601"
        }, 
        {
            "text": "as you understand it in\nother languages,", 
            "dur": "1.3", 
            "start": "517.234"
        }, 
        {
            "text": "we have prototypes,", 
            "dur": "1.466", 
            "start": "518.534"
        }, 
        {
            "text": "which is to say we don&#39;t have\nthis strong &quot;is a&quot; relationship", 
            "dur": "3.534", 
            "start": "520"
        }, 
        {
            "text": "through a hierarchy\nof classes.", 
            "dur": "1.866", 
            "start": "523.534"
        }, 
        {
            "text": "Instead, we say,\nwhen I don&#39;t find it here,", 
            "dur": "1.367", 
            "start": "525.4"
        }, 
        {
            "text": "please look over there.", 
            "dur": "1.5", 
            "start": "526.767"
        }, 
        {
            "text": "It&#39;s delegation, and\nit&#39;s a one-link chain delegation", 
            "dur": "4.5", 
            "start": "528.267"
        }, 
        {
            "text": "up to a root object\nthat everybody shares.", 
            "dur": "2.034", 
            "start": "532.767"
        }, 
        {
            "text": "So we&#39;ll talk a lot about\nhow exactly all this works,", 
            "dur": "2.666", 
            "start": "534.801"
        }, 
        {
            "text": "how it fits together,", 
            "dur": "1.234", 
            "start": "537.467"
        }, 
        {
            "text": "and hopefully you&#39;ll\nunderstand at the end", 
            "dur": "2.966", 
            "start": "538.701"
        }, 
        {
            "text": "how it&#39;s going to inform\nwhere we can go from here.", 
            "dur": "2.5", 
            "start": "541.667"
        }, 
        {
            "text": "I said earlier that\nJavaScript runs top to bottom.", 
            "dur": "2.833", 
            "start": "544.167"
        }, 
        {
            "text": "That means if I see\na piece of code in JavaScript,", 
            "dur": "2.4", 
            "start": "547"
        }, 
        {
            "text": "one line before the next,", 
            "dur": "1.334", 
            "start": "549.4"
        }, 
        {
            "text": "before the next--because there\nisn&#39;t necessarily", 
            "dur": "2.366", 
            "start": "550.734"
        }, 
        {
            "text": "a compile cycle.", 
            "dur": "1.3", 
            "start": "553.1"
        }, 
        {
            "text": "Most JavaScript runtimes\ntraditionally were interpreters.", 
            "dur": "3.568", 
            "start": "554.4"
        }, 
        {
            "text": "That means that the easiest way", 
            "dur": "1.266", 
            "start": "557.968"
        }, 
        {
            "text": "to think about your\nJavaScript program", 
            "dur": "1.5", 
            "start": "559.234"
        }, 
        {
            "text": "is as something that is going\nto happen in a live environment.", 
            "dur": "5.666", 
            "start": "560.734"
        }, 
        {
            "text": "So if you had\na command line,", 
            "dur": "1.767", 
            "start": "566.4"
        }, 
        {
            "text": "and you started typing in\ncommands,", 
            "dur": "1.267", 
            "start": "568.167"
        }, 
        {
            "text": "JavaScript runs almost\nexactly the same way.", 
            "dur": "2.699", 
            "start": "569.434"
        }, 
        {
            "text": "Top to bottom,\nline for line,", 
            "dur": "2.468", 
            "start": "572.133"
        }, 
        {
            "text": "it gets evaluated in the order\nthat it is written out", 
            "dur": "6.367", 
            "start": "574.601"
        }, 
        {
            "text": "in the program,\nmore or less.", 
            "dur": "2", 
            "start": "580.968"
        }, 
        {
            "text": "And so\nstatement to statement,", 
            "dur": "1.599", 
            "start": "582.968"
        }, 
        {
            "text": "your programs--they can change\nin ways that are surprising", 
            "dur": "2.833", 
            "start": "584.567"
        }, 
        {
            "text": "in other languages.", 
            "dur": "1.434", 
            "start": "587.4"
        }, 
        {
            "text": "Where you might otherwise\nhave compile time exceptions,", 
            "dur": "1.4", 
            "start": "588.834"
        }, 
        {
            "text": "JavaScript just sort of\nmerrily goes on", 
            "dur": "2.233", 
            "start": "590.234"
        }, 
        {
            "text": "and runs the next line.", 
            "dur": "1.234", 
            "start": "592.467"
        }, 
        {
            "text": "So whenever we read\nsome JavaScript code,", 
            "dur": "2.666", 
            "start": "593.701"
        }, 
        {
            "text": "it&#39;s important to think about\nit simply as running at the top", 
            "dur": "3.033", 
            "start": "596.367"
        }, 
        {
            "text": "and going to the bottom.", 
            "dur": "1.134", 
            "start": "599.4"
        }, 
        {
            "text": "It&#39;s not really\nsome big magical machine", 
            "dur": "3", 
            "start": "600.534"
        }, 
        {
            "text": "that&#39;s going to be out there\ndoing something for you,", 
            "dur": "1.833", 
            "start": "603.534"
        }, 
        {
            "text": "and then it&#39;s going to start\nrunning your program.", 
            "dur": "1.733", 
            "start": "605.367"
        }, 
        {
            "text": "It&#39;s just running\ntop to bottom.", 
            "dur": "1.401", 
            "start": "607.1"
        }, 
        {
            "text": "So when you evaluate\nJavaScript code,", 
            "dur": "1.467", 
            "start": "608.501"
        }, 
        {
            "text": "and you&#39;re trying to figure\nout what&#39;s going on,", 
            "dur": "1.332", 
            "start": "609.968"
        }, 
        {
            "text": "remember that the line\nbefore it may be the thing", 
            "dur": "1.833", 
            "start": "611.3"
        }, 
        {
            "text": "that caused the problem.", 
            "dur": "2.067", 
            "start": "613.133"
        }, 
        {
            "text": "And JavaScript is functional\nand object-based.", 
            "dur": "3.167", 
            "start": "615.2"
        }, 
        {
            "text": "It&#39;s really important\nto think of functions", 
            "dur": "4.067", 
            "start": "618.367"
        }, 
        {
            "text": "as first class in JavaScript.", 
            "dur": "2.633", 
            "start": "622.434"
        }, 
        {
            "text": "That means that they&#39;re\nnot simply a pointer out", 
            "dur": "2", 
            "start": "625.067"
        }, 
        {
            "text": "in the world that you\ninvoke against something.", 
            "dur": "3.767", 
            "start": "627.067"
        }, 
        {
            "text": "They are actual objects.", 
            "dur": "1.299", 
            "start": "630.834"
        }, 
        {
            "text": "I&#39;m going to refer to them\nthrough this talk", 
            "dur": "1.101", 
            "start": "632.133"
        }, 
        {
            "text": "as function objects,", 
            "dur": "1.467", 
            "start": "633.234"
        }, 
        {
            "text": "because function objects are\nindeed objects that you can go", 
            "dur": "2.9", 
            "start": "634.701"
        }, 
        {
            "text": "and hang behavior off of.", 
            "dur": "1.233", 
            "start": "637.601"
        }, 
        {
            "text": "But you don&#39;t hang behavior\noff of them", 
            "dur": "1.134", 
            "start": "638.834"
        }, 
        {
            "text": "by extending their public\nAPI area.", 
            "dur": "2.733", 
            "start": "639.968"
        }, 
        {
            "text": "You don&#39;t say,\n&quot;I&#39;ve got a function object.", 
            "dur": "1.9", 
            "start": "642.701"
        }, 
        {
            "text": "I&#39;m going to add\nsome new property to it.&quot;", 
            "dur": "1.466", 
            "start": "644.601"
        }, 
        {
            "text": "Most of the time, you do that\nby using functions as scopes.", 
            "dur": "3.467", 
            "start": "646.067"
        }, 
        {
            "text": "The only way to create\na new scope in JavaScript", 
            "dur": "1.967", 
            "start": "649.534"
        }, 
        {
            "text": "is to invoke a function.", 
            "dur": "1.799", 
            "start": "651.501"
        }, 
        {
            "text": "When you invoke a function,\nit sort of creates a new scope.", 
            "dur": "2.501", 
            "start": "653.3"
        }, 
        {
            "text": "If statements, while statements,\nfor-in statements--", 
            "dur": "2.8", 
            "start": "655.801"
        }, 
        {
            "text": "those things\ndon&#39;t create scopes.", 
            "dur": "1.233", 
            "start": "658.601"
        }, 
        {
            "text": "Only functions do,\nso we have this problem of", 
            "dur": "3.266", 
            "start": "659.834"
        }, 
        {
            "text": "how do we do beta hiding?", 
            "dur": "1.134", 
            "start": "663.1"
        }, 
        {
            "text": "Well, these scopes\nare really smart,", 
            "dur": "1.5", 
            "start": "664.234"
        }, 
        {
            "text": "because these scopes\nhold on to the variables", 
            "dur": "1.8", 
            "start": "665.734"
        }, 
        {
            "text": "that have been defined\nabove them in another scope.", 
            "dur": "2.967", 
            "start": "667.534"
        }, 
        {
            "text": "So what we&#39;ve got here is\na function called get counter,", 
            "dur": "3.166", 
            "start": "670.501"
        }, 
        {
            "text": "and get counter defines\na local variable, I,", 
            "dur": "1.867", 
            "start": "673.667"
        }, 
        {
            "text": "and it returns\nanother function,", 
            "dur": "2.866", 
            "start": "675.534"
        }, 
        {
            "text": "and that function references\nthe variable I inside of it.", 
            "dur": "4.134", 
            "start": "678.4"
        }, 
        {
            "text": "In other languages\nlike C++ or Java,", 
            "dur": "4.2", 
            "start": "682.534"
        }, 
        {
            "text": "you really can&#39;t do\nanything here,", 
            "dur": "1.466", 
            "start": "686.734"
        }, 
        {
            "text": "because that variable I\nis going to go out of scope", 
            "dur": "2.034", 
            "start": "688.2"
        }, 
        {
            "text": "in the return function.", 
            "dur": "1.233", 
            "start": "690.234"
        }, 
        {
            "text": "We&#39;re allocating\na new function here,", 
            "dur": "1.3", 
            "start": "691.467"
        }, 
        {
            "text": "but that inner function is\ngoing to hold on to I.", 
            "dur": "3.101", 
            "start": "692.767"
        }, 
        {
            "text": "It actually allocates private\nmemory to store a reference", 
            "dur": "3.265", 
            "start": "695.868"
        }, 
        {
            "text": "to I on the function object", 
            "dur": "1.867", 
            "start": "699.133"
        }, 
        {
            "text": "that&#39;s returned out of\nthis statement here.", 
            "dur": "3.1", 
            "start": "701"
        }, 
        {
            "text": "It, again, inverts\nthe relationship.", 
            "dur": "1.801", 
            "start": "704.1"
        }, 
        {
            "text": "It&#39;s not storage\nwith behavior.", 
            "dur": "2.766", 
            "start": "705.901"
        }, 
        {
            "text": "It&#39;s behavior\nthat has hidden storage.", 
            "dur": "2.301", 
            "start": "708.667"
        }, 
        {
            "text": "And so the way we do\nprivate variables", 
            "dur": "1.432", 
            "start": "710.968"
        }, 
        {
            "text": "and the way we do\ndata hiding in JavaScript", 
            "dur": "3.867", 
            "start": "712.4"
        }, 
        {
            "text": "is to use this idea of a\nclosure, something that encloses", 
            "dur": "2.267", 
            "start": "716.267"
        }, 
        {
            "text": "its lexical scope", 
            "dur": "1.4", 
            "start": "718.534"
        }, 
        {
            "text": "and holds on to variables", 
            "dur": "1.667", 
            "start": "719.934"
        }, 
        {
            "text": "as a way\nof passing behavior around.", 
            "dur": "2.1", 
            "start": "721.601"
        }, 
        {
            "text": "So we can call\nthe get counter function.", 
            "dur": "2.233", 
            "start": "723.701"
        }, 
        {
            "text": "It hands us back\na function object.", 
            "dur": "1.567", 
            "start": "725.934"
        }, 
        {
            "text": "We can call it multiple times,\nand that state isn&#39;t gone.", 
            "dur": "2.599", 
            "start": "727.501"
        }, 
        {
            "text": "We can still see the variable I\nfrom inside the outside one,", 
            "dur": "2.734", 
            "start": "730.1"
        }, 
        {
            "text": "but it isn&#39;t referenceable.", 
            "dur": "1.533", 
            "start": "732.834"
        }, 
        {
            "text": "We can&#39;t go and inspect some\nproperty on that function object", 
            "dur": "2.933", 
            "start": "734.367"
        }, 
        {
            "text": "and find out which variables\nit&#39;s holding references to.", 
            "dur": "3.1", 
            "start": "737.3"
        }, 
        {
            "text": "It gets GC&#39;d just like\neverything else in the language.", 
            "dur": "3.967", 
            "start": "740.4"
        }, 
        {
            "text": "So these are\nfirst class functions.", 
            "dur": "1.367", 
            "start": "744.367"
        }, 
        {
            "text": "These are functions\nthat are things in the system.", 
            "dur": "2.9", 
            "start": "745.734"
        }, 
        {
            "text": "They&#39;re actually objects.\nYou can create them.", 
            "dur": "2.133", 
            "start": "748.634"
        }, 
        {
            "text": "You can add properties to them.\nIt can enclose scope.", 
            "dur": "2.967", 
            "start": "750.767"
        }, 
        {
            "text": "They&#39;re not simply inert\nbodies of code that get run.", 
            "dur": "4.067", 
            "start": "753.734"
        }, 
        {
            "text": "They&#39;re participants\nin the object model.", 
            "dur": "2", 
            "start": "757.801"
        }, 
        {
            "text": "They&#39;re participants\nin the storage system.", 
            "dur": "2.499", 
            "start": "759.801"
        }, 
        {
            "text": "You can use them--I know\nthe fundamental concept", 
            "dur": "2.1", 
            "start": "762.3"
        }, 
        {
            "text": "that underpins\na lot of the patterns", 
            "dur": "1.934", 
            "start": "764.4"
        }, 
        {
            "text": "that we&#39;re going to see later.", 
            "dur": "1.733", 
            "start": "766.334"
        }, 
        {
            "text": "So these functions\nwork together", 
            "dur": "2.6", 
            "start": "768.067"
        }, 
        {
            "text": "with a lot of other\nsort of functional ideas", 
            "dur": "2.267", 
            "start": "770.667"
        }, 
        {
            "text": "about how a program language\ncan be structured.", 
            "dur": "2.199", 
            "start": "772.934"
        }, 
        {
            "text": "In JavaScript, we have a filter,\nmap, reduce,", 
            "dur": "2.034", 
            "start": "775.133"
        }, 
        {
            "text": "and for each method\non the array prototype,", 
            "dur": "2.966", 
            "start": "777.167"
        }, 
        {
            "text": "which means that every array\nin the system has these methods,", 
            "dur": "2.401", 
            "start": "780.133"
        }, 
        {
            "text": "which means that instead\nof having an external iterator,", 
            "dur": "2.7", 
            "start": "782.534"
        }, 
        {
            "text": "you have\nan internal iterator.", 
            "dur": "1.2", 
            "start": "785.234"
        }, 
        {
            "text": "You have something\nthat can call a function", 
            "dur": "1.966", 
            "start": "786.434"
        }, 
        {
            "text": "across some set of arguments,", 
            "dur": "1.733", 
            "start": "788.4"
        }, 
        {
            "text": "and so you wind up\ncreating a stack of stuff", 
            "dur": "2.368", 
            "start": "790.133"
        }, 
        {
            "text": "that you&#39;d like to do\nin terms of behavior.", 
            "dur": "2.066", 
            "start": "792.501"
        }, 
        {
            "text": "Instead of passing\ndata structures around", 
            "dur": "1.967", 
            "start": "794.567"
        }, 
        {
            "text": "and around and around, you pass\nin arguments to functions,", 
            "dur": "2.2", 
            "start": "796.534"
        }, 
        {
            "text": "and that sort of\nunwinds the thing", 
            "dur": "1.533", 
            "start": "798.734"
        }, 
        {
            "text": "that you were\ntrying to get done.", 
            "dur": "1.133", 
            "start": "800.267"
        }, 
        {
            "text": "You express\nyour program&#39;s intent", 
            "dur": "2.101", 
            "start": "801.4"
        }, 
        {
            "text": "in the form of\nnested functions", 
            "dur": "2.1", 
            "start": "803.501"
        }, 
        {
            "text": "that are going to\nunwind to some result,", 
            "dur": "2.866", 
            "start": "805.601"
        }, 
        {
            "text": "not linear code\nthat&#39;s going to be executed", 
            "dur": "3.134", 
            "start": "808.467"
        }, 
        {
            "text": "by passing in\nthe same data structures", 
            "dur": "1.933", 
            "start": "811.601"
        }, 
        {
            "text": "over and over\nand over again.", 
            "dur": "1.334", 
            "start": "813.534"
        }, 
        {
            "text": "So these sorts of things\nare not hard and fast rules", 
            "dur": "4.432", 
            "start": "814.868"
        }, 
        {
            "text": "about any programming\nlanguage.", 
            "dur": "1.134", 
            "start": "819.3"
        }, 
        {
            "text": "Like, you can have\nan endless debate about", 
            "dur": "2.133", 
            "start": "820.434"
        }, 
        {
            "text": "what makes something a\nfunctional programming language.", 
            "dur": "2.067", 
            "start": "822.567"
        }, 
        {
            "text": "Can it have side effects?", 
            "dur": "1.133", 
            "start": "824.634"
        }, 
        {
            "text": "Can it not have side effects?\nYou know--", 
            "dur": "2.8", 
            "start": "825.767"
        }, 
        {
            "text": "How completely does it\nsupport some particular", 
            "dur": "2.5", 
            "start": "828.567"
        }, 
        {
            "text": "set of macro languages,\nor hygienic macros,", 
            "dur": "2.167", 
            "start": "831.067"
        }, 
        {
            "text": "or whatever it is?", 
            "dur": "1.367", 
            "start": "833.234"
        }, 
        {
            "text": "Many people define functional\nlanguages differently,", 
            "dur": "2.933", 
            "start": "834.601"
        }, 
        {
            "text": "but for the intents\nand purposes here,", 
            "dur": "1.8", 
            "start": "837.534"
        }, 
        {
            "text": "we&#39;re just going to say\nit has closures,", 
            "dur": "1", 
            "start": "839.334"
        }, 
        {
            "text": "first class functions,", 
            "dur": "1.367", 
            "start": "840.334"
        }, 
        {
            "text": "and some concept of\nusing those sorts of things", 
            "dur": "3.133", 
            "start": "841.701"
        }, 
        {
            "text": "to compose behavior\nnicely together.", 
            "dur": "3.466", 
            "start": "844.834"
        }, 
        {
            "text": "So another important thing\nto remember about JavaScript", 
            "dur": "2.201", 
            "start": "848.3"
        }, 
        {
            "text": "is that everything\nis just an object.", 
            "dur": "2.233", 
            "start": "850.501"
        }, 
        {
            "text": "So there aren&#39;t a lot of\nkey concepts in JavaScript,", 
            "dur": "2.299", 
            "start": "852.734"
        }, 
        {
            "text": "and so you can think of it as\nsort of a lazy language design.", 
            "dur": "3.034", 
            "start": "855.033"
        }, 
        {
            "text": "It doesn&#39;t really have\na lot of specialized,", 
            "dur": "2.534", 
            "start": "858.067"
        }, 
        {
            "text": "compartmentalized things", 
            "dur": "1.599", 
            "start": "860.601"
        }, 
        {
            "text": "to hold on\nto different concepts", 
            "dur": "1", 
            "start": "862.2"
        }, 
        {
            "text": "that you might encounter.", 
            "dur": "1.2", 
            "start": "863.2"
        }, 
        {
            "text": "Instead, it just relies\non the same systems", 
            "dur": "1.367", 
            "start": "864.4"
        }, 
        {
            "text": "over and over again.", 
            "dur": "1.333", 
            "start": "865.767"
        }, 
        {
            "text": "One of those systems\nis this small type system,", 
            "dur": "4.134", 
            "start": "867.1"
        }, 
        {
            "text": "where objects are objects,\nthat first object literal there.", 
            "dur": "3.766", 
            "start": "871.234"
        }, 
        {
            "text": "It&#39;s an instance of object.\nArrays are objects,", 
            "dur": "2.501", 
            "start": "875"
        }, 
        {
            "text": "which means that arrays are\ninstances of objects, too.", 
            "dur": "2.333", 
            "start": "877.501"
        }, 
        {
            "text": "And functions\nare also objects.", 
            "dur": "2.333", 
            "start": "879.834"
        }, 
        {
            "text": "In this case,\nI&#39;ve got a paren here,", 
            "dur": "2.866", 
            "start": "882.167"
        }, 
        {
            "text": "which is going to create\na new expression.", 
            "dur": "2", 
            "start": "885.033"
        }, 
        {
            "text": "I&#39;ve got a function,\nwhich I define inside of here.", 
            "dur": "2.1", 
            "start": "887.033"
        }, 
        {
            "text": "It doesn&#39;t have a name.\nIt&#39;s an anonymous function.", 
            "dur": "1.601", 
            "start": "889.133"
        }, 
        {
            "text": "You can have anonymous\nfunctions in JavaScript.", 
            "dur": "2.6", 
            "start": "890.734"
        }, 
        {
            "text": "And the result\nof this expression", 
            "dur": "1.634", 
            "start": "893.334"
        }, 
        {
            "text": "is just going to be\nthat function object.", 
            "dur": "2.032", 
            "start": "894.968"
        }, 
        {
            "text": "And the function object also is\nan instance of the object type,", 
            "dur": "4.167", 
            "start": "897"
        }, 
        {
            "text": "which means that nearly\neverything in the system", 
            "dur": "1.866", 
            "start": "901.167"
        }, 
        {
            "text": "that you encounter\nis going to be an object.", 
            "dur": "2.034", 
            "start": "903.033"
        }, 
        {
            "text": "This is really powerful,\nbecause it means,", 
            "dur": "1.367", 
            "start": "905.067"
        }, 
        {
            "text": "as we&#39;ll see later,", 
            "dur": "1.333", 
            "start": "906.434"
        }, 
        {
            "text": "when we compose things,\nand everything is mutable,", 
            "dur": "2.366", 
            "start": "907.767"
        }, 
        {
            "text": "we can start\nto change the behavior", 
            "dur": "1.334", 
            "start": "910.133"
        }, 
        {
            "text": "of large parts of the system\nall at once.", 
            "dur": "2.3", 
            "start": "911.467"
        }, 
        {
            "text": "And every object in the system\nacts more or less like a map.", 
            "dur": "2.333", 
            "start": "913.767"
        }, 
        {
            "text": "There&#39;s no separate\nmap type in JavaScript.", 
            "dur": "1.933", 
            "start": "916.1"
        }, 
        {
            "text": "So if you want a map,\njust take an object.", 
            "dur": "2.1", 
            "start": "918.033"
        }, 
        {
            "text": "This is where--\nsort of where JSON comes from,", 
            "dur": "2.368", 
            "start": "920.133"
        }, 
        {
            "text": "this object literal syntax\nthat we&#39;ve got here,", 
            "dur": "2.4", 
            "start": "922.501"
        }, 
        {
            "text": "where we&#39;re\ndefining an object", 
            "dur": "1.199", 
            "start": "924.901"
        }, 
        {
            "text": "with a single property\nand a single value.", 
            "dur": "2.134", 
            "start": "926.1"
        }, 
        {
            "text": "It allows us to de-reference\nproperties the same way.", 
            "dur": "2.033", 
            "start": "928.234"
        }, 
        {
            "text": "So the data operator does\nalmost exactly the same thing", 
            "dur": "2.601", 
            "start": "930.267"
        }, 
        {
            "text": "as this map operator.", 
            "dur": "1.366", 
            "start": "932.868"
        }, 
        {
            "text": "It just finds a property\nby its name", 
            "dur": "1.966", 
            "start": "934.234"
        }, 
        {
            "text": "and returns it out\nthe other side.", 
            "dur": "1.401", 
            "start": "936.2"
        }, 
        {
            "text": "So in JavaScript,\neverything is an object.", 
            "dur": "2.799", 
            "start": "937.601"
        }, 
        {
            "text": "Objects operate like maps.\nThat&#39;s pretty cool.", 
            "dur": "2.834", 
            "start": "940.4"
        }, 
        {
            "text": "Arrays do exactly\nthe same thing.", 
            "dur": "1.433", 
            "start": "943.234"
        }, 
        {
            "text": "And arrays are very confusing\nwhen you start out working", 
            "dur": "3.1", 
            "start": "944.667"
        }, 
        {
            "text": "in JavaScript,", 
            "dur": "1.201", 
            "start": "947.767"
        }, 
        {
            "text": "because you think array\nis some separate thing", 
            "dur": "2.132", 
            "start": "948.968"
        }, 
        {
            "text": "over on the side.\nArrays are not objects.", 
            "dur": "2.567", 
            "start": "951.1"
        }, 
        {
            "text": "Arrays are this linear bag\nof memory", 
            "dur": "2.134", 
            "start": "953.667"
        }, 
        {
            "text": "that you&#39;re going to access\nwith an integer someplace.", 
            "dur": "2.566", 
            "start": "955.801"
        }, 
        {
            "text": "And as a result of that,", 
            "dur": "2.3", 
            "start": "958.367"
        }, 
        {
            "text": "you&#39;re not going to be surprised\nby some other identity.", 
            "dur": "3.333", 
            "start": "960.667"
        }, 
        {
            "text": "But you are, because\nvery often what happens is", 
            "dur": "2.067", 
            "start": "964"
        }, 
        {
            "text": "you go and extend an object.\nYou add a new property to it.", 
            "dur": "2.233", 
            "start": "966.067"
        }, 
        {
            "text": "In this case, we&#39;re going to add\nthis other greeting property", 
            "dur": "2.9", 
            "start": "968.3"
        }, 
        {
            "text": "to an object dynamically, and--\nor to an array dynamically.", 
            "dur": "4.1", 
            "start": "971.2"
        }, 
        {
            "text": "And as a result,\nwhen we go into a for-in loop,", 
            "dur": "3.067", 
            "start": "975.3"
        }, 
        {
            "text": "this is now an innumerable\nproperty on this array.", 
            "dur": "4.067", 
            "start": "978.367"
        }, 
        {
            "text": "We might get surprised, because\nwe see these other things", 
            "dur": "2.333", 
            "start": "982.434"
        }, 
        {
            "text": "showing up in our object.", 
            "dur": "2.533", 
            "start": "984.767"
        }, 
        {
            "text": "Well, that&#39;s weird.", 
            "dur": "1.8", 
            "start": "987.3"
        }, 
        {
            "text": "I mean, we iterated\nover the public properties.", 
            "dur": "2.967", 
            "start": "989.1"
        }, 
        {
            "text": "Isn&#39;t 0 just\nan integer index thing?", 
            "dur": "2.667", 
            "start": "992.067"
        }, 
        {
            "text": "It&#39;s not a public\nproperty, right?", 
            "dur": "1.6", 
            "start": "994.734"
        }, 
        {
            "text": "Well, remember that\neverything in JavaScript", 
            "dur": "2.1", 
            "start": "996.334"
        }, 
        {
            "text": "just sort of falls back\non these core concepts.", 
            "dur": "2.233", 
            "start": "998.434"
        }, 
        {
            "text": "And if you think about\nthe array integer indexing", 
            "dur": "4.234", 
            "start": "1000.667"
        }, 
        {
            "text": "working exactly the same way\nthat property indexing does,", 
            "dur": "2.933", 
            "start": "1004.901"
        }, 
        {
            "text": "it all makes sense.", 
            "dur": "1.134", 
            "start": "1007.834"
        }, 
        {
            "text": "Yeah,\nin the implementation,", 
            "dur": "1.332", 
            "start": "1008.968"
        }, 
        {
            "text": "there might be some special\nmachinery to make arrays", 
            "dur": "1.733", 
            "start": "1010.3"
        }, 
        {
            "text": "efficient\nor to pack them tightly,", 
            "dur": "1.601", 
            "start": "1012.033"
        }, 
        {
            "text": "so that you don&#39;t wind up\nslowing things down", 
            "dur": "2.334", 
            "start": "1013.634"
        }, 
        {
            "text": "unnecessarily.", 
            "dur": "1.332", 
            "start": "1015.968"
        }, 
        {
            "text": "But in the language semantics,", 
            "dur": "1.601", 
            "start": "1017.3"
        }, 
        {
            "text": "what happens here\nwhen I say,", 
            "dur": "1.166", 
            "start": "1018.901"
        }, 
        {
            "text": "&quot;Please give me item 0\nout of this list,&quot;", 
            "dur": "2.734", 
            "start": "1020.067"
        }, 
        {
            "text": "is that it turns\nthat 0 into a string,", 
            "dur": "2.199", 
            "start": "1022.801"
        }, 
        {
            "text": "and then does a map lookup.", 
            "dur": "1.801", 
            "start": "1025"
        }, 
        {
            "text": "That&#39;s all it does.", 
            "dur": "1.167", 
            "start": "1026.801"
        }, 
        {
            "text": "So the only magical thing\nabout arrays", 
            "dur": "1.332", 
            "start": "1027.968"
        }, 
        {
            "text": "versus any other kind of object\nin the system", 
            "dur": "2.1", 
            "start": "1029.3"
        }, 
        {
            "text": "is that,\nwhen I push onto an array", 
            "dur": "1.633", 
            "start": "1031.4"
        }, 
        {
            "text": "or I set the length property,", 
            "dur": "2.434", 
            "start": "1033.033"
        }, 
        {
            "text": "it actually affects\nwhich properties are visible.", 
            "dur": "2.401", 
            "start": "1035.467"
        }, 
        {
            "text": "The length property is\nthe only thing in an array", 
            "dur": "1.699", 
            "start": "1037.868"
        }, 
        {
            "text": "that&#39;s actually magic.", 
            "dur": "1.5", 
            "start": "1039.567"
        }, 
        {
            "text": "It has a little bit of syntax\nfor defining arrays naturally;", 
            "dur": "2.2", 
            "start": "1041.067"
        }, 
        {
            "text": "but other than that,\narrays are just objects.", 
            "dur": "2.267", 
            "start": "1043.267"
        }, 
        {
            "text": "Things get turned into strings\nand then de-referenced that way.", 
            "dur": "2.533", 
            "start": "1045.534"
        }, 
        {
            "text": "The spec is pretty clear\nabout this.", 
            "dur": "1.467", 
            "start": "1048.067"
        }, 
        {
            "text": "So JavaScript doesn&#39;t have\nthat many core concepts.", 
            "dur": "3.633", 
            "start": "1049.534"
        }, 
        {
            "text": "And if you understand them,\nyou can understand", 
            "dur": "1.634", 
            "start": "1053.167"
        }, 
        {
            "text": "what&#39;s going on\nin your system.", 
            "dur": "1.499", 
            "start": "1054.801"
        }, 
        {
            "text": "So we&#39;ve got mutable objects.\nWe&#39;ve got closures,", 
            "dur": "2.634", 
            "start": "1056.3"
        }, 
        {
            "text": "which are behavior\nthat carries data", 
            "dur": "1.567", 
            "start": "1058.934"
        }, 
        {
            "text": "and not data\nthat carries behavior.", 
            "dur": "2.266", 
            "start": "1060.501"
        }, 
        {
            "text": "We&#39;ve got mutable objects,", 
            "dur": "1.934", 
            "start": "1062.767"
        }, 
        {
            "text": "and we&#39;ve got everything\nbeing an object", 
            "dur": "1.766", 
            "start": "1064.701"
        }, 
        {
            "text": "and everything being an object\nalso being a map.", 
            "dur": "2.833", 
            "start": "1066.467"
        }, 
        {
            "text": "Okay, that&#39;s not a lot\nof concepts, so far,", 
            "dur": "2", 
            "start": "1069.3"
        }, 
        {
            "text": "for a programming language.", 
            "dur": "1.534", 
            "start": "1071.3"
        }, 
        {
            "text": "And we can use these to build\nsome really powerful stuff.", 
            "dur": "3.433", 
            "start": "1072.834"
        }, 
        {
            "text": "So I mentioned mutability,", 
            "dur": "1.2", 
            "start": "1076.267"
        }, 
        {
            "text": "and I said\neverything is mutable.", 
            "dur": "1.7", 
            "start": "1077.467"
        }, 
        {
            "text": "Just a really quick example,\nwe can add new properties", 
            "dur": "2.634", 
            "start": "1079.167"
        }, 
        {
            "text": "at runtime to every object.", 
            "dur": "1.399", 
            "start": "1081.801"
        }, 
        {
            "text": "Remember how I said that\nJavaScript runs top to bottom?", 
            "dur": "3.334", 
            "start": "1083.2"
        }, 
        {
            "text": "When you&#39;re reading\na program like this,", 
            "dur": "1.566", 
            "start": "1086.534"
        }, 
        {
            "text": "it&#39;s not like my object type\nsomehow was extended", 
            "dur": "2.534", 
            "start": "1088.1"
        }, 
        {
            "text": "and, therefore, every object\nof this type is going to have", 
            "dur": "1.733", 
            "start": "1090.634"
        }, 
        {
            "text": "one of these properties.", 
            "dur": "1.367", 
            "start": "1092.367"
        }, 
        {
            "text": "I&#39;m just adding a new property\nto the object directly.", 
            "dur": "4.167", 
            "start": "1093.734"
        }, 
        {
            "text": "So in this case,\nobject.item is being replaced,", 
            "dur": "3.766", 
            "start": "1097.901"
        }, 
        {
            "text": "and object.item2\nis simply being added.", 
            "dur": "3.1", 
            "start": "1101.667"
        }, 
        {
            "text": "These are exactly\nthe same operations,", 
            "dur": "1.667", 
            "start": "1104.767"
        }, 
        {
            "text": "as far as JavaScript\nis concerned.", 
            "dur": "1.933", 
            "start": "1106.434"
        }, 
        {
            "text": "The dot operator\njust finds you the object", 
            "dur": "2.167", 
            "start": "1108.367"
        }, 
        {
            "text": "and then assigns to it.\nThat&#39;s all it&#39;s doing.", 
            "dur": "2.067", 
            "start": "1110.534"
        }, 
        {
            "text": "Every object in the system\nis extensible.", 
            "dur": "1.9", 
            "start": "1112.601"
        }, 
        {
            "text": "Most of them are mutable.", 
            "dur": "2.066", 
            "start": "1114.501"
        }, 
        {
            "text": "Most of the values are mutable,\nand we run top to bottom.", 
            "dur": "3.9", 
            "start": "1116.567"
        }, 
        {
            "text": "So that means\nthat when I come down here,", 
            "dur": "2.633", 
            "start": "1120.467"
        }, 
        {
            "text": "and I delete a property\noff of the object,", 
            "dur": "1.801", 
            "start": "1123.1"
        }, 
        {
            "text": "the very next line\nisn&#39;t going to see it.", 
            "dur": "1.499", 
            "start": "1124.901"
        }, 
        {
            "text": "But if I had said\nconsole.log(obj.item)", 
            "dur": "1.934", 
            "start": "1126.4"
        }, 
        {
            "text": "one line above,\nit would see it there.", 
            "dur": "2.2", 
            "start": "1128.334"
        }, 
        {
            "text": "This is not\na compile time thing.", 
            "dur": "1.4", 
            "start": "1130.534"
        }, 
        {
            "text": "It&#39;s just doing what you said,\nline after line,", 
            "dur": "3.166", 
            "start": "1131.934"
        }, 
        {
            "text": "statement after statement,\nexpression after expression.", 
            "dur": "2.501", 
            "start": "1135.1"
        }, 
        {
            "text": "It seems really simple.", 
            "dur": "1.466", 
            "start": "1137.601"
        }, 
        {
            "text": "It seems pretty obvious, but\nvery few programming languages", 
            "dur": "2.333", 
            "start": "1139.067"
        }, 
        {
            "text": "that you might be using\nin a compiled environment", 
            "dur": "1.9", 
            "start": "1141.4"
        }, 
        {
            "text": "work this way.", 
            "dur": "1.967", 
            "start": "1143.3"
        }, 
        {
            "text": "So I mentioned that closures\nare the other side of classes,", 
            "dur": "2.1", 
            "start": "1145.267"
        }, 
        {
            "text": "whereas classes\nare sort of a nice way", 
            "dur": "1.467", 
            "start": "1147.367"
        }, 
        {
            "text": "of saying,\n&quot;Here&#39;s a structure of data.", 
            "dur": "1.566", 
            "start": "1148.834"
        }, 
        {
            "text": "&quot;I&#39;m going to associate\nsome properties with them,", 
            "dur": "1.733", 
            "start": "1150.4"
        }, 
        {
            "text": "and maybe they&#39;ll have\nsome type behavior as well.&quot;", 
            "dur": "3.501", 
            "start": "1152.133"
        }, 
        {
            "text": "In this case,\nwe&#39;re going to create something", 
            "dur": "2.566", 
            "start": "1155.634"
        }, 
        {
            "text": "that we would call a class\nin JavaScript.", 
            "dur": "1.634", 
            "start": "1158.2"
        }, 
        {
            "text": "We know it&#39;s a class,", 
            "dur": "1.299", 
            "start": "1159.834"
        }, 
        {
            "text": "because it&#39;s got\nan uppercase B for the name.", 
            "dur": "2.034", 
            "start": "1161.133"
        }, 
        {
            "text": "This is not a language\nenforced semantic.", 
            "dur": "1.434", 
            "start": "1163.167"
        }, 
        {
            "text": "JavaScript doesn&#39;t necessarily\nhave classes today.", 
            "dur": "4.033", 
            "start": "1164.601"
        }, 
        {
            "text": "This is just a convention.\nAnd as we&#39;ll see, conventions", 
            "dur": "1.9", 
            "start": "1168.634"
        }, 
        {
            "text": "figure large in day-to-day\nJavaScript programming.", 
            "dur": "3.533", 
            "start": "1170.534"
        }, 
        {
            "text": "So remember\nevery object is mutable.", 
            "dur": "1.867", 
            "start": "1174.067"
        }, 
        {
            "text": "So we&#39;re going to create\ndown here,", 
            "dur": "2.733", 
            "start": "1175.934"
        }, 
        {
            "text": "we&#39;re going to create a new\ninstance of our behavior class.", 
            "dur": "4.134", 
            "start": "1178.667"
        }, 
        {
            "text": "We&#39;re going to extend\nthe local object, this dot,", 
            "dur": "3.733", 
            "start": "1182.801"
        }, 
        {
            "text": "with the variable that\nwas passed in the configuration,", 
            "dur": "2", 
            "start": "1186.534"
        }, 
        {
            "text": "and then we&#39;re going to\nextend the object again", 
            "dur": "1.933", 
            "start": "1188.534"
        }, 
        {
            "text": "with a function called do it.", 
            "dur": "1.533", 
            "start": "1190.467"
        }, 
        {
            "text": "In this case,", 
            "dur": "1.334", 
            "start": "1192"
        }, 
        {
            "text": "when I call the do it method\nof my behavior instance,", 
            "dur": "3.4", 
            "start": "1193.334"
        }, 
        {
            "text": "it&#39;s then going to\nrun through,", 
            "dur": "1.1", 
            "start": "1196.734"
        }, 
        {
            "text": "and it&#39;s going to say\nthis.config", 
            "dur": "1.767", 
            "start": "1197.834"
        }, 
        {
            "text": "and go grab some flag\noff the configuration.", 
            "dur": "2.166", 
            "start": "1199.601"
        }, 
        {
            "text": "Okay, so we stored some property\nand some behavior on the object.", 
            "dur": "3.467", 
            "start": "1201.767"
        }, 
        {
            "text": "This looks a lot like\nwhat you might expect out", 
            "dur": "1.567", 
            "start": "1205.234"
        }, 
        {
            "text": "of another\nobject-oriented language.", 
            "dur": "1.399", 
            "start": "1206.801"
        }, 
        {
            "text": "The declaration syntax\nis a little bit funky,", 
            "dur": "2.167", 
            "start": "1208.2"
        }, 
        {
            "text": "but you sort of\nunderstand it, right?", 
            "dur": "1.434", 
            "start": "1210.367"
        }, 
        {
            "text": "I&#39;ve added a method.\nI&#39;ve added some data.", 
            "dur": "2.232", 
            "start": "1211.801"
        }, 
        {
            "text": "The data operates on\nthe local objects method.", 
            "dur": "2.067", 
            "start": "1214.033"
        }, 
        {
            "text": "Sweet--\nor other way around.", 
            "dur": "2.2", 
            "start": "1216.1"
        }, 
        {
            "text": "Strike that, reverse it.", 
            "dur": "2.634", 
            "start": "1218.3"
        }, 
        {
            "text": "New behavior, passing a flag,\nthen I call it false.", 
            "dur": "2.3", 
            "start": "1220.934"
        }, 
        {
            "text": "I get a behavior object,", 
            "dur": "1.4", 
            "start": "1223.234"
        }, 
        {
            "text": "and now I can call a method\nthat uses that behavior, right?", 
            "dur": "3.3", 
            "start": "1224.634"
        }, 
        {
            "text": "So it&#39;s going to look\nat the local object, this,", 
            "dur": "4.533", 
            "start": "1227.934"
        }, 
        {
            "text": "for the configuration,\nand it may change its behavior", 
            "dur": "2.7", 
            "start": "1232.467"
        }, 
        {
            "text": "based on that configuration by\npassing some other value to it.", 
            "dur": "3.367", 
            "start": "1235.167"
        }, 
        {
            "text": "Make sense?\nCool? All right.", 
            "dur": "2.599", 
            "start": "1238.534"
        }, 
        {
            "text": "So this is maybe a little bit\nmore idiomatic for JavaScript.", 
            "dur": "2.934", 
            "start": "1241.133"
        }, 
        {
            "text": "It&#39;s the flip side of that.", 
            "dur": "2.066", 
            "start": "1244.067"
        }, 
        {
            "text": "Instead of creating a class\nthat I created an instance of,", 
            "dur": "2.9", 
            "start": "1246.133"
        }, 
        {
            "text": "I&#39;m going to\ncreate a generator", 
            "dur": "2.801", 
            "start": "1249.033"
        }, 
        {
            "text": "that&#39;s going to pass me\nback a function object,", 
            "dur": "2.233", 
            "start": "1251.834"
        }, 
        {
            "text": "which is going to hold\non to the state.", 
            "dur": "1.6", 
            "start": "1254.067"
        }, 
        {
            "text": "I&#39;m not going to go\ncreate a class for it.", 
            "dur": "1.433", 
            "start": "1255.667"
        }, 
        {
            "text": "I&#39;m going to create\na behavior generator.", 
            "dur": "2.3", 
            "start": "1257.1"
        }, 
        {
            "text": "You can think of them\ndoing the same thing,", 
            "dur": "1.8", 
            "start": "1259.4"
        }, 
        {
            "text": "just the flip side of it.", 
            "dur": "1.134", 
            "start": "1261.2"
        }, 
        {
            "text": "So instead of saying\nnew behavior,", 
            "dur": "2.3", 
            "start": "1262.334"
        }, 
        {
            "text": "I&#39;m going to say\nbind me a behavior,", 
            "dur": "2.366", 
            "start": "1264.634"
        }, 
        {
            "text": "which when I call this,", 
            "dur": "2.1", 
            "start": "1267"
        }, 
        {
            "text": "note the lack of\nthe new keyword here,", 
            "dur": "2.3", 
            "start": "1269.1"
        }, 
        {
            "text": "I&#39;m going to pass\ninto configuration.", 
            "dur": "2.234", 
            "start": "1271.4"
        }, 
        {
            "text": "Like we saw earlier,", 
            "dur": "1.267", 
            "start": "1273.634"
        }, 
        {
            "text": "I&#39;m going to pass back out\na function object.", 
            "dur": "1.533", 
            "start": "1274.901"
        }, 
        {
            "text": "This is a new\nfunction object.", 
            "dur": "1.233", 
            "start": "1276.434"
        }, 
        {
            "text": "Every time I call this method,\nbind behavior,", 
            "dur": "2.067", 
            "start": "1277.667"
        }, 
        {
            "text": "it&#39;s going to pass me back out\na new function object.", 
            "dur": "2.433", 
            "start": "1279.734"
        }, 
        {
            "text": "So I&#39;m actually having a new\nfunction object allocated here,", 
            "dur": "4.233", 
            "start": "1282.167"
        }, 
        {
            "text": "and that function object\nis going to have, again,", 
            "dur": "2.167", 
            "start": "1286.4"
        }, 
        {
            "text": "some private storage,\nand that private storage is", 
            "dur": "2.134", 
            "start": "1288.567"
        }, 
        {
            "text": "going to hold on to\nthe config variable", 
            "dur": "2.133", 
            "start": "1290.701"
        }, 
        {
            "text": "that was passed into\nthe outer function, right?", 
            "dur": "2.067", 
            "start": "1292.834"
        }, 
        {
            "text": "Because each one of these\nis a new scope,", 
            "dur": "1.6", 
            "start": "1294.901"
        }, 
        {
            "text": "and because scopes\ncan hold on to the variables", 
            "dur": "2.233", 
            "start": "1296.501"
        }, 
        {
            "text": "that they were able to see\nwhen they were defined,", 
            "dur": "2.9", 
            "start": "1298.734"
        }, 
        {
            "text": "the function object\nthat gets passed out of here now", 
            "dur": "2.067", 
            "start": "1301.634"
        }, 
        {
            "text": "has a reference.", 
            "dur": "1.167", 
            "start": "1303.701"
        }, 
        {
            "text": "It&#39;s holding on to\nthat local state.", 
            "dur": "2.599", 
            "start": "1304.868"
        }, 
        {
            "text": "In this case, it&#39;s going to be\nthe object that was passed in.", 
            "dur": "2.566", 
            "start": "1307.467"
        }, 
        {
            "text": "This might go out of scope here\nin every other place", 
            "dur": "2.501", 
            "start": "1310.033"
        }, 
        {
            "text": "in my program.", 
            "dur": "1.3", 
            "start": "1312.534"
        }, 
        {
            "text": "I may not be able to get\na reference back to this object,", 
            "dur": "1.6", 
            "start": "1313.834"
        }, 
        {
            "text": "but my behavior, the B variable\nthat was passed back out,", 
            "dur": "4.833", 
            "start": "1315.434"
        }, 
        {
            "text": "will have access to that data", 
            "dur": "1.766", 
            "start": "1320.267"
        }, 
        {
            "text": "because it&#39;s being held on to\ninternally.", 
            "dur": "1.701", 
            "start": "1322.033"
        }, 
        {
            "text": "It&#39;s not going to be\ngarbage collected out", 
            "dur": "1.167", 
            "start": "1323.734"
        }, 
        {
            "text": "from underneath me.", 
            "dur": "1.299", 
            "start": "1324.901"
        }, 
        {
            "text": "Closures are the way to invert\nthe way you think", 
            "dur": "1.933", 
            "start": "1326.2"
        }, 
        {
            "text": "about your programs.", 
            "dur": "1.301", 
            "start": "1328.133"
        }, 
        {
            "text": "You don&#39;t create classes\nthat are state with data,", 
            "dur": "3.434", 
            "start": "1329.434"
        }, 
        {
            "text": "state with behavior attached.", 
            "dur": "1.499", 
            "start": "1332.868"
        }, 
        {
            "text": "You create behavior that holds\non to the state that it needs,", 
            "dur": "2.9", 
            "start": "1334.367"
        }, 
        {
            "text": "and you can pass\nthat behavior around,", 
            "dur": "1.334", 
            "start": "1337.267"
        }, 
        {
            "text": "because functions\nare first class.", 
            "dur": "3.633", 
            "start": "1338.601"
        }, 
        {
            "text": "So I mentioned earlier that\nthe last sort of big conceit", 
            "dur": "3.533", 
            "start": "1342.234"
        }, 
        {
            "text": "in the language is that we\ndon&#39;t have a way of saying,", 
            "dur": "2.667", 
            "start": "1345.767"
        }, 
        {
            "text": "hey, here&#39;s a class of stuff.", 
            "dur": "2.434", 
            "start": "1348.434"
        }, 
        {
            "text": "Instead we say,\nif you don&#39;t find it here,", 
            "dur": "2.733", 
            "start": "1350.868"
        }, 
        {
            "text": "don&#39;t look at my like\nchain of class inheritance.", 
            "dur": "6.466", 
            "start": "1353.601"
        }, 
        {
            "text": "Instead, just go look\nat that other object.", 
            "dur": "2.4", 
            "start": "1360.067"
        }, 
        {
            "text": "Remember how I said\nover and over again", 
            "dur": "1.9", 
            "start": "1362.467"
        }, 
        {
            "text": "that JavaScript\njust reads top to bottom?", 
            "dur": "2.766", 
            "start": "1364.367"
        }, 
        {
            "text": "I get some code.", 
            "dur": "1.301", 
            "start": "1367.133"
        }, 
        {
            "text": "The thing executes\nfront to back, top to bottom.", 
            "dur": "3.9", 
            "start": "1368.434"
        }, 
        {
            "text": "We&#39;re going to see\nthe exact same thing here,", 
            "dur": "1.699", 
            "start": "1372.334"
        }, 
        {
            "text": "because what happens every time\nyou call the .operator", 
            "dur": "2.734", 
            "start": "1374.033"
        }, 
        {
            "text": "is exactly the same thing.", 
            "dur": "1.134", 
            "start": "1376.767"
        }, 
        {
            "text": "I&#39;m going to create\nsome variable", 
            "dur": "1.933", 
            "start": "1377.901"
        }, 
        {
            "text": "that I&#39;m going\nto call my delegate.", 
            "dur": "1.299", 
            "start": "1379.834"
        }, 
        {
            "text": "It&#39;s an object.\nIt&#39;s got a single property.", 
            "dur": "2.134", 
            "start": "1381.133"
        }, 
        {
            "text": "Okay, cool.", 
            "dur": "1.5", 
            "start": "1383.267"
        }, 
        {
            "text": "There&#39;s a new ECMAScript 5\nmethod called object.create.", 
            "dur": "3.333", 
            "start": "1384.767"
        }, 
        {
            "text": "There&#39;s other ways to do this\nin older versions,", 
            "dur": "1.434", 
            "start": "1388.1"
        }, 
        {
            "text": "but they&#39;re a little bit\nmind bending,", 
            "dur": "1", 
            "start": "1389.534"
        }, 
        {
            "text": "and we won&#39;t go over them.", 
            "dur": "1.3", 
            "start": "1390.534"
        }, 
        {
            "text": "But object.create--\nthe easiest way to think of it", 
            "dur": "1.433", 
            "start": "1391.834"
        }, 
        {
            "text": "is that it creates a new object\nwhich will look at the object", 
            "dur": "3.766", 
            "start": "1393.267"
        }, 
        {
            "text": "that you pass\nas its first property", 
            "dur": "2.668", 
            "start": "1397.033"
        }, 
        {
            "text": "if you don&#39;t find a value\nwith this same property name", 
            "dur": "3.366", 
            "start": "1399.701"
        }, 
        {
            "text": "on that object.", 
            "dur": "1.534", 
            "start": "1403.067"
        }, 
        {
            "text": "So let&#39;s say--and in this case,\nI&#39;m going to create object 2", 
            "dur": "4.933", 
            "start": "1404.601"
        }, 
        {
            "text": "and have my delegate\nbe the delegate.", 
            "dur": "2.133", 
            "start": "1409.534"
        }, 
        {
            "text": "And so when I reference\na property out of object 2,", 
            "dur": "3.267", 
            "start": "1411.667"
        }, 
        {
            "text": "it&#39;s going to go look it\nup dynamically,", 
            "dur": "1.8", 
            "start": "1414.934"
        }, 
        {
            "text": "and if it doesn&#39;t find it\non object 2 directly,", 
            "dur": "2.466", 
            "start": "1416.734"
        }, 
        {
            "text": "it&#39;s going to go look it up\noff of the delegated 2 object.", 
            "dur": "2.701", 
            "start": "1419.2"
        }, 
        {
            "text": "It&#39;s going to go,\ndynamically go", 
            "dur": "1.466", 
            "start": "1421.901"
        }, 
        {
            "text": "and try and find it\nover there.", 
            "dur": "1.867", 
            "start": "1423.367"
        }, 
        {
            "text": "Well, we created\nanother object.", 
            "dur": "2.634", 
            "start": "1425.234"
        }, 
        {
            "text": "In this case, we&#39;re setting\na local property on that object,", 
            "dur": "4.165", 
            "start": "1427.868"
        }, 
        {
            "text": "whose name is item,\nwhose value is value.", 
            "dur": "2.901", 
            "start": "1432.033"
        }, 
        {
            "text": "And that means that\nwhen I look it up at runtime", 
            "dur": "1.767", 
            "start": "1434.934"
        }, 
        {
            "text": "directly top to bottom,\nleft to right,", 
            "dur": "2.133", 
            "start": "1436.701"
        }, 
        {
            "text": "what I see is that\nI don&#39;t get the value", 
            "dur": "2.166", 
            "start": "1438.834"
        }, 
        {
            "text": "that was set on my delegate.", 
            "dur": "1.133", 
            "start": "1441"
        }, 
        {
            "text": "I get the value that was\non the local object.", 
            "dur": "1.701", 
            "start": "1442.133"
        }, 
        {
            "text": "The .operator doesn&#39;t fail\non the local lookup.", 
            "dur": "2.533", 
            "start": "1443.834"
        }, 
        {
            "text": "It finds it on\nthe local object.", 
            "dur": "1.534", 
            "start": "1446.367"
        }, 
        {
            "text": "And instead of looking up\nthe chain, it says,", 
            "dur": "1.533", 
            "start": "1447.901"
        }, 
        {
            "text": "ah, I&#39;ll just give you this\nobject&#39;s value right back.", 
            "dur": "3.233", 
            "start": "1449.434"
        }, 
        {
            "text": "So JavaScript is\nincredibly dynamic", 
            "dur": "1.967", 
            "start": "1452.667"
        }, 
        {
            "text": "when it comes even to looking up\nproperties on objects.", 
            "dur": "2.499", 
            "start": "1454.634"
        }, 
        {
            "text": "There&#39;s not some fixed list\nof stuff that you can do.", 
            "dur": "2.368", 
            "start": "1457.133"
        }, 
        {
            "text": "You can change\nthe delegation,", 
            "dur": "1.233", 
            "start": "1459.501"
        }, 
        {
            "text": "and you can change\nthe properties", 
            "dur": "1.266", 
            "start": "1460.734"
        }, 
        {
            "text": "that are available\non every object", 
            "dur": "1.667", 
            "start": "1462"
        }, 
        {
            "text": "that you&#39;re delegating to,\nor your local object,", 
            "dur": "2.533", 
            "start": "1463.667"
        }, 
        {
            "text": "and that changes what happens\nwhen you go", 
            "dur": "1.434", 
            "start": "1466.2"
        }, 
        {
            "text": "and look stuff up\nat the very next line.", 
            "dur": "2.466", 
            "start": "1467.634"
        }, 
        {
            "text": "So in this case,", 
            "dur": "1.2", 
            "start": "1470.1"
        }, 
        {
            "text": "if I go and I change the value\non the delegate,", 
            "dur": "3.034", 
            "start": "1471.3"
        }, 
        {
            "text": "I change the item value\non the delegate,", 
            "dur": "1.5", 
            "start": "1474.334"
        }, 
        {
            "text": "remember that object 2\ndoesn&#39;t have a local property", 
            "dur": "2.199", 
            "start": "1475.834"
        }, 
        {
            "text": "called item.", 
            "dur": "1.067", 
            "start": "1478.033"
        }, 
        {
            "text": "If I fail on that lookup\non object 2,", 
            "dur": "2.267", 
            "start": "1479.1"
        }, 
        {
            "text": "it just goes and says, ah, okay,\nlet&#39;s go consult my delegate,", 
            "dur": "2.833", 
            "start": "1481.367"
        }, 
        {
            "text": "and that delegate is now\ngoing to have the new value.", 
            "dur": "2.067", 
            "start": "1484.2"
        }, 
        {
            "text": "So the new value has\nbeen shadowed all the way", 
            "dur": "1.967", 
            "start": "1486.267"
        }, 
        {
            "text": "through to everything else\nin the system", 
            "dur": "1.4", 
            "start": "1488.234"
        }, 
        {
            "text": "that is delegating\nto that object.", 
            "dur": "1.967", 
            "start": "1489.634"
        }, 
        {
            "text": "This is incredibly\npowerful.", 
            "dur": "1.432", 
            "start": "1491.601"
        }, 
        {
            "text": "The dynamic nature of\nJavaScript means that", 
            "dur": "2.301", 
            "start": "1493.033"
        }, 
        {
            "text": "because it reads\ntop to bottom,", 
            "dur": "1.3", 
            "start": "1495.334"
        }, 
        {
            "text": "because almost everything\nis mutable,", 
            "dur": "1.499", 
            "start": "1496.634"
        }, 
        {
            "text": "and because I can delegate\nto most other objects", 
            "dur": "2.234", 
            "start": "1498.133"
        }, 
        {
            "text": "when I create something,", 
            "dur": "1.434", 
            "start": "1500.367"
        }, 
        {
            "text": "I wind up in a place where\nI can create brand-new behavior", 
            "dur": "3.399", 
            "start": "1501.801"
        }, 
        {
            "text": "at runtime.", 
            "dur": "1.567", 
            "start": "1505.2"
        }, 
        {
            "text": "I can compose things on the next\nline that didn&#39;t exist before,", 
            "dur": "2.333", 
            "start": "1506.767"
        }, 
        {
            "text": "or I can change\nthe behavior of other objects", 
            "dur": "1.401", 
            "start": "1509.1"
        }, 
        {
            "text": "in the system,", 
            "dur": "1.2", 
            "start": "1510.501"
        }, 
        {
            "text": "based on what\nthey&#39;re delegating to.", 
            "dur": "1.399", 
            "start": "1511.701"
        }, 
        {
            "text": "This turns out to be\na great way", 
            "dur": "2.067", 
            "start": "1513.1"
        }, 
        {
            "text": "to go build up\na lot of the constructs", 
            "dur": "1.833", 
            "start": "1515.167"
        }, 
        {
            "text": "that we get in other languages\nfor ourselves,", 
            "dur": "1.701", 
            "start": "1517"
        }, 
        {
            "text": "because JavaScript may not\ngive them to us naturally.", 
            "dur": "3", 
            "start": "1518.701"
        }, 
        {
            "text": "This power is the sort of thing\nthat really drew me", 
            "dur": "2.733", 
            "start": "1521.701"
        }, 
        {
            "text": "to JavaScript\nas a young programmer.", 
            "dur": "2.534", 
            "start": "1524.434"
        }, 
        {
            "text": "I didn&#39;t really understand\nwhat I was dealing with.", 
            "dur": "1.866", 
            "start": "1526.968"
        }, 
        {
            "text": "I remember I had a friend\nwho told me,", 
            "dur": "2.199", 
            "start": "1528.834"
        }, 
        {
            "text": "after I&#39;d written some article\nabout how to do", 
            "dur": "3.201", 
            "start": "1531.033"
        }, 
        {
            "text": "signals and slots,\nsome sort of aspect-oriented", 
            "dur": "2.133", 
            "start": "1534.234"
        }, 
        {
            "text": "event style thing,\nhe&#39;s like,", 
            "dur": "2.467", 
            "start": "1536.367"
        }, 
        {
            "text": "&quot;Well, why didn&#39;t you just use\na closure for that?&quot;", 
            "dur": "1.466", 
            "start": "1538.834"
        }, 
        {
            "text": "And it took me a long time,", 
            "dur": "1.501", 
            "start": "1540.3"
        }, 
        {
            "text": "probably six months\nor more after that,", 
            "dur": "1.399", 
            "start": "1541.801"
        }, 
        {
            "text": "to sort of really understand\nwhat it was", 
            "dur": "1.933", 
            "start": "1543.2"
        }, 
        {
            "text": "that he meant when he said,\n&quot;Just use a closure for that.&quot;", 
            "dur": "2.067", 
            "start": "1545.133"
        }, 
        {
            "text": "I didn&#39;t understand\nthat you could hide data", 
            "dur": "1.434", 
            "start": "1547.2"
        }, 
        {
            "text": "inside of functions.", 
            "dur": "1.2", 
            "start": "1548.634"
        }, 
        {
            "text": "I didn&#39;t understand\nthat JavaScript sort of", 
            "dur": "1.199", 
            "start": "1549.834"
        }, 
        {
            "text": "ran top to bottom.", 
            "dur": "2.201", 
            "start": "1551.033"
        }, 
        {
            "text": "But these core concepts\nallow you to create", 
            "dur": "2.2", 
            "start": "1553.234"
        }, 
        {
            "text": "all sorts of\nreally powerful stuff,", 
            "dur": "3.933", 
            "start": "1555.434"
        }, 
        {
            "text": "assuming we understand what\nhappens with the word &quot;this.&quot;", 
            "dur": "3.134", 
            "start": "1559.367"
        }, 
        {
            "text": "So the word this\nis really special.", 
            "dur": "1.799", 
            "start": "1562.501"
        }, 
        {
            "text": "In order--Because we don&#39;t have\nclasses that wire up", 
            "dur": "2", 
            "start": "1564.3"
        }, 
        {
            "text": "this inheritance hierarchy,", 
            "dur": "1.434", 
            "start": "1566.3"
        }, 
        {
            "text": "and because we&#39;re always\ndelegating at runtime, right,", 
            "dur": "2", 
            "start": "1567.734"
        }, 
        {
            "text": "every .operator sort of\ndoes the dynamic lookup", 
            "dur": "3.5", 
            "start": "1569.734"
        }, 
        {
            "text": "on the local object--", 
            "dur": "1.2", 
            "start": "1573.234"
        }, 
        {
            "text": "looks at its delegate,\nlooks at its delegates.", 
            "dur": "1.833", 
            "start": "1574.434"
        }, 
        {
            "text": "The this object\nis a way of saying,", 
            "dur": "2.4", 
            "start": "1576.267"
        }, 
        {
            "text": "okay, whatever scope I&#39;m in,", 
            "dur": "2.834", 
            "start": "1578.667"
        }, 
        {
            "text": "execute the next lookup\nagainst the local object,", 
            "dur": "4.833", 
            "start": "1581.501"
        }, 
        {
            "text": "which means that the this\nkeyword in any function", 
            "dur": "3.367", 
            "start": "1586.334"
        }, 
        {
            "text": "isn&#39;t pointing\nat some fixed object.", 
            "dur": "2.133", 
            "start": "1589.701"
        }, 
        {
            "text": "It&#39;s not fixed\nwhen I necessarily say,", 
            "dur": "2.833", 
            "start": "1591.834"
        }, 
        {
            "text": "you know, create me an object.\nIt&#39;s promiscuous.", 
            "dur": "2.234", 
            "start": "1594.667"
        }, 
        {
            "text": "The this keyword points\nat whatever object my function", 
            "dur": "2.166", 
            "start": "1596.901"
        }, 
        {
            "text": "is being called through.", 
            "dur": "1.834", 
            "start": "1599.067"
        }, 
        {
            "text": "Right, remember function\nobjects are first class?", 
            "dur": "1.766", 
            "start": "1600.901"
        }, 
        {
            "text": "They don&#39;t actually sort of\ncarry around relationships", 
            "dur": "3.767", 
            "start": "1602.667"
        }, 
        {
            "text": "to their class or the thing\nthat they were defined in.", 
            "dur": "2.333", 
            "start": "1606.434"
        }, 
        {
            "text": "They hold their own data.", 
            "dur": "1.333", 
            "start": "1608.767"
        }, 
        {
            "text": "So the this keyword is\na nice little syntactic out", 
            "dur": "2.534", 
            "start": "1610.1"
        }, 
        {
            "text": "which lets you say, okay,\nwhenever I look up a property,", 
            "dur": "5.8", 
            "start": "1612.634"
        }, 
        {
            "text": "which happens to be\na function,", 
            "dur": "1.467", 
            "start": "1618.434"
        }, 
        {
            "text": "and I call it, the .operator\nfor method calls says", 
            "dur": "5.033", 
            "start": "1619.901"
        }, 
        {
            "text": "don&#39;t just return it.", 
            "dur": "1.366", 
            "start": "1624.934"
        }, 
        {
            "text": "But if I evaluate it directly,\nuse the .call property", 
            "dur": "4.201", 
            "start": "1626.3"
        }, 
        {
            "text": "of the function object", 
            "dur": "1.433", 
            "start": "1630.501"
        }, 
        {
            "text": "that&#39;s returned and call it\nin the scope of the object", 
            "dur": "2.833", 
            "start": "1631.934"
        }, 
        {
            "text": "on the left hand side\nof the .operator.", 
            "dur": "2.3", 
            "start": "1634.767"
        }, 
        {
            "text": "I know this is a little bit\nmaybe tricky,", 
            "dur": "1.567", 
            "start": "1637.067"
        }, 
        {
            "text": "but the easiest way to think\nabout this is that in order to", 
            "dur": "3", 
            "start": "1638.634"
        }, 
        {
            "text": "wire up this behavior\ncorrectly,", 
            "dur": "1.466", 
            "start": "1641.634"
        }, 
        {
            "text": "so that it sort of does what you\nexpect out of other languages,", 
            "dur": "3.334", 
            "start": "1643.1"
        }, 
        {
            "text": "we rely on the function\nbeing first class,", 
            "dur": "2", 
            "start": "1646.434"
        }, 
        {
            "text": "meaning it has its own call\nand apply methods.", 
            "dur": "2.633", 
            "start": "1648.434"
        }, 
        {
            "text": "You don&#39;t say necessarily,\nhey, function,", 
            "dur": "2.867", 
            "start": "1651.067"
        }, 
        {
            "text": "you&#39;re not going to work\nif you&#39;re not called inside", 
            "dur": "1.233", 
            "start": "1653.934"
        }, 
        {
            "text": "of some other object.", 
            "dur": "1.434", 
            "start": "1655.167"
        }, 
        {
            "text": "I can call any function in\nthe scope of any other object.", 
            "dur": "3.399", 
            "start": "1656.601"
        }, 
        {
            "text": "I can assign a function to any\nother object and then call it", 
            "dur": "2.868", 
            "start": "1660"
        }, 
        {
            "text": "through that object\ndynamically, right?", 
            "dur": "2.866", 
            "start": "1662.868"
        }, 
        {
            "text": "Everything is mutable.", 
            "dur": "1.6", 
            "start": "1665.734"
        }, 
        {
            "text": "Functions are first class.\nWhy not?", 
            "dur": "1.5", 
            "start": "1667.334"
        }, 
        {
            "text": "So in order to get\nthat to execute", 
            "dur": "1.366", 
            "start": "1668.834"
        }, 
        {
            "text": "against the right object,", 
            "dur": "1.2", 
            "start": "1670.2"
        }, 
        {
            "text": "you use the this keyword\nto go grab", 
            "dur": "1.568", 
            "start": "1671.4"
        }, 
        {
            "text": "the value out of the thing", 
            "dur": "1.599", 
            "start": "1672.968"
        }, 
        {
            "text": "that was on\nthe left hand side of dot,", 
            "dur": "1.8", 
            "start": "1674.567"
        }, 
        {
            "text": "which is exactly\nthe same thing as saying", 
            "dur": "1.867", 
            "start": "1676.367"
        }, 
        {
            "text": "please call my function,", 
            "dur": "1.133", 
            "start": "1678.234"
        }, 
        {
            "text": "which I pulled\nout of that object,", 
            "dur": "1.4", 
            "start": "1679.367"
        }, 
        {
            "text": "in the scope of the object\non the left hand side.", 
            "dur": "2.767", 
            "start": "1680.767"
        }, 
        {
            "text": "Cool?", 
            "dur": "1.666", 
            "start": "1683.534"
        }, 
        {
            "text": "All right.", 
            "dur": "1.501", 
            "start": "1685.2"
        }, 
        {
            "text": "Okay.", 
            "dur": "1.866", 
            "start": "1686.701"
        }, 
        {
            "text": "So all this fits together\nin ways that allow us", 
            "dur": "2.234", 
            "start": "1688.567"
        }, 
        {
            "text": "to recreate a lot of this stuff\nthat we expected", 
            "dur": "1.866", 
            "start": "1690.801"
        }, 
        {
            "text": "in other languages.", 
            "dur": "1", 
            "start": "1692.667"
        }, 
        {
            "text": "A lot of this\nis convention.", 
            "dur": "1.366", 
            "start": "1693.667"
        }, 
        {
            "text": "A lot of this isn&#39;t necessarily\nthe sort of thing", 
            "dur": "1.568", 
            "start": "1695.033"
        }, 
        {
            "text": "that you&#39;re going\nto have language level", 
            "dur": "1.633", 
            "start": "1696.601"
        }, 
        {
            "text": "or syntactic support for,", 
            "dur": "1.367", 
            "start": "1698.234"
        }, 
        {
            "text": "but if you understand\nwhat&#39;s going on there,", 
            "dur": "1.866", 
            "start": "1699.601"
        }, 
        {
            "text": "those sort of core little ideas\nabout mutability,", 
            "dur": "4.666", 
            "start": "1701.467"
        }, 
        {
            "text": "scope, functions as first class\ncitizens, and dynamic behavior,", 
            "dur": "5.934", 
            "start": "1706.133"
        }, 
        {
            "text": "we can start to recreate\nthings like classes.", 
            "dur": "2.767", 
            "start": "1712.067"
        }, 
        {
            "text": "So here we&#39;ve got an item type,", 
            "dur": "2.034", 
            "start": "1714.834"
        }, 
        {
            "text": "which is we&#39;re going to\nthink of as a class.", 
            "dur": "2.833", 
            "start": "1716.868"
        }, 
        {
            "text": "It&#39;s not really\ncalled a class.", 
            "dur": "1.8", 
            "start": "1719.701"
        }, 
        {
            "text": "It&#39;s just a function.\nIt&#39;s got the word function.", 
            "dur": "1.699", 
            "start": "1721.501"
        }, 
        {
            "text": "As you saw earlier,", 
            "dur": "1.367", 
            "start": "1723.2"
        }, 
        {
            "text": "when you use the word new\nin front of any function,", 
            "dur": "2.067", 
            "start": "1724.567"
        }, 
        {
            "text": "it sort of creates an object,", 
            "dur": "1.533", 
            "start": "1726.634"
        }, 
        {
            "text": "calls that function inside\nthe context of that object,", 
            "dur": "2.233", 
            "start": "1728.167"
        }, 
        {
            "text": "and then returns\nthat object back to you.", 
            "dur": "1.9", 
            "start": "1730.4"
        }, 
        {
            "text": "That&#39;s the way to think\nabout the new keyword.", 
            "dur": "1.967", 
            "start": "1732.3"
        }, 
        {
            "text": "So we&#39;re just going to\ncreate a function,", 
            "dur": "1.833", 
            "start": "1734.267"
        }, 
        {
            "text": "which we&#39;re going to call\nwith new sometime later,", 
            "dur": "2.834", 
            "start": "1736.1"
        }, 
        {
            "text": "and inside of it\nwe&#39;re going to execute", 
            "dur": "1.6", 
            "start": "1738.934"
        }, 
        {
            "text": "a couple of other functions.", 
            "dur": "1.499", 
            "start": "1740.534"
        }, 
        {
            "text": "Now, we just saw .call,\nand .call calls", 
            "dur": "2.768", 
            "start": "1742.033"
        }, 
        {
            "text": "those other functions\nin the scope of the object", 
            "dur": "2.332", 
            "start": "1744.801"
        }, 
        {
            "text": "that we&#39;re being executed in\nor that we want to pass in.", 
            "dur": "3.067", 
            "start": "1747.133"
        }, 
        {
            "text": "In this case, we&#39;re going to\npass in the local object,", 
            "dur": "2.668", 
            "start": "1750.2"
        }, 
        {
            "text": "and we&#39;re going\nto do it twice,", 
            "dur": "1.199", 
            "start": "1752.868"
        }, 
        {
            "text": "which means that\ninside of tract,", 
            "dur": "2.333", 
            "start": "1754.067"
        }, 
        {
            "text": "we&#39;re going to assign\na new property to this--", 
            "dur": "3.6", 
            "start": "1756.4"
        }, 
        {
            "text": "which is to say the object\nthat was passed in--", 
            "dur": "2.434", 
            "start": "1760"
        }, 
        {
            "text": "and inside of logged, we&#39;re\ngoing to assign a new method", 
            "dur": "3.434", 
            "start": "1762.434"
        }, 
        {
            "text": "where that method is going to go\ndynamically look up the ID", 
            "dur": "3.265", 
            "start": "1765.868"
        }, 
        {
            "text": "and log it out.", 
            "dur": "2.034", 
            "start": "1769.133"
        }, 
        {
            "text": "So we call these mix-ins.", 
            "dur": "1.3", 
            "start": "1771.167"
        }, 
        {
            "text": "These two methods up here\nwere written in a way", 
            "dur": "1.9", 
            "start": "1772.467"
        }, 
        {
            "text": "that they don&#39;t delegate\nto anything else.", 
            "dur": "1.601", 
            "start": "1774.367"
        }, 
        {
            "text": "They don&#39;t assume anything about\nthe behavior of their methods", 
            "dur": "5", 
            "start": "1775.968"
        }, 
        {
            "text": "or the properties\nthat they define.", 
            "dur": "2.065", 
            "start": "1780.968"
        }, 
        {
            "text": "And instead,\nthey just add stuff.", 
            "dur": "1.668", 
            "start": "1783.033"
        }, 
        {
            "text": "They just add stuff\ndynamically", 
            "dur": "1.366", 
            "start": "1784.701"
        }, 
        {
            "text": "when they&#39;re invoked against\nsome other object.", 
            "dur": "4.267", 
            "start": "1786.067"
        }, 
        {
            "text": "So I could call them\nin any other context,", 
            "dur": "1.866", 
            "start": "1790.334"
        }, 
        {
            "text": "but in this case, I can use them\nin the item type constructor", 
            "dur": "3.734", 
            "start": "1792.2"
        }, 
        {
            "text": "to extend the item type\nwith some new stuff.", 
            "dur": "3.133", 
            "start": "1795.934"
        }, 
        {
            "text": "We saw earlier how\ndelegation allows you to", 
            "dur": "2.901", 
            "start": "1799.067"
        }, 
        {
            "text": "create new delegate\nrelationships between things,", 
            "dur": "4.065", 
            "start": "1801.968"
        }, 
        {
            "text": "and functions also have\nthis idea of a prototype.", 
            "dur": "2.234", 
            "start": "1806.033"
        }, 
        {
            "text": "This is the exposed version\nof the thing we saw", 
            "dur": "1.667", 
            "start": "1808.267"
        }, 
        {
            "text": "before with object.create,", 
            "dur": "1.366", 
            "start": "1809.934"
        }, 
        {
            "text": "where I can say,\nplease wire up this relationship", 
            "dur": "1.733", 
            "start": "1811.3"
        }, 
        {
            "text": "so that this object,\nwhen you don&#39;t find it here,", 
            "dur": "2.768", 
            "start": "1813.033"
        }, 
        {
            "text": "looks at that thing over there.", 
            "dur": "2.299", 
            "start": "1815.801"
        }, 
        {
            "text": "So if we create\na new item type,", 
            "dur": "3.334", 
            "start": "1818.1"
        }, 
        {
            "text": "what we&#39;ll see is\nthat it has an ID,", 
            "dur": "2.233", 
            "start": "1821.434"
        }, 
        {
            "text": "and it has a type associated\nwith property added to them,", 
            "dur": "3.767", 
            "start": "1823.667"
        }, 
        {
            "text": "which is pretty good.\nAnd if we create another one,", 
            "dur": "2.766", 
            "start": "1827.434"
        }, 
        {
            "text": "the counter is incremented,", 
            "dur": "1.434", 
            "start": "1830.2"
        }, 
        {
            "text": "and the type is still\nassigned to the same value.", 
            "dur": "3.499", 
            "start": "1831.634"
        }, 
        {
            "text": "But if we create\na new sub item type,", 
            "dur": "1.867", 
            "start": "1835.133"
        }, 
        {
            "text": "what we see is that,\nbecause the prototype created", 
            "dur": "4.701", 
            "start": "1837"
        }, 
        {
            "text": "a new property called type\nwith a new value,", 
            "dur": "4.699", 
            "start": "1841.701"
        }, 
        {
            "text": "again, the delegate system\nfaults on the local object,", 
            "dur": "3.9", 
            "start": "1846.4"
        }, 
        {
            "text": "looks at the object&#39;s\nprototype--in this case,", 
            "dur": "2.867", 
            "start": "1850.3"
        }, 
        {
            "text": "SubItemType.prototype--\npulls it out of there", 
            "dur": "3.133", 
            "start": "1853.167"
        }, 
        {
            "text": "and doesn&#39;t fault all the way\nthrough to ItemType.prototype.", 
            "dur": "3.434", 
            "start": "1856.3"
        }, 
        {
            "text": "So we can compose\nthese things together in a way", 
            "dur": "1.767", 
            "start": "1859.734"
        }, 
        {
            "text": "that gives us something like\nclassical inheritance.", 
            "dur": "2.766", 
            "start": "1861.501"
        }, 
        {
            "text": "It&#39;s not exactly\nthe same thing.", 
            "dur": "1.234", 
            "start": "1864.267"
        }, 
        {
            "text": "All this is dynamic.", 
            "dur": "1.133", 
            "start": "1865.501"
        }, 
        {
            "text": "I can go and change\nthese prototypes.", 
            "dur": "1.267", 
            "start": "1866.634"
        }, 
        {
            "text": "I can change\nthese objects later.", 
            "dur": "2.299", 
            "start": "1867.901"
        }, 
        {
            "text": "But I&#39;ve got the ability\nto factor out code", 
            "dur": "2.467", 
            "start": "1870.2"
        }, 
        {
            "text": "into something like a macro\nor a trait, using mix-ins,", 
            "dur": "3.6", 
            "start": "1872.667"
        }, 
        {
            "text": "and I&#39;ve got the ability\nto create", 
            "dur": "2", 
            "start": "1876.267"
        }, 
        {
            "text": "an entire subclass\nrelationship,", 
            "dur": "2.601", 
            "start": "1878.267"
        }, 
        {
            "text": "where I define\nnew function types", 
            "dur": "1.733", 
            "start": "1880.868"
        }, 
        {
            "text": "which defer\nto their super classes", 
            "dur": "2.532", 
            "start": "1882.601"
        }, 
        {
            "text": "for a lot of their behavior.", 
            "dur": "1.701", 
            "start": "1885.133"
        }, 
        {
            "text": "All right, we&#39;re starting\nto get someplace.", 
            "dur": "1.7", 
            "start": "1886.834"
        }, 
        {
            "text": "These core concepts have\ngiven us the ability to", 
            "dur": "1.833", 
            "start": "1888.534"
        }, 
        {
            "text": "define things that the language\ndidn&#39;t give us naturally,", 
            "dur": "3.4", 
            "start": "1890.367"
        }, 
        {
            "text": "but we can go get\nfor ourselves.", 
            "dur": "2.633", 
            "start": "1893.767"
        }, 
        {
            "text": "You know how I said\nthat everything is mutable,", 
            "dur": "2.034", 
            "start": "1896.4"
        }, 
        {
            "text": "more or less?", 
            "dur": "2.1", 
            "start": "1898.434"
        }, 
        {
            "text": "That means that we can\ngo and extend the stuff", 
            "dur": "2.233", 
            "start": "1900.534"
        }, 
        {
            "text": "that is deferred to\nby almost every object", 
            "dur": "2.333", 
            "start": "1902.767"
        }, 
        {
            "text": "in the system, right?", 
            "dur": "1", 
            "start": "1905.1"
        }, 
        {
            "text": "Remember, arrays\nare objects.", 
            "dur": "2", 
            "start": "1906.1"
        }, 
        {
            "text": "Objects are objects.\nFunctions are objects.", 
            "dur": "2.701", 
            "start": "1908.1"
        }, 
        {
            "text": "Well, those things\nhave prototypes, too.", 
            "dur": "1.666", 
            "start": "1910.801"
        }, 
        {
            "text": "They have exposed objects,", 
            "dur": "1.434", 
            "start": "1912.467"
        }, 
        {
            "text": "which are--they defer to\nwhen you don&#39;t find a property", 
            "dur": "2.533", 
            "start": "1913.901"
        }, 
        {
            "text": "in the local object.", 
            "dur": "1.467", 
            "start": "1916.434"
        }, 
        {
            "text": "So a radar prototype is, again,\nan object which is mutable,", 
            "dur": "3.466", 
            "start": "1917.901"
        }, 
        {
            "text": "and every instance of array,\nevery array in the system", 
            "dur": "3.1", 
            "start": "1921.367"
        }, 
        {
            "text": "that faults on some property\nis going to go look it up off", 
            "dur": "3.167", 
            "start": "1924.467"
        }, 
        {
            "text": "of this object instead.\nSo I can extend it.", 
            "dur": "2.666", 
            "start": "1927.634"
        }, 
        {
            "text": "I can say array.prototype.clear\nis a new function.", 
            "dur": "2.501", 
            "start": "1930.3"
        }, 
        {
            "text": "I can extend every single\narray in the system at runtime,", 
            "dur": "3.766", 
            "start": "1932.801"
        }, 
        {
            "text": "because the next line\nis going to look it up", 
            "dur": "2.1", 
            "start": "1936.567"
        }, 
        {
            "text": "through exactly\nthe same mechanism", 
            "dur": "3.1", 
            "start": "1938.667"
        }, 
        {
            "text": "as everything else, right?", 
            "dur": "1.333", 
            "start": "1941.767"
        }, 
        {
            "text": "This is not me\nchanging the type of array.", 
            "dur": "2.634", 
            "start": "1943.1"
        }, 
        {
            "text": "I&#39;m just extending\nit dynamically.", 
            "dur": "1.733", 
            "start": "1945.734"
        }, 
        {
            "text": "I&#39;m creating a new thing\nfor you to hit,", 
            "dur": "2.633", 
            "start": "1947.467"
        }, 
        {
            "text": "when you don&#39;t find the property\nin the local array object.", 
            "dur": "3.1", 
            "start": "1950.1"
        }, 
        {
            "text": "And I&#39;m going to add to.", 
            "dur": "1.367", 
            "start": "1953.2"
        }, 
        {
            "text": "In this case, they&#39;re\ngoing to return new arrays", 
            "dur": "1.767", 
            "start": "1954.567"
        }, 
        {
            "text": "when they&#39;re done, and so\nI can chain them together.", 
            "dur": "2.634", 
            "start": "1956.334"
        }, 
        {
            "text": "And so this is how\nyou can sort of create", 
            "dur": "1.366", 
            "start": "1958.968"
        }, 
        {
            "text": "little dynamic languages\nin JavaScript.", 
            "dur": "2.467", 
            "start": "1960.334"
        }, 
        {
            "text": "You can create DSLs\nin JavaScript", 
            "dur": "1.332", 
            "start": "1962.801"
        }, 
        {
            "text": "by changing the things\nthat you delegate to.", 
            "dur": "2.434", 
            "start": "1964.133"
        }, 
        {
            "text": "If you create new objects,", 
            "dur": "1.566", 
            "start": "1966.567"
        }, 
        {
            "text": "and they delegate\nto some prototype,", 
            "dur": "1.534", 
            "start": "1968.133"
        }, 
        {
            "text": "and you can mutate\nthat prototype,", 
            "dur": "1.567", 
            "start": "1969.667"
        }, 
        {
            "text": "well, then you can change almost\neverything about the system.", 
            "dur": "4.1", 
            "start": "1971.234"
        }, 
        {
            "text": "Yes, you can change almost\neverything about the system.", 
            "dur": "3.167", 
            "start": "1975.334"
        }, 
        {
            "text": "And, yes, it is a huge\nmaintainability nightmare.", 
            "dur": "2.333", 
            "start": "1978.501"
        }, 
        {
            "text": "This is really good\nwhen your code can do it.", 
            "dur": "2.433", 
            "start": "1980.834"
        }, 
        {
            "text": "This can be a huge problem\nwhen everybody&#39;s code can do it,", 
            "dur": "3", 
            "start": "1983.267"
        }, 
        {
            "text": "especially as you get\ninto larger code bases.", 
            "dur": "2.2", 
            "start": "1986.267"
        }, 
        {
            "text": "So collectively,\nas a community,", 
            "dur": "2.633", 
            "start": "1988.467"
        }, 
        {
            "text": "the JavaScript world has started\nto learn these patterns", 
            "dur": "2.701", 
            "start": "1991.1"
        }, 
        {
            "text": "of practice, which they say,\nplease don&#39;t ever go", 
            "dur": "3.433", 
            "start": "1993.801"
        }, 
        {
            "text": "and mutate array.prototype.", 
            "dur": "2.133", 
            "start": "1997.234"
        }, 
        {
            "text": "Please don&#39;t change\nobject.prototype,", 
            "dur": "2.134", 
            "start": "1999.367"
        }, 
        {
            "text": "so that you don&#39;t wind up", 
            "dur": "1.966", 
            "start": "2001.501"
        }, 
        {
            "text": "stepping on somebody\nelse&#39;s toes,", 
            "dur": "1.367", 
            "start": "2003.467"
        }, 
        {
            "text": "stepping on somebody\nelse&#39;s extensions.", 
            "dur": "1.733", 
            "start": "2004.834"
        }, 
        {
            "text": "But this is power\nthat we&#39;d really like to have.", 
            "dur": "1.8", 
            "start": "2006.567"
        }, 
        {
            "text": "This is power that\nwe&#39;d really like to be able", 
            "dur": "1.434", 
            "start": "2008.367"
        }, 
        {
            "text": "to take advantage of.", 
            "dur": "1.199", 
            "start": "2009.801"
        }, 
        {
            "text": "Being able to extend\nmethods in the system", 
            "dur": "1.601", 
            "start": "2011"
        }, 
        {
            "text": "is the sort of thing", 
            "dur": "1.399", 
            "start": "2012.601"
        }, 
        {
            "text": "that we&#39;ve seen work pretty well\nin languages like C#,", 
            "dur": "1.934", 
            "start": "2014"
        }, 
        {
            "text": "where they have extension\nmethods to interfaces.", 
            "dur": "2.533", 
            "start": "2015.934"
        }, 
        {
            "text": "We really want to be able\nto use this,", 
            "dur": "1.034", 
            "start": "2018.467"
        }, 
        {
            "text": "because it shortens up our code.", 
            "dur": "1.233", 
            "start": "2019.501"
        }, 
        {
            "text": "It makes it dynamic.\nIt makes it easy to read,", 
            "dur": "1.733", 
            "start": "2020.734"
        }, 
        {
            "text": "and it makes it possible\nto build up the language", 
            "dur": "2.401", 
            "start": "2022.467"
        }, 
        {
            "text": "to meet us halfway,", 
            "dur": "1.966", 
            "start": "2024.868"
        }, 
        {
            "text": "which is a great feature\nof many dynamic languages.", 
            "dur": "2.733", 
            "start": "2026.834"
        }, 
        {
            "text": "So JavaScript has this\nincredible dynamic behavior,", 
            "dur": "4.6", 
            "start": "2029.567"
        }, 
        {
            "text": "which gives us\na lot of power,", 
            "dur": "1.334", 
            "start": "2034.167"
        }, 
        {
            "text": "and so we wind up using it\nto do all sorts of things", 
            "dur": "2.899", 
            "start": "2035.501"
        }, 
        {
            "text": "that the language\ndoesn&#39;t necessarily,", 
            "dur": "2", 
            "start": "2038.4"
        }, 
        {
            "text": "because it&#39;s a little language,\nhave built-in support for.", 
            "dur": "2.667", 
            "start": "2040.4"
        }, 
        {
            "text": "So in this case,\nI&#39;m going to, again,", 
            "dur": "2.734", 
            "start": "2043.067"
        }, 
        {
            "text": "create an expression\nthat has an anonymous function", 
            "dur": "2.299", 
            "start": "2045.801"
        }, 
        {
            "text": "defined inside of it.", 
            "dur": "1.267", 
            "start": "2048.1"
        }, 
        {
            "text": "But, instead,\nI&#39;m going to do some stuff here", 
            "dur": "1.4", 
            "start": "2049.367"
        }, 
        {
            "text": "where I&#39;m going to define\na local object, right?", 
            "dur": "2.8", 
            "start": "2050.767"
        }, 
        {
            "text": "We&#39;ve seen this before,", 
            "dur": "1.301", 
            "start": "2053.567"
        }, 
        {
            "text": "that might get captured\nin an enclosure;", 
            "dur": "1.265", 
            "start": "2054.868"
        }, 
        {
            "text": "and, in fact,\nit&#39;s going to here.", 
            "dur": "2.301", 
            "start": "2056.133"
        }, 
        {
            "text": "But the little piece\nof sophistry", 
            "dur": "3.534", 
            "start": "2058.434"
        }, 
        {
            "text": "at the bottom there,", 
            "dur": "1.266", 
            "start": "2061.968"
        }, 
        {
            "text": "or in the middle there,\nwhere I end the function,", 
            "dur": "3.467", 
            "start": "2063.234"
        }, 
        {
            "text": "I end the expression,", 
            "dur": "1.399", 
            "start": "2066.701"
        }, 
        {
            "text": "which is going to return\nthat function", 
            "dur": "2.701", 
            "start": "2068.1"
        }, 
        {
            "text": "as the result of\nthat expression,", 
            "dur": "1.533", 
            "start": "2070.801"
        }, 
        {
            "text": "and then I invoke it\nimmediately,", 
            "dur": "1.933", 
            "start": "2072.334"
        }, 
        {
            "text": "means that what happens here", 
            "dur": "1.267", 
            "start": "2074.267"
        }, 
        {
            "text": "is that I&#39;ve sort of\ncreated some code", 
            "dur": "2.167", 
            "start": "2075.534"
        }, 
        {
            "text": "and just run it directly.", 
            "dur": "1.766", 
            "start": "2077.701"
        }, 
        {
            "text": "I&#39;ve just top to bottom", 
            "dur": "1.334", 
            "start": "2079.467"
        }, 
        {
            "text": "run some code, which is going to\ndefine a local variable,", 
            "dur": "3.299", 
            "start": "2080.801"
        }, 
        {
            "text": "create a function--\nwhich is not local,", 
            "dur": "1.834", 
            "start": "2084.1"
        }, 
        {
            "text": "which is going to get exported\nback out to the global scope,", 
            "dur": "3.166", 
            "start": "2085.934"
        }, 
        {
            "text": "but that function can see\nthe local stuff, right?", 
            "dur": "2.667", 
            "start": "2089.1"
        }, 
        {
            "text": "So I can sort of hide away\nin my own private stuff", 
            "dur": "2.567", 
            "start": "2091.767"
        }, 
        {
            "text": "inside of my module\nby putting it in this pattern,", 
            "dur": "1.534", 
            "start": "2094.334"
        }, 
        {
            "text": "using VAR for the stuff.", 
            "dur": "1.599", 
            "start": "2095.868"
        }, 
        {
            "text": "It&#39;s a local and emitting VAR\nfor the stuff that&#39;s global.", 
            "dur": "2.9", 
            "start": "2097.467"
        }, 
        {
            "text": "That&#39;s pretty good.", 
            "dur": "1.367", 
            "start": "2100.367"
        }, 
        {
            "text": "We&#39;ve got some sense\nof modularity, again,", 
            "dur": "1.7", 
            "start": "2101.734"
        }, 
        {
            "text": "built on this few set of\nprototypical properties", 
            "dur": "4.067", 
            "start": "2103.434"
        }, 
        {
            "text": "of the language:", 
            "dur": "1.333", 
            "start": "2107.501"
        }, 
        {
            "text": "mutability, functions\nas first class and functions", 
            "dur": "2.233", 
            "start": "2108.834"
        }, 
        {
            "text": "as the only things\nthat create scope,", 
            "dur": "1.901", 
            "start": "2111.067"
        }, 
        {
            "text": "the ability to modify\nnearly everything,", 
            "dur": "3.165", 
            "start": "2112.968"
        }, 
        {
            "text": "and closures as a way\nto bind behavior to data", 
            "dur": "4.701", 
            "start": "2116.133"
        }, 
        {
            "text": "and not the other way around.\nOkay, so as you can imagine,", 
            "dur": "4.134", 
            "start": "2120.834"
        }, 
        {
            "text": "we&#39;ve seen a couple\nof places here now", 
            "dur": "1.366", 
            "start": "2124.968"
        }, 
        {
            "text": "with classes\nand now with modules,", 
            "dur": "1.733", 
            "start": "2126.334"
        }, 
        {
            "text": "where we could start to use\nthese patterns together", 
            "dur": "2.634", 
            "start": "2128.067"
        }, 
        {
            "text": "to start to build up\nour little library of stuff", 
            "dur": "2.8", 
            "start": "2130.701"
        }, 
        {
            "text": "to help us\nmeet the challenges", 
            "dur": "1.266", 
            "start": "2133.501"
        }, 
        {
            "text": "that we&#39;ve got in\nthe large code base;", 
            "dur": "1.5", 
            "start": "2134.767"
        }, 
        {
            "text": "and, in fact,\nnearly every large code base", 
            "dur": "1.9", 
            "start": "2136.267"
        }, 
        {
            "text": "has a library like this.", 
            "dur": "2.534", 
            "start": "2138.167"
        }, 
        {
            "text": "The world of\nJavaScript libraries", 
            "dur": "1.399", 
            "start": "2140.701"
        }, 
        {
            "text": "has a lot of different answers\nto a lot of the questions", 
            "dur": "2.3", 
            "start": "2142.1"
        }, 
        {
            "text": "that you want.\nSo for modularity,", 
            "dur": "2.134", 
            "start": "2144.4"
        }, 
        {
            "text": "it&#39;d be great if we could\nsort of have a script loader", 
            "dur": "2.367", 
            "start": "2146.534"
        }, 
        {
            "text": "that would pull in\na bunch of stuff.", 
            "dur": "1.466", 
            "start": "2148.901"
        }, 
        {
            "text": "It would transitive\ndependency management,", 
            "dur": "1.4", 
            "start": "2150.367"
        }, 
        {
            "text": "and it would put our stuff\ninside of this body of code", 
            "dur": "3.067", 
            "start": "2151.767"
        }, 
        {
            "text": "that we could then\nthink of as something", 
            "dur": "2.134", 
            "start": "2154.834"
        }, 
        {
            "text": "that has dependencies\nbut can also hide local state.", 
            "dur": "2.9", 
            "start": "2156.968"
        }, 
        {
            "text": "So this is the closure example.", 
            "dur": "1.399", 
            "start": "2159.868"
        }, 
        {
            "text": "This is the tree control,\nand these are its dependencies.", 
            "dur": "3.367", 
            "start": "2161.267"
        }, 
        {
            "text": "And it does almost\nexactly this, right?", 
            "dur": "1.433", 
            "start": "2164.634"
        }, 
        {
            "text": "This is the module\nthat it might define,", 
            "dur": "3.233", 
            "start": "2166.067"
        }, 
        {
            "text": "and it&#39;s going to\nexport some stuff.", 
            "dur": "2.334", 
            "start": "2169.3"
        }, 
        {
            "text": "Okay, that&#39;s pretty good.", 
            "dur": "2.3", 
            "start": "2171.634"
        }, 
        {
            "text": "But then you look at\nother JavaScript libraries,", 
            "dur": "2", 
            "start": "2173.934"
        }, 
        {
            "text": "and they do almost exactly\nthe same thing.", 
            "dur": "1.7", 
            "start": "2175.934"
        }, 
        {
            "text": "Here&#39;s a tree control\nfrom the tool kit", 
            "dur": "1.766", 
            "start": "2177.634"
        }, 
        {
            "text": "that I used to work on, digit.", 
            "dur": "2.667", 
            "start": "2179.4"
        }, 
        {
            "text": "And so that does exactly\nthe same thing, right?", 
            "dur": "3.2", 
            "start": "2182.067"
        }, 
        {
            "text": "We&#39;ve got this\nmodule pattern here,", 
            "dur": "1.634", 
            "start": "2185.267"
        }, 
        {
            "text": "where that&#39;s going to be\nwhat you define inside of it.", 
            "dur": "2.566", 
            "start": "2186.901"
        }, 
        {
            "text": "And at the same time,\nthese two syntaxes", 
            "dur": "3.3", 
            "start": "2189.467"
        }, 
        {
            "text": "and these two semantics\naren&#39;t interoperable.", 
            "dur": "2.333", 
            "start": "2192.767"
        }, 
        {
            "text": "You can&#39;t use them together.\nThat&#39;s not great.", 
            "dur": "2.567", 
            "start": "2195.1"
        }, 
        {
            "text": "Now, we&#39;re in a place where\nwe have all of this raw power,", 
            "dur": "2.333", 
            "start": "2197.667"
        }, 
        {
            "text": "and we can start to harness it\nin ways that solve our problems,", 
            "dur": "2.634", 
            "start": "2200"
        }, 
        {
            "text": "but we can&#39;t say the same thing\nunless we all agree a priori", 
            "dur": "3.666", 
            "start": "2202.634"
        }, 
        {
            "text": "which sort of patterns\nwe&#39;re going to use", 
            "dur": "1.467", 
            "start": "2206.3"
        }, 
        {
            "text": "and in which style\nwe&#39;re going to use them.", 
            "dur": "2.8", 
            "start": "2207.767"
        }, 
        {
            "text": "So this is the role\nof the language.", 
            "dur": "2.134", 
            "start": "2210.567"
        }, 
        {
            "text": "This is where language\nevolution can really start", 
            "dur": "2.2", 
            "start": "2212.701"
        }, 
        {
            "text": "to pay off\nsome big dividends.", 
            "dur": "1.866", 
            "start": "2214.901"
        }, 
        {
            "text": "And so this is Dave Herman&#39;s\nsimple module proposal syntax,", 
            "dur": "5.734", 
            "start": "2216.767"
        }, 
        {
            "text": "and this is something\nlike the array,", 
            "dur": "2.599", 
            "start": "2222.501"
        }, 
        {
            "text": "the tree control requirements\nwritten out in the new syntax.", 
            "dur": "4.933", 
            "start": "2225.1"
        }, 
        {
            "text": "As you can see,\nwe actually have syntax saying", 
            "dur": "2.935", 
            "start": "2230.033"
        }, 
        {
            "text": "this thing\nis going to be a module.", 
            "dur": "1.232", 
            "start": "2232.968"
        }, 
        {
            "text": "I&#39;d like you\nto acquire it.", 
            "dur": "1.301", 
            "start": "2234.2"
        }, 
        {
            "text": "I&#39;d like you to import\nthese sets of things", 
            "dur": "2.766", 
            "start": "2235.501"
        }, 
        {
            "text": "into my local scope.", 
            "dur": "2.334", 
            "start": "2238.267"
        }, 
        {
            "text": "And because we&#39;ve got syntax\nfor this in harmony,", 
            "dur": "3.333", 
            "start": "2240.601"
        }, 
        {
            "text": "which is the next version\nof ECMAScript,", 
            "dur": "2.333", 
            "start": "2243.934"
        }, 
        {
            "text": "we&#39;ve got the ability\nfor everyone", 
            "dur": "1.534", 
            "start": "2246.267"
        }, 
        {
            "text": "to agree on what it is\nyou&#39;re trying to get done.", 
            "dur": "2.133", 
            "start": "2247.801"
        }, 
        {
            "text": "Because you have syntax,", 
            "dur": "1.4", 
            "start": "2249.934"
        }, 
        {
            "text": "no one now has the incentive\nto go write their own thing.", 
            "dur": "3.133", 
            "start": "2251.334"
        }, 
        {
            "text": "You can start to rely on\nthere being one canonical way", 
            "dur": "3.401", 
            "start": "2254.467"
        }, 
        {
            "text": "of saying here are my exports,\nhere are my imports.", 
            "dur": "3.399", 
            "start": "2257.868"
        }, 
        {
            "text": "Here&#39;s how it&#39;s done.", 
            "dur": "1.167", 
            "start": "2261.267"
        }, 
        {
            "text": "And so tool kits can\nstart to interoperate.", 
            "dur": "2", 
            "start": "2262.434"
        }, 
        {
            "text": "They don&#39;t have to\ncontinue to compete", 
            "dur": "1.5", 
            "start": "2264.434"
        }, 
        {
            "text": "or, you know, reinvent", 
            "dur": "1.767", 
            "start": "2265.934"
        }, 
        {
            "text": "on the basis of\na low level set of things", 
            "dur": "2.666", 
            "start": "2267.701"
        }, 
        {
            "text": "that you might hope\nwould be provided for you", 
            "dur": "2.033", 
            "start": "2270.367"
        }, 
        {
            "text": "in the language.", 
            "dur": "1.667", 
            "start": "2272.4"
        }, 
        {
            "text": "The same thing\ngoes for classes.", 
            "dur": "1.5", 
            "start": "2274.067"
        }, 
        {
            "text": "You know how we saw\nall that boilerplate earlier,", 
            "dur": "1.967", 
            "start": "2275.567"
        }, 
        {
            "text": "where you had the mix-ins\nwere for functions,", 
            "dur": "1.7", 
            "start": "2277.534"
        }, 
        {
            "text": "and the classes which were\ndefined as functions--", 
            "dur": "2.333", 
            "start": "2279.234"
        }, 
        {
            "text": "well, they all have\nthe same word, function.", 
            "dur": "2.466", 
            "start": "2281.567"
        }, 
        {
            "text": "How do you know\nit&#39;s a function?", 
            "dur": "1.301", 
            "start": "2284.033"
        }, 
        {
            "text": "Again, we saw the word function\nreused to go define", 
            "dur": "1.567", 
            "start": "2285.334"
        }, 
        {
            "text": "that closure,", 
            "dur": "1.299", 
            "start": "2286.901"
        }, 
        {
            "text": "which gave us the scope\nfor using the module pattern.", 
            "dur": "3", 
            "start": "2288.2"
        }, 
        {
            "text": "Well, the word function\ngets a lot of use,", 
            "dur": "1.634", 
            "start": "2291.2"
        }, 
        {
            "text": "and in fact,\nit is used so often", 
            "dur": "2.566", 
            "start": "2292.834"
        }, 
        {
            "text": "that it&#39;s hard\nto understand exactly", 
            "dur": "1.6", 
            "start": "2295.4"
        }, 
        {
            "text": "what it is\nyou&#39;re reading sometimes,", 
            "dur": "1.901", 
            "start": "2297"
        }, 
        {
            "text": "if you&#39;re not familiar\nwith all of these patterns.", 
            "dur": "1.833", 
            "start": "2298.901"
        }, 
        {
            "text": "And so nearly every tool kit\ncomes along", 
            "dur": "2.733", 
            "start": "2300.734"
        }, 
        {
            "text": "and creates a shorthand\nto help you define a class,", 
            "dur": "2.7", 
            "start": "2303.467"
        }, 
        {
            "text": "because, you know,", 
            "dur": "1.267", 
            "start": "2306.167"
        }, 
        {
            "text": "you can just write\na function that&#39;ll do it.", 
            "dur": "1.233", 
            "start": "2307.434"
        }, 
        {
            "text": "Closure does it.", 
            "dur": "3.567", 
            "start": "2308.667"
        }, 
        {
            "text": "Prototype does it.", 
            "dur": "1.966", 
            "start": "2312.234"
        }, 
        {
            "text": "You can imagine\nthat MochiKit", 
            "dur": "1.634", 
            "start": "2314.2"
        }, 
        {
            "text": "or Dojo all do it slightly\ndifferently,", 
            "dur": "1.7", 
            "start": "2315.834"
        }, 
        {
            "text": "and these all lead to slightly\ndifferent semantics,", 
            "dur": "1.933", 
            "start": "2317.534"
        }, 
        {
            "text": "because the way that you wire up\nthose relationships internally--", 
            "dur": "3.2", 
            "start": "2319.467"
        }, 
        {
            "text": "and I showed you one way\nwith using traits", 
            "dur": "4.867", 
            "start": "2322.667"
        }, 
        {
            "text": "or mix-ins inside\nof constructor functions.", 
            "dur": "2.334", 
            "start": "2327.534"
        }, 
        {
            "text": "They make different\ndecisions.", 
            "dur": "1.366", 
            "start": "2329.868"
        }, 
        {
            "text": "You can compose this stuff\na lot of different ways,", 
            "dur": "1.5", 
            "start": "2331.234"
        }, 
        {
            "text": "because you&#39;re always sort of\ncobbling it together", 
            "dur": "1.733", 
            "start": "2332.734"
        }, 
        {
            "text": "from the raw material\nthat&#39;s already in front of you.", 
            "dur": "2.267", 
            "start": "2334.467"
        }, 
        {
            "text": "It&#39;s incredibly powerful,", 
            "dur": "1.167", 
            "start": "2336.734"
        }, 
        {
            "text": "but with that power\ncomes the requirement", 
            "dur": "1.833", 
            "start": "2337.901"
        }, 
        {
            "text": "that you have to get a bunch\nof people to agree with you", 
            "dur": "2.134", 
            "start": "2339.734"
        }, 
        {
            "text": "about how to use it.", 
            "dur": "1.633", 
            "start": "2341.868"
        }, 
        {
            "text": "And in this case,", 
            "dur": "1.166", 
            "start": "2343.501"
        }, 
        {
            "text": "a bunch of well-meaning\nlibrary authors came up", 
            "dur": "2.234", 
            "start": "2344.667"
        }, 
        {
            "text": "with really good solutions\nthat fit their constraints.", 
            "dur": "2.6", 
            "start": "2346.901"
        }, 
        {
            "text": "And in this case,", 
            "dur": "1.699", 
            "start": "2349.501"
        }, 
        {
            "text": "they all differ\na little bit in terms of", 
            "dur": "1.501", 
            "start": "2351.2"
        }, 
        {
            "text": "the underlying semantic, and\nthat&#39;s a little bit frustrating", 
            "dur": "2.033", 
            "start": "2352.701"
        }, 
        {
            "text": "when you want to just\nshare a little bit of code", 
            "dur": "1.733", 
            "start": "2354.734"
        }, 
        {
            "text": "with somebody over there.", 
            "dur": "1.234", 
            "start": "2356.467"
        }, 
        {
            "text": "So what we&#39;d like to do\nis say what we mean.", 
            "dur": "2.8", 
            "start": "2357.701"
        }, 
        {
            "text": "So this is a little bit of code\nthat comes from", 
            "dur": "2.899", 
            "start": "2360.501"
        }, 
        {
            "text": "Marcin Wichary&#39;s\nawesome Pac-Man demo,", 
            "dur": "3.267", 
            "start": "2363.4"
        }, 
        {
            "text": "but this wouldn&#39;t be\nhow you&#39;d write it today.", 
            "dur": "2.167", 
            "start": "2366.667"
        }, 
        {
            "text": "This is how you&#39;d have\nto write in the future.", 
            "dur": "2.299", 
            "start": "2368.834"
        }, 
        {
            "text": "Or this isn&#39;t how you would\nhave to write it today.", 
            "dur": "1.9", 
            "start": "2371.133"
        }, 
        {
            "text": "This is what you would\nlike to be writing.", 
            "dur": "1.267", 
            "start": "2373.033"
        }, 
        {
            "text": "You&#39;d like to say,\nI&#39;ve got a class.", 
            "dur": "1.634", 
            "start": "2374.3"
        }, 
        {
            "text": "It&#39;s got a constructor body,\nand it&#39;s got some methods,", 
            "dur": "3.433", 
            "start": "2375.934"
        }, 
        {
            "text": "and then I&#39;ve got\na subclass which,", 
            "dur": "1.601", 
            "start": "2379.367"
        }, 
        {
            "text": "you know, wires with that\nprototypal relationship", 
            "dur": "2.132", 
            "start": "2380.968"
        }, 
        {
            "text": "with the other thing.\nIt&#39;s got a constructor body,", 
            "dur": "2.768", 
            "start": "2383.1"
        }, 
        {
            "text": "and it defines some properties\non its prototype.", 
            "dur": "2.666", 
            "start": "2385.868"
        }, 
        {
            "text": "What we&#39;d like to do\nis have this syntax map", 
            "dur": "2.167", 
            "start": "2388.534"
        }, 
        {
            "text": "to exactly what\nwe saw before, right?", 
            "dur": "1.666", 
            "start": "2390.701"
        }, 
        {
            "text": "We don&#39;t want to change\nthe fundamental idea", 
            "dur": "3.9", 
            "start": "2392.367"
        }, 
        {
            "text": "of what the language is.", 
            "dur": "1.334", 
            "start": "2396.267"
        }, 
        {
            "text": "Prototype based,\nfunctions as first class,", 
            "dur": "2.532", 
            "start": "2397.601"
        }, 
        {
            "text": "closures to carry state,\ntop to bottom evaluation,", 
            "dur": "3.568", 
            "start": "2400.133"
        }, 
        {
            "text": "delegation and not classes.", 
            "dur": "3.332", 
            "start": "2403.701"
        }, 
        {
            "text": "When we introduce a syntax\nfor the word class, right,", 
            "dur": "2.801", 
            "start": "2407.033"
        }, 
        {
            "text": "what we would like\nfor this to have happen here", 
            "dur": "2.1", 
            "start": "2409.834"
        }, 
        {
            "text": "is when we evolve\nthe language,", 
            "dur": "1.366", 
            "start": "2411.934"
        }, 
        {
            "text": "we want to hold on to\nthat fundamental set of things", 
            "dur": "2.634", 
            "start": "2413.3"
        }, 
        {
            "text": "that define JavaScript\nas JavaScript,", 
            "dur": "1.567", 
            "start": "2415.934"
        }, 
        {
            "text": "so that you can understand old\ncode in the context of new code", 
            "dur": "2.733", 
            "start": "2417.501"
        }, 
        {
            "text": "and that JavaScript can maintain\na lot of that dynamic,", 
            "dur": "2.333", 
            "start": "2420.234"
        }, 
        {
            "text": "which pays off so well when\nwe need to start doing things", 
            "dur": "2.967", 
            "start": "2422.567"
        }, 
        {
            "text": "that the language\ndoesn&#39;t provide for us.", 
            "dur": "1.3", 
            "start": "2425.534"
        }, 
        {
            "text": "Because\nwhat we&#39;ve seen today is", 
            "dur": "1.466", 
            "start": "2426.834"
        }, 
        {
            "text": "that we&#39;ve put together a whole\nseries of things from raw parts,", 
            "dur": "3.7", 
            "start": "2428.3"
        }, 
        {
            "text": "just little raw material, things\nthat are very high level,", 
            "dur": "2.3", 
            "start": "2432"
        }, 
        {
            "text": "very high level constructs that\nyou&#39;re going to need to use,", 
            "dur": "3.467", 
            "start": "2434.3"
        }, 
        {
            "text": "that you might not expect\nto be there on JavaScript,", 
            "dur": "2.6", 
            "start": "2437.767"
        }, 
        {
            "text": "but JavaScript\nprovides them for you.", 
            "dur": "1.367", 
            "start": "2440.367"
        }, 
        {
            "text": "And it&#39;s easy\nto love a language", 
            "dur": "1.1", 
            "start": "2441.734"
        }, 
        {
            "text": "that gives you\nthat kind of power.", 
            "dur": "2.566", 
            "start": "2442.834"
        }, 
        {
            "text": "So we wanted something that", 
            "dur": "1.468", 
            "start": "2445.4"
        }, 
        {
            "text": "we in the standards committee\ncall de-sugaring.", 
            "dur": "1.432", 
            "start": "2446.868"
        }, 
        {
            "text": "And de-sugaring\nis the concept", 
            "dur": "1.434", 
            "start": "2448.3"
        }, 
        {
            "text": "of when you define a new idea,\nor you define new syntax,", 
            "dur": "3.366", 
            "start": "2449.734"
        }, 
        {
            "text": "or a new semantic\nin the language,", 
            "dur": "3.768", 
            "start": "2453.1"
        }, 
        {
            "text": "it would be best if we could\ndescribe that new thing", 
            "dur": "2.766", 
            "start": "2456.868"
        }, 
        {
            "text": "in terms of the stuff\nthat&#39;s already there.", 
            "dur": "2.133", 
            "start": "2459.634"
        }, 
        {
            "text": "So if I describe\na new language feature by", 
            "dur": "3.101", 
            "start": "2461.767"
        }, 
        {
            "text": "what it would be like\nif I&#39;d just written it all out,", 
            "dur": "2.633", 
            "start": "2464.868"
        }, 
        {
            "text": "we can start to say, aha.", 
            "dur": "1.833", 
            "start": "2467.501"
        }, 
        {
            "text": "This fits\nor this doesn&#39;t fit", 
            "dur": "1.3", 
            "start": "2469.334"
        }, 
        {
            "text": "with the way we start to use\nJavaScript today.", 
            "dur": "2.033", 
            "start": "2470.634"
        }, 
        {
            "text": "So this is an example\nof what I&#39;d like to write", 
            "dur": "2.134", 
            "start": "2472.667"
        }, 
        {
            "text": "in the new style, and what\nyou would have to write today", 
            "dur": "3.566", 
            "start": "2474.801"
        }, 
        {
            "text": "to go make this all\nwork in the old style.", 
            "dur": "3.367", 
            "start": "2478.367"
        }, 
        {
            "text": "Okay, that&#39;s a lot,\nand it&#39;s a lot of boilerplate", 
            "dur": "3.767", 
            "start": "2481.734"
        }, 
        {
            "text": "that we shouldn&#39;t\nhave to write.", 
            "dur": "2.599", 
            "start": "2485.501"
        }, 
        {
            "text": "The same thing goes for\na lot of sort of little", 
            "dur": "2.234", 
            "start": "2488.1"
        }, 
        {
            "text": "syntactic niggles.", 
            "dur": "1.233", 
            "start": "2490.334"
        }, 
        {
            "text": "So let&#39;s say\nI want a function", 
            "dur": "2.6", 
            "start": "2491.567"
        }, 
        {
            "text": "that takes variable arguments.", 
            "dur": "1.434", 
            "start": "2494.167"
        }, 
        {
            "text": "Today, in JavaScript, I have\nto go unpack those arguments", 
            "dur": "2.066", 
            "start": "2495.601"
        }, 
        {
            "text": "out of an explicit\narguments property", 
            "dur": "1.867", 
            "start": "2497.667"
        }, 
        {
            "text": "that&#39;s available\ninside the scope of any--", 
            "dur": "2.1", 
            "start": "2499.534"
        }, 
        {
            "text": "inside of any function.", 
            "dur": "2.533", 
            "start": "2501.634"
        }, 
        {
            "text": "So if I want a default value,", 
            "dur": "1.933", 
            "start": "2504.167"
        }, 
        {
            "text": "I have to go\nprovide it for myself,", 
            "dur": "1.501", 
            "start": "2506.1"
        }, 
        {
            "text": "and if I want to go grab\nvariable array arguments,", 
            "dur": "2.666", 
            "start": "2507.601"
        }, 
        {
            "text": "I have to go grab the--turn\nthe best of the arguments", 
            "dur": "4.2", 
            "start": "2510.267"
        }, 
        {
            "text": "into an array,\nusing array.prototype.slice,", 
            "dur": "4.467", 
            "start": "2514.467"
        }, 
        {
            "text": "pass it in to the arguments\nobject as the scope,", 
            "dur": "3.166", 
            "start": "2518.934"
        }, 
        {
            "text": "and then say give me everything\nafter the first one, right?", 
            "dur": "2.501", 
            "start": "2522.1"
        }, 
        {
            "text": "And then create me\nthe list of parameters.", 
            "dur": "1.566", 
            "start": "2524.601"
        }, 
        {
            "text": "That&#39;s a lot of boilerplate.", 
            "dur": "1.2", 
            "start": "2526.167"
        }, 
        {
            "text": "It&#39;s sort of hard\nto read that function,", 
            "dur": "2.467", 
            "start": "2527.367"
        }, 
        {
            "text": "if you don&#39;t know this\nparticular sort of pattern,", 
            "dur": "5.134", 
            "start": "2529.834"
        }, 
        {
            "text": "and then to understand what\nit is that it&#39;s trying to do.", 
            "dur": "1.933", 
            "start": "2534.968"
        }, 
        {
            "text": "It&#39;s much better\nas a language,", 
            "dur": "1.466", 
            "start": "2536.901"
        }, 
        {
            "text": "if what we get to is a place\nwhere we can say what we mean", 
            "dur": "2.501", 
            "start": "2538.367"
        }, 
        {
            "text": "when we&#39;re writing\nour functions.", 
            "dur": "1.332", 
            "start": "2540.868"
        }, 
        {
            "text": "I&#39;d like the format\nto have a default property", 
            "dur": "2.8", 
            "start": "2542.2"
        }, 
        {
            "text": "of a blank string,\nand I&#39;d like the parameters", 
            "dur": "3.167", 
            "start": "2545"
        }, 
        {
            "text": "that you don&#39;t have allocated\nto some named argument", 
            "dur": "4.866", 
            "start": "2548.167"
        }, 
        {
            "text": "stashed away in an array\ncalled params.", 
            "dur": "2.534", 
            "start": "2553.033"
        }, 
        {
            "text": "That&#39;s a pretty common thing\nto want to do.", 
            "dur": "2.733", 
            "start": "2555.567"
        }, 
        {
            "text": "And so this sort of thing\nis coming in the next version", 
            "dur": "4.201", 
            "start": "2558.3"
        }, 
        {
            "text": "of the language,", 
            "dur": "1.499", 
            "start": "2562.501"
        }, 
        {
            "text": "and last week at JS Conf\nand again at Node Conf,", 
            "dur": "6.601", 
            "start": "2564"
        }, 
        {
            "text": "we started talking\nabout some work", 
            "dur": "1.367", 
            "start": "2570.601"
        }, 
        {
            "text": "that we&#39;re doing on the Chrome\nTeam with the JavaScript", 
            "dur": "3.266", 
            "start": "2571.968"
        }, 
        {
            "text": "and JavaScript compiler\nwritten in JavaScript", 
            "dur": "2.5", 
            "start": "2575.234"
        }, 
        {
            "text": "called Traceur.", 
            "dur": "1.6", 
            "start": "2577.734"
        }, 
        {
            "text": "And Traceur&#39;s goal", 
            "dur": "1.433", 
            "start": "2579.334"
        }, 
        {
            "text": "is to help us design\nthese new language features", 
            "dur": "2.201", 
            "start": "2580.767"
        }, 
        {
            "text": "in a way that works really\nwell by trying them out,", 
            "dur": "3.599", 
            "start": "2582.968"
        }, 
        {
            "text": "because language evolution\nisn&#39;t a straight line thing.", 
            "dur": "2.466", 
            "start": "2586.567"
        }, 
        {
            "text": "You know, we said that all these\nlibraries have different ways", 
            "dur": "2.201", 
            "start": "2589.033"
        }, 
        {
            "text": "of doing a lot of the stuff,", 
            "dur": "2.066", 
            "start": "2591.234"
        }, 
        {
            "text": "so what we&#39;d like to do\nis figure out", 
            "dur": "1.367", 
            "start": "2593.3"
        }, 
        {
            "text": "what&#39;s the best pattern\nor practice?", 
            "dur": "1.433", 
            "start": "2594.667"
        }, 
        {
            "text": "What&#39;s the thing that\nwe would really like to blast?", 
            "dur": "1.768", 
            "start": "2596.1"
        }, 
        {
            "text": "Or when there is\na new semantic", 
            "dur": "1.232", 
            "start": "2597.868"
        }, 
        {
            "text": "that we can introduce\ninto the language,", 
            "dur": "1.967", 
            "start": "2599.1"
        }, 
        {
            "text": "what is it that we would be\ntrying to say", 
            "dur": "1.867", 
            "start": "2601.067"
        }, 
        {
            "text": "in JavaScript directly?", 
            "dur": "1.633", 
            "start": "2602.934"
        }, 
        {
            "text": "And so this way, we sort of\nhave a way of, at runtime,", 
            "dur": "6.466", 
            "start": "2604.567"
        }, 
        {
            "text": "running this compiler over\nsome piece of JavaScript", 
            "dur": "3.267", 
            "start": "2611.033"
        }, 
        {
            "text": "written in the new syntax\nand have it do something", 
            "dur": "1.733", 
            "start": "2614.3"
        }, 
        {
            "text": "in the old syntax.", 
            "dur": "1.634", 
            "start": "2616.033"
        }, 
        {
            "text": "So in this case--", 
            "dur": "3.267", 
            "start": "2617.667"
        }, 
        {
            "text": "I&#39;m going to go grab something\nout of the parameters,", 
            "dur": "2.7", 
            "start": "2628.4"
        }, 
        {
            "text": "and as you can see, it&#39;s\nrecompiling here, as I type.", 
            "dur": "4.601", 
            "start": "2631.1"
        }, 
        {
            "text": "And now it has--", 
            "dur": "4.667", 
            "start": "2648.167"
        }, 
        {
            "text": "ah, yes, there we are.", 
            "dur": "1.767", 
            "start": "2652.834"
        }, 
        {
            "text": "Now it&#39;s created\nall of the stuff", 
            "dur": "1.9", 
            "start": "2654.601"
        }, 
        {
            "text": "that I was going to have\nto write out by hand.", 
            "dur": "1.666", 
            "start": "2656.501"
        }, 
        {
            "text": "It&#39;s just compiled that down", 
            "dur": "1.133", 
            "start": "2658.167"
        }, 
        {
            "text": "from the new syntax\nto the old syntax,", 
            "dur": "2.434", 
            "start": "2659.3"
        }, 
        {
            "text": "and I can run it.", 
            "dur": "2.833", 
            "start": "2661.734"
        }, 
        {
            "text": "I should be able to run it.", 
            "dur": "2.733", 
            "start": "2664.567"
        }, 
        {
            "text": "man:\n[indistinct comment]", 
            "dur": "5.733", 
            "start": "2667.3"
        }, 
        {
            "text": "Russell:\nAh, yes, good call.", 
            "dur": "6.301", 
            "start": "2673.033"
        }, 
        {
            "text": "Great, there we go.", 
            "dur": "1.267", 
            "start": "2679.334"
        }, 
        {
            "text": "So this is a tool\nthat we&#39;re starting to use", 
            "dur": "4.766", 
            "start": "2680.601"
        }, 
        {
            "text": "to help inform\nthe language evolution", 
            "dur": "2.267", 
            "start": "2685.367"
        }, 
        {
            "text": "in order to help us\nprototype stuff fast,", 
            "dur": "2.566", 
            "start": "2687.634"
        }, 
        {
            "text": "get feedback\nabout how it works,", 
            "dur": "1.701", 
            "start": "2690.2"
        }, 
        {
            "text": "and so we can\nstart to understand", 
            "dur": "1.8", 
            "start": "2691.901"
        }, 
        {
            "text": "how the new stuff that\nwe&#39;re adding into the language", 
            "dur": "1.766", 
            "start": "2693.701"
        }, 
        {
            "text": "fits with the old stuff\nby writing real code in it.", 
            "dur": "2.334", 
            "start": "2695.467"
        }, 
        {
            "text": "And as we work\nin the standards committee", 
            "dur": "1.499", 
            "start": "2697.801"
        }, 
        {
            "text": "to help make this stuff reality,\nthis sort of tool,", 
            "dur": "2.733", 
            "start": "2699.3"
        }, 
        {
            "text": "I hope, is going to\nmake it possible for us", 
            "dur": "2.034", 
            "start": "2702.033"
        }, 
        {
            "text": "to evolve faster and evolve\nin a straighter line", 
            "dur": "2.7", 
            "start": "2704.067"
        }, 
        {
            "text": "with the existing versions\nof JavaScript,", 
            "dur": "2.4", 
            "start": "2706.767"
        }, 
        {
            "text": "because what we don&#39;t want\nis for us", 
            "dur": "1.233", 
            "start": "2709.167"
        }, 
        {
            "text": "to add new things\nlike the idea of a class", 
            "dur": "2.967", 
            "start": "2710.4"
        }, 
        {
            "text": "and have it be at war with the\nidea of prototypal inheritance", 
            "dur": "2.501", 
            "start": "2713.367"
        }, 
        {
            "text": "or functions\nas first class objects.", 
            "dur": "1.866", 
            "start": "2715.868"
        }, 
        {
            "text": "We want to continue to help you\nbuild on these core fundamental,", 
            "dur": "4.167", 
            "start": "2717.734"
        }, 
        {
            "text": "really powerful building blocks\nin the language", 
            "dur": "1.633", 
            "start": "2721.901"
        }, 
        {
            "text": "without introducing\nnew sorts of ideas or overhead", 
            "dur": "5.499", 
            "start": "2723.534"
        }, 
        {
            "text": "that you have to consider\nwhen you&#39;re writing your code.", 
            "dur": "1.768", 
            "start": "2729.033"
        }, 
        {
            "text": "And so Traceur, again,\nis an effort to help us", 
            "dur": "2.766", 
            "start": "2730.801"
        }, 
        {
            "text": "understand and experiment\nwith the language,", 
            "dur": "2.134", 
            "start": "2733.567"
        }, 
        {
            "text": "and it&#39;s available as an open\nsource project on Google Code.", 
            "dur": "3.299", 
            "start": "2735.701"
        }, 
        {
            "text": "You can use it today, both on\nthe server and on the client,", 
            "dur": "2.834", 
            "start": "2739"
        }, 
        {
            "text": "and you can start\nto play with it.", 
            "dur": "1.9", 
            "start": "2741.834"
        }, 
        {
            "text": "You can start to write\nreal code in it.", 
            "dur": "1.566", 
            "start": "2743.734"
        }, 
        {
            "text": "There&#39;s a read, evaluate,\nand print loop", 
            "dur": "2.867", 
            "start": "2745.3"
        }, 
        {
            "text": "that you can just go to\nand start typing code into.", 
            "dur": "7.866", 
            "start": "2748.167"
        }, 
        {
            "text": "So I won&#39;t belabor\nthat anymore,", 
            "dur": "2.1", 
            "start": "2756.033"
        }, 
        {
            "text": "but what we&#39;re really hoping\nfor is that you can start to use", 
            "dur": "5.934", 
            "start": "2758.133"
        }, 
        {
            "text": "a lot of the new features that\nwe&#39;ve started to play with.", 
            "dur": "2.7", 
            "start": "2764.067"
        }, 
        {
            "text": "We have a list of features that\nwe&#39;ve implemented in Traceur,", 
            "dur": "2.266", 
            "start": "2766.767"
        }, 
        {
            "text": "and that&#39;s expanding every day.", 
            "dur": "1.334", 
            "start": "2769.033"
        }, 
        {
            "text": "But things like modules,\nclasses, and traits,", 
            "dur": "2.501", 
            "start": "2770.367"
        }, 
        {
            "text": "asynchronous programming--", 
            "dur": "1.332", 
            "start": "2772.868"
        }, 
        {
            "text": "Asynchronous programming\nis something we have to do", 
            "dur": "1.8", 
            "start": "2774.2"
        }, 
        {
            "text": "all the time, and we wind up\ndoing it with a callback system.", 
            "dur": "1.968", 
            "start": "2776"
        }, 
        {
            "text": "It&#39;d be great if\nthere was support for that", 
            "dur": "1.466", 
            "start": "2777.968"
        }, 
        {
            "text": "in a language that we didn&#39;t\nhave to continue to write", 
            "dur": "1.699", 
            "start": "2779.434"
        }, 
        {
            "text": "the same boilerplate\nover and over and over again.", 
            "dur": "1.967", 
            "start": "2781.133"
        }, 
        {
            "text": "Destructuring assignment,\nlike we just saw,", 
            "dur": "1.868", 
            "start": "2783.1"
        }, 
        {
            "text": "and the ability to use\nthe prototypal sort of style", 
            "dur": "2.866", 
            "start": "2784.968"
        }, 
        {
            "text": "of extension,\nbut have it happen in a way", 
            "dur": "2.034", 
            "start": "2787.834"
        }, 
        {
            "text": "that doesn&#39;t conflict\nwith everybody else&#39;s objects", 
            "dur": "1.733", 
            "start": "2789.868"
        }, 
        {
            "text": "in the system.", 
            "dur": "1.2", 
            "start": "2791.601"
        }, 
        {
            "text": "Those are the sorts of\nhigh priority work items", 
            "dur": "1.866", 
            "start": "2792.801"
        }, 
        {
            "text": "that we&#39;re starting to use\nTraceur to evaluate designs for,", 
            "dur": "4.067", 
            "start": "2794.667"
        }, 
        {
            "text": "and we&#39;d love your help.", 
            "dur": "1.433", 
            "start": "2798.734"
        }, 
        {
            "text": "We&#39;d love for you to start\nusing it, testing it out,", 
            "dur": "2.434", 
            "start": "2800.167"
        }, 
        {
            "text": "working with the system,\nand helping us write code", 
            "dur": "2.367", 
            "start": "2802.601"
        }, 
        {
            "text": "in the new style,\nso we can understand", 
            "dur": "1.266", 
            "start": "2804.968"
        }, 
        {
            "text": "whether or not\nit&#39;s actually good.", 
            "dur": "2.433", 
            "start": "2806.234"
        }, 
        {
            "text": "So Traceur is one idea\nto help us get there.", 
            "dur": "3.466", 
            "start": "2808.667"
        }, 
        {
            "text": "We need implementations early\nto inform the design process", 
            "dur": "2.835", 
            "start": "2812.133"
        }, 
        {
            "text": "for the future of the language,\nso that the things that you do", 
            "dur": "2.299", 
            "start": "2814.968"
        }, 
        {
            "text": "in the language now\ncarry out into the future", 
            "dur": "3.067", 
            "start": "2817.267"
        }, 
        {
            "text": "as core idioms and core concepts\nthat you can rely on there, too.", 
            "dur": "4.766", 
            "start": "2820.334"
        }, 
        {
            "text": "But we need those things\nto eventually trickle down", 
            "dur": "2.2", 
            "start": "2825.1"
        }, 
        {
            "text": "into real, live implementations,\nV8, other JavaScript engines,", 
            "dur": "3.634", 
            "start": "2827.3"
        }, 
        {
            "text": "and we want to make sure\nthat these things", 
            "dur": "1.433", 
            "start": "2830.934"
        }, 
        {
            "text": "are available to you quickly in\nthe fast-moving constituencies.", 
            "dur": "2.666", 
            "start": "2832.367"
        }, 
        {
            "text": "So if you can start to use this\nstuff in the Chrome Web Store--", 
            "dur": "3.634", 
            "start": "2835.033"
        }, 
        {
            "text": "because almost everyone in\nthe Chrome Web Store gets--", 
            "dur": "2.867", 
            "start": "2838.667"
        }, 
        {
            "text": "or who you can target\nthrough the Chrome Web Store", 
            "dur": "2.334", 
            "start": "2841.534"
        }, 
        {
            "text": "gets the latest version\nof Chrome within a week--", 
            "dur": "1.866", 
            "start": "2843.868"
        }, 
        {
            "text": "that&#39;s really good.", 
            "dur": "1.234", 
            "start": "2845.734"
        }, 
        {
            "text": "We can start to get fast\nfeedback in the language", 
            "dur": "1.9", 
            "start": "2846.968"
        }, 
        {
            "text": "and in the design of the\nnext version of JavaScript", 
            "dur": "2.633", 
            "start": "2848.868"
        }, 
        {
            "text": "based on your feedback\nabout what&#39;s working", 
            "dur": "1.966", 
            "start": "2851.501"
        }, 
        {
            "text": "and what&#39;s not in ways\nthat we couldn&#39;t before.", 
            "dur": "2.8", 
            "start": "2853.467"
        }, 
        {
            "text": "The lead time on a new version\nof the language has been years--", 
            "dur": "3.2", 
            "start": "2856.267"
        }, 
        {
            "text": "in some cases,\ncloser to a decade.", 
            "dur": "2.8", 
            "start": "2859.467"
        }, 
        {
            "text": "And so you can follow along\nthe ECMAScript wiki.", 
            "dur": "5", 
            "start": "2862.267"
        }, 
        {
            "text": "I realize this is--\nthe link", 
            "dur": "1.3", 
            "start": "2867.267"
        }, 
        {
            "text": "is a little bit long,\nbut there&#39;s a list", 
            "dur": "1.466", 
            "start": "2868.567"
        }, 
        {
            "text": "of accepted proposals for the\nnext version of the language.", 
            "dur": "1.835", 
            "start": "2870.033"
        }, 
        {
            "text": "That&#39;s going to be\nsomewhat formalized", 
            "dur": "1.399", 
            "start": "2871.868"
        }, 
        {
            "text": "in the next couple of months.", 
            "dur": "1.3", 
            "start": "2873.267"
        }, 
        {
            "text": "And as that list\nis locked down,", 
            "dur": "1.733", 
            "start": "2874.567"
        }, 
        {
            "text": "we&#39;re going to continue\nto iterate on those proposals.", 
            "dur": "2", 
            "start": "2876.3"
        }, 
        {
            "text": "They&#39;re going to get\nnew syntax.", 
            "dur": "1.301", 
            "start": "2878.3"
        }, 
        {
            "text": "Things are going\nto change there.", 
            "dur": "1.499", 
            "start": "2879.601"
        }, 
        {
            "text": "But the list of things\nthat are in the proposal stage", 
            "dur": "1.868", 
            "start": "2881.1"
        }, 
        {
            "text": "for Harmony are the set\nof things that we,", 
            "dur": "1.366", 
            "start": "2882.968"
        }, 
        {
            "text": "as a committee,\nhave agreed to go work on", 
            "dur": "1.933", 
            "start": "2884.334"
        }, 
        {
            "text": "and standardize together.", 
            "dur": "1.4", 
            "start": "2886.267"
        }, 
        {
            "text": "And so Traceur\nis going to continue", 
            "dur": "1.201", 
            "start": "2887.667"
        }, 
        {
            "text": "to follow that evolution", 
            "dur": "1.332", 
            "start": "2888.868"
        }, 
        {
            "text": "and allow us\nto start to work in ways", 
            "dur": "2.434", 
            "start": "2890.2"
        }, 
        {
            "text": "that give us quick feedback\nabout whether or not", 
            "dur": "2.733", 
            "start": "2892.634"
        }, 
        {
            "text": "we&#39;re doing the right things\nfor you", 
            "dur": "1.633", 
            "start": "2895.367"
        }, 
        {
            "text": "as you&#39;re writing large\npieces of JavaScript.", 
            "dur": "3.734", 
            "start": "2897"
        }, 
        {
            "text": "Okay, questions?", 
            "dur": "3.433", 
            "start": "2900.734"
        }, 
        {
            "text": "man: Hi. So the common JS\nmodules specification", 
            "dur": "3.767", 
            "start": "2909.734"
        }, 
        {
            "text": "has like a really simple\nrequire and exports", 
            "dur": "3.933", 
            "start": "2913.501"
        }, 
        {
            "text": "that really doesn&#39;t--\nthat--it&#39;s kind of--", 
            "dur": "2.333", 
            "start": "2917.434"
        }, 
        {
            "text": "it doesn&#39;t factor in,\nyou know,", 
            "dur": "1.6", 
            "start": "2919.767"
        }, 
        {
            "text": "how things\nget loaded or whatever.", 
            "dur": "1.367", 
            "start": "2921.367"
        }, 
        {
            "text": "It&#39;s really just a binding\nmechanism between", 
            "dur": "2.067", 
            "start": "2922.734"
        }, 
        {
            "text": "disparate name space.", 
            "dur": "1.533", 
            "start": "2924.801"
        }, 
        {
            "text": "That seems ultimately\nsimple to me,", 
            "dur": "1.6", 
            "start": "2926.334"
        }, 
        {
            "text": "but it doesn&#39;t seem like Harmony\nis going in that direction.", 
            "dur": "3.034", 
            "start": "2927.934"
        }, 
        {
            "text": "Russell: So the simple\nmodules proposal", 
            "dur": "3.9", 
            "start": "2930.968"
        }, 
        {
            "text": "gives us a way\nto have a first pass.", 
            "dur": "2.866", 
            "start": "2934.868"
        }, 
        {
            "text": "So...sorry, I should run this\nbackwards.", 
            "dur": "4.234", 
            "start": "2937.734"
        }, 
        {
            "text": "The common JS module system\nsort of is implicitly server JS.", 
            "dur": "5.566", 
            "start": "2941.968"
        }, 
        {
            "text": "You kind of assume that\nthe thing that you&#39;re getting", 
            "dur": "2", 
            "start": "2947.534"
        }, 
        {
            "text": "in the next statement\nis cheap to fetch.", 
            "dur": "1.666", 
            "start": "2949.534"
        }, 
        {
            "text": "And so what we need\nfor the client", 
            "dur": "1.668", 
            "start": "2951.2"
        }, 
        {
            "text": "is an ability to make the\nrequire and provide statements", 
            "dur": "4.666", 
            "start": "2952.868"
        }, 
        {
            "text": "look apparently synchronous\nbut have them operate", 
            "dur": "2.2", 
            "start": "2957.534"
        }, 
        {
            "text": "asynchronously on the network,\nwhich means that we want to get", 
            "dur": "2.266", 
            "start": "2959.734"
        }, 
        {
            "text": "the transitive closure\nof all of the dependencies", 
            "dur": "2.667", 
            "start": "2962"
        }, 
        {
            "text": "that your module needs.", 
            "dur": "1.333", 
            "start": "2964.667"
        }, 
        {
            "text": "man: Then you&#39;re kind of\nmixing like load,", 
            "dur": "1.601", 
            "start": "2966"
        }, 
        {
            "text": "the loading and--", 
            "dur": "1", 
            "start": "2967.601"
        }, 
        {
            "text": "Russell:\nThey are mixed.", 
            "dur": "1", 
            "start": "2968.601"
        }, 
        {
            "text": "There&#39;s no way\nto unmix them.", 
            "dur": "1.233", 
            "start": "2969.601"
        }, 
        {
            "text": "Because of the way\nthat JavaScript evaluates", 
            "dur": "1.933", 
            "start": "2970.834"
        }, 
        {
            "text": "top to bottom,\nwe either have to--", 
            "dur": "1.6", 
            "start": "2972.767"
        }, 
        {
            "text": "and because\nit runs on the UI thread,", 
            "dur": "1.467", 
            "start": "2974.367"
        }, 
        {
            "text": "we either have to block\nthe entire client", 
            "dur": "3.433", 
            "start": "2975.834"
        }, 
        {
            "text": "while we go fetch resources,\nwhich is what happens", 
            "dur": "2.1", 
            "start": "2979.267"
        }, 
        {
            "text": "with the document.write,\nthat sort of thing--", 
            "dur": "1.867", 
            "start": "2981.367"
        }, 
        {
            "text": "man: Yeah, I see\nwhat you&#39;re saying.", 
            "dur": "1", 
            "start": "2983.234"
        }, 
        {
            "text": "Russell:\nOr we have to find a way", 
            "dur": "1.333", 
            "start": "2984.234"
        }, 
        {
            "text": "to accommodate asynchronous\nloading in the syntax,", 
            "dur": "2.9", 
            "start": "2985.567"
        }, 
        {
            "text": "and that&#39;s what the simple\nmodule proposal does.", 
            "dur": "1.367", 
            "start": "2988.467"
        }, 
        {
            "text": "man:\nI see what you&#39;re saying.", 
            "dur": "1.134", 
            "start": "2989.834"
        }, 
        {
            "text": "Russell: Which is\nfundamentally different,", 
            "dur": "1.266", 
            "start": "2990.968"
        }, 
        {
            "text": "because we can use syntax\nto do that in a way", 
            "dur": "1.734", 
            "start": "2992.234"
        }, 
        {
            "text": "that common JS can&#39;t.", 
            "dur": "1.432", 
            "start": "2993.968"
        }, 
        {
            "text": "man: Yeah, I use a system where\nI kind of--you use common JS", 
            "dur": "2.367", 
            "start": "2995.4"
        }, 
        {
            "text": "on the client, but I don&#39;t--\nI allow for, like,", 
            "dur": "4.633", 
            "start": "2997.767"
        }, 
        {
            "text": "forward references.\nRussell: Right.", 
            "dur": "1.234", 
            "start": "3002.4"
        }, 
        {
            "text": "man: So like, those things,\nthey get resolved", 
            "dur": "1.933", 
            "start": "3003.634"
        }, 
        {
            "text": "at a later time,", 
            "dur": "1.367", 
            "start": "3005.567"
        }, 
        {
            "text": "so you can&#39;t kind of use them\ncompletely until later.", 
            "dur": "3.133", 
            "start": "3006.934"
        }, 
        {
            "text": "Russell: Yeah, I&#39;m really\nhopeful that we can get", 
            "dur": "1.467", 
            "start": "3010.067"
        }, 
        {
            "text": "the semantic that Dave Herman\nhas put forward,", 
            "dur": "2.367", 
            "start": "3011.534"
        }, 
        {
            "text": "because it really does give us\nthe power to not force you", 
            "dur": "2.399", 
            "start": "3013.901"
        }, 
        {
            "text": "to think about when your code\nis going to run.", 
            "dur": "1.434", 
            "start": "3016.3"
        }, 
        {
            "text": "If you say require in one line,\nyou can use it in the next one,", 
            "dur": "2.299", 
            "start": "3017.734"
        }, 
        {
            "text": "and I think that&#39;s\na key usability feature", 
            "dur": "3.234", 
            "start": "3020.033"
        }, 
        {
            "text": "of a language improvement\nin this area.", 
            "dur": "4.567", 
            "start": "3023.267"
        }, 
        {
            "text": "man:\nQuestion. On the last slide,", 
            "dur": "1.533", 
            "start": "3027.834"
        }, 
        {
            "text": "one of the things you mentioned\nwas asynchronous programming", 
            "dur": "1.666", 
            "start": "3029.367"
        }, 
        {
            "text": "with JavaScript.", 
            "dur": "1.434", 
            "start": "3031.033"
        }, 
        {
            "text": "And, you know, like Node JS\nis one of the new frameworks.", 
            "dur": "4.234", 
            "start": "3032.467"
        }, 
        {
            "text": "I&#39;m wondering if you can talk\na little bit about", 
            "dur": "1.432", 
            "start": "3036.701"
        }, 
        {
            "text": "some best practices for\nhow to handle error conditions", 
            "dur": "3.167", 
            "start": "3038.133"
        }, 
        {
            "text": "or exceptions when you&#39;re\ndoing an asynchronous call", 
            "dur": "4.034", 
            "start": "3041.3"
        }, 
        {
            "text": "that may not be\nin the same call stack", 
            "dur": "1.799", 
            "start": "3045.334"
        }, 
        {
            "text": "as when you actually\nexecuted the call.", 
            "dur": "2.768", 
            "start": "3047.133"
        }, 
        {
            "text": "Russell:\nSo this is a hot topic.", 
            "dur": "2.533", 
            "start": "3049.901"
        }, 
        {
            "text": "The asynchronous pattern\nthat seems to have won", 
            "dur": "4.434", 
            "start": "3052.434"
        }, 
        {
            "text": "the most mindshare is something\nlike deferreds or promises.", 
            "dur": "2.833", 
            "start": "3056.868"
        }, 
        {
            "text": "Again, the common JS guys\nhave done great work there.", 
            "dur": "2.666", 
            "start": "3059.701"
        }, 
        {
            "text": "And so those systems\ntend to have some error", 
            "dur": "3.867", 
            "start": "3062.367"
        }, 
        {
            "text": "handling callback\nthat you can register,", 
            "dur": "4.066", 
            "start": "3066.234"
        }, 
        {
            "text": "so that if an error does occur,\nyou can be notified of it.", 
            "dur": "3.301", 
            "start": "3070.3"
        }, 
        {
            "text": "I actually was talking with\nthe Node JS guys just last week", 
            "dur": "3.033", 
            "start": "3073.601"
        }, 
        {
            "text": "in Portland about exactly\nhow they want to do this,", 
            "dur": "2.366", 
            "start": "3076.634"
        }, 
        {
            "text": "because I&#39;m hopeful\nthat what we can do", 
            "dur": "2.167", 
            "start": "3079"
        }, 
        {
            "text": "is build on top of built-in\nlanguage deferred", 
            "dur": "3.866", 
            "start": "3081.167"
        }, 
        {
            "text": "or promise API,\nthe ability to use the weight", 
            "dur": "2.967", 
            "start": "3085.033"
        }, 
        {
            "text": "or async keywords to go help\nmark particular methods", 
            "dur": "3.167", 
            "start": "3088"
        }, 
        {
            "text": "of returning\nthese deferred objects,", 
            "dur": "1.5", 
            "start": "3091.167"
        }, 
        {
            "text": "but error handling does turn\ninto a primary question then.", 
            "dur": "3.934", 
            "start": "3092.667"
        }, 
        {
            "text": "So what they came to,", 
            "dur": "2.866", 
            "start": "3096.601"
        }, 
        {
            "text": "and I think\nit&#39;s a pretty good answer,", 
            "dur": "1.533", 
            "start": "3099.467"
        }, 
        {
            "text": "is that you have\na single callback, right?", 
            "dur": "2.267", 
            "start": "3101"
        }, 
        {
            "text": "And that needs to be\nalso informed of errors.", 
            "dur": "2.8", 
            "start": "3103.267"
        }, 
        {
            "text": "But you can have\nan optional second callback,", 
            "dur": "2.534", 
            "start": "3106.067"
        }, 
        {
            "text": "which will be told\nabout error conditions", 
            "dur": "2.599", 
            "start": "3108.601"
        }, 
        {
            "text": "if you choose to handle them\nindependently.", 
            "dur": "2", 
            "start": "3111.2"
        }, 
        {
            "text": "And I think,\nyou know, the idea", 
            "dur": "2.267", 
            "start": "3113.2"
        }, 
        {
            "text": "that you&#39;re not going\nto have to deal with errors", 
            "dur": "1.067", 
            "start": "3115.467"
        }, 
        {
            "text": "in the primary callback", 
            "dur": "1.866", 
            "start": "3116.534"
        }, 
        {
            "text": "is a little bit farfetched,", 
            "dur": "1.367", 
            "start": "3118.4"
        }, 
        {
            "text": "and so I think that&#39;s maybe\na good trade-off.", 
            "dur": "1.834", 
            "start": "3119.767"
        }, 
        {
            "text": "But it is an open topic.", 
            "dur": "3.333", 
            "start": "3121.601"
        }, 
        {
            "text": "We probably need\nlanguage level support", 
            "dur": "2.199", 
            "start": "3124.934"
        }, 
        {
            "text": "for sort of moving\nstack traces.", 
            "dur": "3.735", 
            "start": "3127.133"
        }, 
        {
            "text": "Like, if I throw in one catch\nhere and then re-throw", 
            "dur": "3.566", 
            "start": "3130.868"
        }, 
        {
            "text": "the exception someplace else,\nwe need some VM", 
            "dur": "1.966", 
            "start": "3134.434"
        }, 
        {
            "text": "or language level support\nto help us make that reporting", 
            "dur": "3.334", 
            "start": "3136.4"
        }, 
        {
            "text": "cleaner and nicer.", 
            "dur": "1.767", 
            "start": "3139.734"
        }, 
        {
            "text": "And I think\nthat&#39;s another important area", 
            "dur": "2.333", 
            "start": "3141.501"
        }, 
        {
            "text": "that we might be able to help\ntie these things back together,", 
            "dur": "3.6", 
            "start": "3143.834"
        }, 
        {
            "text": "once we go async.\nman: Okay, great.", 
            "dur": "2.966", 
            "start": "3147.434"
        }, 
        {
            "text": "man: Hi, I just wanted to know\nif there was any interest", 
            "dur": "2.867", 
            "start": "3150.4"
        }, 
        {
            "text": "or effort within Google\nto do some more of the more", 
            "dur": "5.967", 
            "start": "3153.267"
        }, 
        {
            "text": "server side JavaScript,\nstuff like Node JS,", 
            "dur": "2", 
            "start": "3159.234"
        }, 
        {
            "text": "and maybe any possibility\nof ever having that available", 
            "dur": "4.133", 
            "start": "3161.234"
        }, 
        {
            "text": "like on App Engine.", 
            "dur": "1.534", 
            "start": "3165.367"
        }, 
        {
            "text": "Russell: I can&#39;t speak\nto future product plans,", 
            "dur": "1.8", 
            "start": "3166.901"
        }, 
        {
            "text": "but I can say that the VA team\nis working closely", 
            "dur": "2.1", 
            "start": "3168.701"
        }, 
        {
            "text": "with the Node team to continue\nto make Node faster.", 
            "dur": "3.733", 
            "start": "3170.801"
        }, 
        {
            "text": "We care a lot about\ntheir use cases,", 
            "dur": "1.633", 
            "start": "3174.534"
        }, 
        {
            "text": "and we want to make sure\nthat we&#39;re supporting them.", 
            "dur": "4.634", 
            "start": "3176.167"
        }, 
        {
            "text": "man: So looking at the Traceur\nfunction and the no sugar,", 
            "dur": "3.833", 
            "start": "3180.801"
        }, 
        {
            "text": "de-sugaring, in Lisp,\nthis was done", 
            "dur": "2.833", 
            "start": "3184.634"
        }, 
        {
            "text": "because they had\na powerful macro facility,", 
            "dur": "2.566", 
            "start": "3187.467"
        }, 
        {
            "text": "so that the developer could\nactually introduce new syntax", 
            "dur": "2.901", 
            "start": "3190.033"
        }, 
        {
            "text": "into their programs and define\nthe behaviors in Lisp.", 
            "dur": "3.967", 
            "start": "3192.934"
        }, 
        {
            "text": "Is there any thought of\ndoing something like that", 
            "dur": "1.533", 
            "start": "3196.901"
        }, 
        {
            "text": "in JavaScript?", 
            "dur": "1.3", 
            "start": "3198.434"
        }, 
        {
            "text": "Russell: We have a hard time\nwith that in JavaScript,", 
            "dur": "1.7", 
            "start": "3199.734"
        }, 
        {
            "text": "because we have both statements\nand expressions,", 
            "dur": "2.434", 
            "start": "3201.434"
        }, 
        {
            "text": "and we have, you know,", 
            "dur": "2.532", 
            "start": "3203.868"
        }, 
        {
            "text": "a lot of complex grammar\nthat&#39;s not movable.", 
            "dur": "3.633", 
            "start": "3206.4"
        }, 
        {
            "text": "And as a result,\nany macro facility", 
            "dur": "2.301", 
            "start": "3210.033"
        }, 
        {
            "text": "is going to quickly\nbecome undecidable.", 
            "dur": "1.966", 
            "start": "3212.334"
        }, 
        {
            "text": "And so I think\nwe&#39;re in a place where macros,", 
            "dur": "3.501", 
            "start": "3214.3"
        }, 
        {
            "text": "the way I think you want them,\naren&#39;t possible", 
            "dur": "2.866", 
            "start": "3217.801"
        }, 
        {
            "text": "in JavaScript.", 
            "dur": "1.301", 
            "start": "3220.667"
        }, 
        {
            "text": "New syntax, specifically,", 
            "dur": "1.666", 
            "start": "3221.968"
        }, 
        {
            "text": "is going to have to continue\nto happen through the committee.", 
            "dur": "4.9", 
            "start": "3223.634"
        }, 
        {
            "text": "So I think there are places", 
            "dur": "1.466", 
            "start": "3228.534"
        }, 
        {
            "text": "where we can carve out\nsome stuff.", 
            "dur": "2.834", 
            "start": "3230"
        }, 
        {
            "text": "There&#39;s been some good work\nin string formatting,", 
            "dur": "2.266", 
            "start": "3232.834"
        }, 
        {
            "text": "for instance, to make it\npossible to plug in--", 
            "dur": "2.234", 
            "start": "3235.1"
        }, 
        {
            "text": "through protocols--some new\nbehavior into existing syntax,", 
            "dur": "3.666", 
            "start": "3237.334"
        }, 
        {
            "text": "and I think that&#39;s maybe\nthe promising way forward.", 
            "dur": "2.634", 
            "start": "3241"
        }, 
        {
            "text": "man: Yeah.", 
            "dur": "2.9", 
            "start": "3243.634"
        }, 
        {
            "text": "man: So did you know\nthat you can build Firefox", 
            "dur": "3.267", 
            "start": "3246.534"
        }, 
        {
            "text": "with support for Python\nas a scripting language?", 
            "dur": "3.433", 
            "start": "3249.801"
        }, 
        {
            "text": "Russell:\nI&#39;ve heard tell of this,", 
            "dur": "1.433", 
            "start": "3253.234"
        }, 
        {
            "text": "but it&#39;s been that way\nfor many years, as I recall.", 
            "dur": "2.067", 
            "start": "3254.667"
        }, 
        {
            "text": "man: Yes, debug build\nwith Firefox comes with it.", 
            "dur": "2.466", 
            "start": "3256.734"
        }, 
        {
            "text": "More seriously,\nwhat do you think of GWT", 
            "dur": "2.567", 
            "start": "3259.2"
        }, 
        {
            "text": "or more usefully Pyjamas\nas actual development platforms", 
            "dur": "5.967", 
            "start": "3261.767"
        }, 
        {
            "text": "instead of writing\ndirect JavaScript,", 
            "dur": "3.033", 
            "start": "3267.734"
        }, 
        {
            "text": "and using the richer type system\nof Python or Java", 
            "dur": "5.266", 
            "start": "3270.767"
        }, 
        {
            "text": "instead of the bare bones one\nin JavaScript?", 
            "dur": "2.668", 
            "start": "3276.033"
        }, 
        {
            "text": "Russell: Type systems\nare really great.", 
            "dur": "1.366", 
            "start": "3278.701"
        }, 
        {
            "text": "I think that it&#39;s a key\nmissing feature from JavaScript", 
            "dur": "3.966", 
            "start": "3280.067"
        }, 
        {
            "text": "specifically because what\nyou wind up writing, again,", 
            "dur": "1.901", 
            "start": "3284.033"
        }, 
        {
            "text": "is a lot of boilerplate\nto help you test", 
            "dur": "1.567", 
            "start": "3285.934"
        }, 
        {
            "text": "whether or not you were actually\ntall enough to ride the ride.", 
            "dur": "2.966", 
            "start": "3287.501"
        }, 
        {
            "text": "You actually have to\nsort of go cart around", 
            "dur": "1.633", 
            "start": "3290.467"
        }, 
        {
            "text": "a lot of this\ntesting magic.", 
            "dur": "1.367", 
            "start": "3292.1"
        }, 
        {
            "text": "I&#39;m not hopeful\nfor type systems.", 
            "dur": "1.533", 
            "start": "3293.467"
        }, 
        {
            "text": "This is my personal opinion.", 
            "dur": "1.367", 
            "start": "3295"
        }, 
        {
            "text": "I&#39;m not hopeful for type systems\nas a be all and end all", 
            "dur": "2.867", 
            "start": "3296.367"
        }, 
        {
            "text": "sort of verification system\nfor your program.", 
            "dur": "3.1", 
            "start": "3299.234"
        }, 
        {
            "text": "The web is too dynamic.", 
            "dur": "1.5", 
            "start": "3302.334"
        }, 
        {
            "text": "Client-side programs\nare too dynamic for that.", 
            "dur": "1.9", 
            "start": "3303.834"
        }, 
        {
            "text": "We&#39;re dealing with\nuser behavior a lot.", 
            "dur": "1.7", 
            "start": "3305.734"
        }, 
        {
            "text": "Instead, what I&#39;d like for us\nto get to is a place", 
            "dur": "2.8", 
            "start": "3307.434"
        }, 
        {
            "text": "where the syntactic warts\nof JavaScript sort of get", 
            "dur": "4.1", 
            "start": "3310.234"
        }, 
        {
            "text": "eased over one way\nor the other.", 
            "dur": "1.233", 
            "start": "3314.334"
        }, 
        {
            "text": "Things like CoffeeScript", 
            "dur": "1.134", 
            "start": "3315.567"
        }, 
        {
            "text": "are pointing\nin a good direction here,", 
            "dur": "1.432", 
            "start": "3316.701"
        }, 
        {
            "text": "where you can sort of come\nback up with some new syntax,", 
            "dur": "4.601", 
            "start": "3318.133"
        }, 
        {
            "text": "and hopefully that&#39;ll\neventually work its way", 
            "dur": "1.733", 
            "start": "3322.734"
        }, 
        {
            "text": "into the language.", 
            "dur": "1.2", 
            "start": "3324.467"
        }, 
        {
            "text": "But things like\nthe module that are--", 
            "dur": "1.5", 
            "start": "3325.667"
        }, 
        {
            "text": "they&#39;re going to have\nan analogous API, again,", 
            "dur": "2.3", 
            "start": "3327.167"
        }, 
        {
            "text": "building a protocol that you can\nplug into with your own code,", 
            "dur": "3.167", 
            "start": "3329.467"
        }, 
        {
            "text": "and that API will allow you\nto do things like run", 
            "dur": "2.433", 
            "start": "3332.634"
        }, 
        {
            "text": "the CoffeeScript compiler\nor the Pyjamas compiler", 
            "dur": "2.867", 
            "start": "3335.067"
        }, 
        {
            "text": "across loaded modules\nbefore they&#39;re run,", 
            "dur": "2.333", 
            "start": "3337.934"
        }, 
        {
            "text": "which means that you can\nsort of have runtime support", 
            "dur": "2.3", 
            "start": "3340.267"
        }, 
        {
            "text": "for those built-in.", 
            "dur": "2.466", 
            "start": "3342.567"
        }, 
        {
            "text": "I think the--you asked a\nquestion", 
            "dur": "1.634", 
            "start": "3345.033"
        }, 
        {
            "text": "of what do I think about", 
            "dur": "1.167", 
            "start": "3346.667"
        }, 
        {
            "text": "those tools as a way to do\nproduction work.", 
            "dur": "3.366", 
            "start": "3347.834"
        }, 
        {
            "text": "If your language veers far\nenough from the core semantics", 
            "dur": "3.134", 
            "start": "3351.2"
        }, 
        {
            "text": "of JavaScript, you wind up\nnot just with the ability", 
            "dur": "3", 
            "start": "3354.334"
        }, 
        {
            "text": "to do all sorts of tooling\nand stuff that comes along", 
            "dur": "2.567", 
            "start": "3357.334"
        }, 
        {
            "text": "with your source language,\nbut you also wind up with", 
            "dur": "2.766", 
            "start": "3359.901"
        }, 
        {
            "text": "the need for the runtime\nto do dead code edition.", 
            "dur": "3.4", 
            "start": "3362.667"
        }, 
        {
            "text": "You need to go and sort of\nnot just do a one-for-one", 
            "dur": "5.167", 
            "start": "3366.067"
        }, 
        {
            "text": "translation down to the\nanalogous statements", 
            "dur": "1.933", 
            "start": "3371.234"
        }, 
        {
            "text": "in the other language,\nbut you have to make sure", 
            "dur": "1.267", 
            "start": "3373.167"
        }, 
        {
            "text": "that the semantics are right.", 
            "dur": "1.8", 
            "start": "3374.434"
        }, 
        {
            "text": "You have to make sure\nthat you have code in there", 
            "dur": "1.433", 
            "start": "3376.234"
        }, 
        {
            "text": "to support any differences,\nany impotence mismatches", 
            "dur": "2.7", 
            "start": "3377.667"
        }, 
        {
            "text": "between the two languages.", 
            "dur": "1.067", 
            "start": "3380.367"
        }, 
        {
            "text": "And so I&#39;m much more hopeful", 
            "dur": "1.8", 
            "start": "3381.434"
        }, 
        {
            "text": "about things like CoffeeScript\nand the Traceur editions", 
            "dur": "4.267", 
            "start": "3383.234"
        }, 
        {
            "text": "because they don&#39;t add\na lot of extra stuff,", 
            "dur": "2.532", 
            "start": "3387.501"
        }, 
        {
            "text": "because the languages\naren&#39;t that far away", 
            "dur": "1.434", 
            "start": "3390.033"
        }, 
        {
            "text": "in terms of core semantic.", 
            "dur": "1.566", 
            "start": "3391.467"
        }, 
        {
            "text": "man: All right,\nthank you.", 
            "dur": "2.501", 
            "start": "3393.033"
        }, 
        {
            "text": "man: Hi, one kind of application\ndomain that could benefit", 
            "dur": "3.434", 
            "start": "3395.534"
        }, 
        {
            "text": "from scripting\nthat&#39;s not really--", 
            "dur": "2.666", 
            "start": "3398.968"
        }, 
        {
            "text": "doesn&#39;t have a solution today\nis a native Android app.", 
            "dur": "3.433", 
            "start": "3401.634"
        }, 
        {
            "text": "So I wonder if there are any--", 
            "dur": "1.267", 
            "start": "3405.067"
        }, 
        {
            "text": "we&#39;ve dabbled with,\nyou know, plug-in Rhino", 
            "dur": "1.634", 
            "start": "3406.334"
        }, 
        {
            "text": "and things like that.", 
            "dur": "1.366", 
            "start": "3407.968"
        }, 
        {
            "text": "I wonder if there&#39;s any activity\nin that area right now.", 
            "dur": "3.1", 
            "start": "3409.334"
        }, 
        {
            "text": "Russell: I think you&#39;d have\nto ask the Android team.", 
            "dur": "1.666", 
            "start": "3412.434"
        }, 
        {
            "text": "I&#39;m sorry, I&#39;m not up-to-date\non what they&#39;re doing there.", 
            "dur": "1.868", 
            "start": "3414.1"
        }, 
        {
            "text": "man: Okay.\nRussell: Thanks.", 
            "dur": "2.599", 
            "start": "3415.968"
        }, 
        {
            "text": "man:\nI had another question.", 
            "dur": "1.267", 
            "start": "3418.567"
        }, 
        {
            "text": "So in my Python programs,\nI like to use sometimes", 
            "dur": "4.566", 
            "start": "3419.834"
        }, 
        {
            "text": "multiple inheritance,\nand I have complex--", 
            "dur": "2.767", 
            "start": "3424.4"
        }, 
        {
            "text": "Russell: C3MRO,\nright, yeah.", 
            "dur": "1.801", 
            "start": "3427.167"
        }, 
        {
            "text": "man: Dependency graphs\nand so on, yeah.", 
            "dur": "1.599", 
            "start": "3428.968"
        }, 
        {
            "text": "So and they have a method\nresolution order in Python", 
            "dur": "3.967", 
            "start": "3430.567"
        }, 
        {
            "text": "that allows you to call\nthe super classes methods,", 
            "dur": "2.9", 
            "start": "3434.534"
        }, 
        {
            "text": "you know, exactly once\nin the right order, and--", 
            "dur": "2.167", 
            "start": "3437.434"
        }, 
        {
            "text": "or at least\na well-defined order.", 
            "dur": "2.499", 
            "start": "3439.601"
        }, 
        {
            "text": "Is anything going on in Harmony\nfor allowing for something", 
            "dur": "4.234", 
            "start": "3442.1"
        }, 
        {
            "text": "like an MRO type\ncall graph resolution?", 
            "dur": "3.966", 
            "start": "3446.334"
        }, 
        {
            "text": "Russell: I don&#39;t think\nwe&#39;re going to break the idea", 
            "dur": "2.7", 
            "start": "3450.3"
        }, 
        {
            "text": "of a single prototype.\nman: Right.", 
            "dur": "2.234", 
            "start": "3453"
        }, 
        {
            "text": "Russell: So the analogous\nthing here would be", 
            "dur": "1.799", 
            "start": "3455.234"
        }, 
        {
            "text": "multi prototype languages.", 
            "dur": "2.468", 
            "start": "3457.033"
        }, 
        {
            "text": "I&#39;m hopeful\nthat what we&#39;ll get done", 
            "dur": "1.3", 
            "start": "3459.501"
        }, 
        {
            "text": "is something like\nTom Van Cutsem&#39;s", 
            "dur": "1.933", 
            "start": "3460.801"
        }, 
        {
            "text": "Traits semantic,", 
            "dur": "1.9", 
            "start": "3462.734"
        }, 
        {
            "text": "where we can add\na syntax for defining", 
            "dur": "2.133", 
            "start": "3464.634"
        }, 
        {
            "text": "a set of things\nthat you would sort of--", 
            "dur": "2.333", 
            "start": "3466.767"
        }, 
        {
            "text": "like we did with mix-ins,\nadd to the class,", 
            "dur": "2", 
            "start": "3469.1"
        }, 
        {
            "text": "and then do conflict resolution\nwith syntax.", 
            "dur": "3.868", 
            "start": "3471.1"
        }, 
        {
            "text": "Because what you&#39;re trying to\nsay in a lot of these cases", 
            "dur": "1.599", 
            "start": "3474.968"
        }, 
        {
            "text": "isn&#39;t, I&#39;d like for you\nto sort of decide for me", 
            "dur": "2.334", 
            "start": "3476.567"
        }, 
        {
            "text": "which of these things\nI am at runtime.", 
            "dur": "1.666", 
            "start": "3478.901"
        }, 
        {
            "text": "It&#39;s not really a--\nan &quot;is a&quot; relationship.", 
            "dur": "1.733", 
            "start": "3480.567"
        }, 
        {
            "text": "It&#39;s sort of a &quot;has a&quot;\nrelationship,", 
            "dur": "1.134", 
            "start": "3482.3"
        }, 
        {
            "text": "what you&#39;re saying.", 
            "dur": "1.033", 
            "start": "3483.434"
        }, 
        {
            "text": "I&#39;d like this new behavior", 
            "dur": "1.267", 
            "start": "3484.467"
        }, 
        {
            "text": "to also be available\nto my object.", 
            "dur": "2.1", 
            "start": "3485.734"
        }, 
        {
            "text": "And if you can factor\nthose things out,", 
            "dur": "1.366", 
            "start": "3487.834"
        }, 
        {
            "text": "it can help with composability\nand then eventually", 
            "dur": "2.067", 
            "start": "3489.2"
        }, 
        {
            "text": "with type testing.", 
            "dur": "1.4", 
            "start": "3491.267"
        }, 
        {
            "text": "And I think Traits are where,\nat least I&#39;m hopeful,", 
            "dur": "3.234", 
            "start": "3492.667"
        }, 
        {
            "text": "that we&#39;ll go\nto make a lot of that easier.", 
            "dur": "2.299", 
            "start": "3495.901"
        }, 
        {
            "text": "man: Yeah, I use a wrapper\nwhere like I kind of", 
            "dur": "2.501", 
            "start": "3498.2"
        }, 
        {
            "text": "build a copy of\na well-defined prototype chain,", 
            "dur": "3.133", 
            "start": "3500.701"
        }, 
        {
            "text": "specifically for this\nparticular set of mix-ins,", 
            "dur": "2.7", 
            "start": "3503.834"
        }, 
        {
            "text": "and so like\nyou can kind of emulate,", 
            "dur": "2.033", 
            "start": "3506.534"
        }, 
        {
            "text": "you know,\nby specifically listing", 
            "dur": "1.367", 
            "start": "3508.567"
        }, 
        {
            "text": "the order in which you want\nthings to be resolved", 
            "dur": "3.667", 
            "start": "3509.934"
        }, 
        {
            "text": "and kind of get the behavior\nfor that in JavaScript.", 
            "dur": "5.633", 
            "start": "3513.601"
        }, 
        {
            "text": "man: Mainly curious, do you know\nwhether Traceur shares", 
            "dur": "2.833", 
            "start": "3519.234"
        }, 
        {
            "text": "common lineage with\nthe cross interpreter", 
            "dur": "2.667", 
            "start": "3522.067"
        }, 
        {
            "text": "in Google Widget Toolkit?", 
            "dur": "2.5", 
            "start": "3524.734"
        }, 
        {
            "text": "Russell: The Traceur code base\nis brand-new.", 
            "dur": "1.6", 
            "start": "3527.234"
        }, 
        {
            "text": "It&#39;s a, you know,", 
            "dur": "2.166", 
            "start": "3528.834"
        }, 
        {
            "text": "a new client-side compiler\nthat we wrote,", 
            "dur": "4.968", 
            "start": "3531"
        }, 
        {
            "text": "hand-built parser,\nthat sort of thing.", 
            "dur": "3.9", 
            "start": "3535.968"
        }, 
        {
            "text": "man: Thank you.\nRussell: Yeah.", 
            "dur": "3.399", 
            "start": "3539.868"
        }, 
        {
            "text": "All right, one more.\nAll right.", 
            "dur": "3.534", 
            "start": "3543.267"
        }, 
        {
            "text": "man:\nSo I&#39;m a C# developer,", 
            "dur": "2.1", 
            "start": "3546.801"
        }, 
        {
            "text": "and I&#39;ve stayed away from\nJavaScript for a very long time,", 
            "dur": "4.299", 
            "start": "3548.901"
        }, 
        {
            "text": "mostly because I didn&#39;t--\nI knew the what,", 
            "dur": "2.634", 
            "start": "3553.2"
        }, 
        {
            "text": "but I didn&#39;t know the why,\nand that&#39;s been really good", 
            "dur": "3.067", 
            "start": "3555.834"
        }, 
        {
            "text": "in today&#39;s session.", 
            "dur": "2.099", 
            "start": "3558.901"
        }, 
        {
            "text": "I&#39;d like to continue\nexploring.", 
            "dur": "3.634", 
            "start": "3561"
        }, 
        {
            "text": "Can you recommend any reading--\nspecific reading material?", 
            "dur": "3.3", 
            "start": "3564.634"
        }, 
        {
            "text": "Because, of course, I could\nalways do a Google search.", 
            "dur": "1.934", 
            "start": "3567.934"
        }, 
        {
            "text": "Russell:\nYeah.", 
            "dur": "1.366", 
            "start": "3569.868"
        }, 
        {
            "text": "man: But that would continue\nalong the path of not just", 
            "dur": "2.267", 
            "start": "3571.234"
        }, 
        {
            "text": "the what but the why also.", 
            "dur": "2.033", 
            "start": "3573.501"
        }, 
        {
            "text": "Russell:\nThe latest version", 
            "dur": "1.334", 
            "start": "3575.534"
        }, 
        {
            "text": "of &quot;JavaScript, the Definitive\nGuide&quot; is pretty good.", 
            "dur": "2.199", 
            "start": "3576.868"
        }, 
        {
            "text": "I recommend\n&quot;Eloquent JavaScript.&quot;", 
            "dur": "3", 
            "start": "3579.067"
        }, 
        {
            "text": "It does a great job of sort of\nintroducing these core concepts", 
            "dur": "2.567", 
            "start": "3582.067"
        }, 
        {
            "text": "and getting you through not just\nsort of what you can do.", 
            "dur": "3.933", 
            "start": "3584.634"
        }, 
        {
            "text": "I didn&#39;t talk a lot\nabout how DOM interacts", 
            "dur": "2.234", 
            "start": "3588.567"
        }, 
        {
            "text": "with all of these things.", 
            "dur": "2.8", 
            "start": "3590.801"
        }, 
        {
            "text": "My recommendation\nis that you find someplace", 
            "dur": "3.499", 
            "start": "3593.601"
        }, 
        {
            "text": "to start playing with a language\nthat&#39;s not a web browser.", 
            "dur": "2.768", 
            "start": "3597.1"
        }, 
        {
            "text": "I mean, web browsers\nare really handy.", 
            "dur": "1.366", 
            "start": "3599.868"
        }, 
        {
            "text": "You can start to sort of like\nmake this all happen.", 
            "dur": "2.734", 
            "start": "3601.234"
        }, 
        {
            "text": "But if you just sort of play\nwith the command line", 
            "dur": "1.799", 
            "start": "3603.968"
        }, 
        {
            "text": "in the browser or start to work\nwith a local copy of V8", 
            "dur": "3.633", 
            "start": "3605.767"
        }, 
        {
            "text": "or Node JS,\nyou can really get a feel", 
            "dur": "1.934", 
            "start": "3609.4"
        }, 
        {
            "text": "for what&#39;s in the language\nand what&#39;s not in the browser.", 
            "dur": "2.167", 
            "start": "3611.334"
        }, 
        {
            "text": "JavaScript takes--in almost\nevery environment,", 
            "dur": "1.899", 
            "start": "3613.501"
        }, 
        {
            "text": "it takes a lot of its identity\nfrom the standard library", 
            "dur": "2.834", 
            "start": "3615.4"
        }, 
        {
            "text": "that sort of\nit&#39;s been wedded to.", 
            "dur": "2.333", 
            "start": "3618.234"
        }, 
        {
            "text": "And in most cases,", 
            "dur": "1.334", 
            "start": "3620.567"
        }, 
        {
            "text": "because it has\na very small standard library,", 
            "dur": "1.033", 
            "start": "3621.901"
        }, 
        {
            "text": "all of that is in\nthe environment.", 
            "dur": "1.466", 
            "start": "3622.934"
        }, 
        {
            "text": "And so the more you can sort of\nremove those potential hurdles", 
            "dur": "3.9", 
            "start": "3624.4"
        }, 
        {
            "text": "or sort of impotence mismatches", 
            "dur": "1.634", 
            "start": "3628.3"
        }, 
        {
            "text": "with what&#39;s just\nin the language,", 
            "dur": "1.633", 
            "start": "3629.934"
        }, 
        {
            "text": "I think the faster\nit&#39;ll help you learn it.", 
            "dur": "3.134", 
            "start": "3631.567"
        }, 
        {
            "text": "Yeah.", 
            "dur": "1.233", 
            "start": "3634.701"
        }, 
        {
            "text": "man: Actually,\nin a similar situation", 
            "dur": "2.266", 
            "start": "3635.934"
        }, 
        {
            "text": "as the previous question,\nwhich is I stayed away", 
            "dur": "2.401", 
            "start": "3638.2"
        }, 
        {
            "text": "from JavaScript\nfor a number of reasons.", 
            "dur": "2.866", 
            "start": "3640.601"
        }, 
        {
            "text": "Probably\none of the biggest ones", 
            "dur": "1.501", 
            "start": "3643.467"
        }, 
        {
            "text": "was the lack of debug support.\nRussell: Mm-hmm.", 
            "dur": "2.399", 
            "start": "3644.968"
        }, 
        {
            "text": "man: And the fact that you have\nunexpected surprises,", 
            "dur": "4.666", 
            "start": "3647.367"
        }, 
        {
            "text": "like being able to overload\nthe array constructor,", 
            "dur": "4.234", 
            "start": "3652.033"
        }, 
        {
            "text": "that lend itself to,\nyou know, security holes,", 
            "dur": "3.701", 
            "start": "3656.267"
        }, 
        {
            "text": "whereas someone coming\nfrom another language", 
            "dur": "1.833", 
            "start": "3659.968"
        }, 
        {
            "text": "isn&#39;t expecting that,\nand they don&#39;t even consider", 
            "dur": "2.199", 
            "start": "3661.801"
        }, 
        {
            "text": "that as a possibility\nwhen you&#39;re looking at code.", 
            "dur": "2.434", 
            "start": "3664"
        }, 
        {
            "text": "So specifically, is there\nanything that&#39;s talked about", 
            "dur": "3.5", 
            "start": "3666.434"
        }, 
        {
            "text": "being added, where--\nwhen you talk about modules,", 
            "dur": "3.266", 
            "start": "3669.934"
        }, 
        {
            "text": "that the module can set up\ncertainly like preconditions?", 
            "dur": "2.8", 
            "start": "3673.2"
        }, 
        {
            "text": "I&#39;m expecting these sets\nof things to be true,", 
            "dur": "3.634", 
            "start": "3676"
        }, 
        {
            "text": "like the array constructor\ncannot be overloaded,", 
            "dur": "2.6", 
            "start": "3679.634"
        }, 
        {
            "text": "or anything else\nwhere you can say, flag,", 
            "dur": "4.7", 
            "start": "3682.234"
        }, 
        {
            "text": "this is going to be a problem\nor not going to run right.", 
            "dur": "2.767", 
            "start": "3686.934"
        }, 
        {
            "text": "Russell: So one of the big\nthings that&#39;s happening", 
            "dur": "1.399", 
            "start": "3689.701"
        }, 
        {
            "text": "with the module syntax\nis that we&#39;re removing", 
            "dur": "2.734", 
            "start": "3691.1"
        }, 
        {
            "text": "the ability to share globals,\nso you won&#39;t have", 
            "dur": "2.466", 
            "start": "3693.834"
        }, 
        {
            "text": "a single shared global,\nwhich is going to be big,", 
            "dur": "3", 
            "start": "3696.3"
        }, 
        {
            "text": "to prevent people from sort of\nblowing your own legs off.", 
            "dur": "2.467", 
            "start": "3699.3"
        }, 
        {
            "text": "The other thing\nis that ECMAScript 5,", 
            "dur": "2.366", 
            "start": "3701.767"
        }, 
        {
            "text": "the version that was just\nrecently ratified,", 
            "dur": "3.835", 
            "start": "3704.133"
        }, 
        {
            "text": "implements what we call\na strict mode.", 
            "dur": "2.232", 
            "start": "3707.968"
        }, 
        {
            "text": "And strict mode turns off\nsome of the worst foot guns.", 
            "dur": "2.267", 
            "start": "3710.2"
        }, 
        {
            "text": "It helps keep you out of trouble\nby giving you more and more", 
            "dur": "6.767", 
            "start": "3712.467"
        }, 
        {
            "text": "pre-checking for things\nlike uninitialized variables,", 
            "dur": "3.133", 
            "start": "3719.234"
        }, 
        {
            "text": "that sort of thing,\nwhere it keeps you from", 
            "dur": "2.267", 
            "start": "3722.367"
        }, 
        {
            "text": "sort of tripping over yourself\nin some pretty common areas.", 
            "dur": "3.334", 
            "start": "3724.634"
        }, 
        {
            "text": "It&#39;s not perfect,\nbut it&#39;s certainly a start.", 
            "dur": "2.232", 
            "start": "3727.968"
        }, 
        {
            "text": "So use strict inside\nof all of your functions,", 
            "dur": "1.601", 
            "start": "3730.2"
        }, 
        {
            "text": "and you should be good to go.", 
            "dur": "1.399", 
            "start": "3731.801"
        }, 
        {
            "text": "man: And what about the idea\nof like official debug support?", 
            "dur": "4.1", 
            "start": "3733.2"
        }, 
        {
            "text": "Russell: So that&#39;s\nan engine-by-engine thing.", 
            "dur": "3.367", 
            "start": "3737.3"
        }, 
        {
            "text": "The topic of common stack traces\nhas been raised", 
            "dur": "5.366", 
            "start": "3740.667"
        }, 
        {
            "text": "a bunch of times, and it&#39;s\ngoing to be very difficult,", 
            "dur": "1.967", 
            "start": "3746.033"
        }, 
        {
            "text": "because that constrains\nour ability to optimize.", 
            "dur": "2.067", 
            "start": "3748"
        }, 
        {
            "text": "So things like\nalighting away dead code,", 
            "dur": "3.333", 
            "start": "3750.067"
        }, 
        {
            "text": "those are the sorts of things\nthat are going to be hard to do", 
            "dur": "2.167", 
            "start": "3753.4"
        }, 
        {
            "text": "if we have to agree\non a stack trace format.", 
            "dur": "1.7", 
            "start": "3755.567"
        }, 
        {
            "text": "So what we do have is\nreally good support,", 
            "dur": "2.1", 
            "start": "3757.267"
        }, 
        {
            "text": "say, in the Chrome web inspector\nfor setting breakpoints,", 
            "dur": "3.933", 
            "start": "3759.367"
        }, 
        {
            "text": "future breakpoints,\ngetting call stacks,", 
            "dur": "2.7", 
            "start": "3763.3"
        }, 
        {
            "text": "and soon the ability to\nsort of wire up line numbers", 
            "dur": "4.033", 
            "start": "3766"
        }, 
        {
            "text": "to source code.", 
            "dur": "1.134", 
            "start": "3770.033"
        }, 
        {
            "text": "So yeah, debugability\nis a hot topic.", 
            "dur": "2.567", 
            "start": "3771.167"
        }, 
        {
            "text": "It tends to happen\nthrough the browser", 
            "dur": "1.967", 
            "start": "3773.734"
        }, 
        {
            "text": "and not through\nthe language runtime.", 
            "dur": "1.933", 
            "start": "3775.701"
        }, 
        {
            "text": "man:\n[indistinct]", 
            "dur": "3.833", 
            "start": "3777.634"
        }, 
        {
            "text": "Russell: So the question was\nwill a closure compiler", 
            "dur": "1.733", 
            "start": "3781.467"
        }, 
        {
            "text": "help with the debugability.\nIf the closure compiler has--", 
            "dur": "2.401", 
            "start": "3783.2"
        }, 
        {
            "text": "man:\n[indistinct]", 
            "dur": "3.3", 
            "start": "3785.601"
        }, 
        {
            "text": "Russell: Oh, will the closure\ncompiler help beginners?", 
            "dur": "2.533", 
            "start": "3788.901"
        }, 
        {
            "text": "No. It&#39;s designed\nto help folks who know", 
            "dur": "4.333", 
            "start": "3791.434"
        }, 
        {
            "text": "that they have a problem\navoid having problems.", 
            "dur": "2", 
            "start": "3795.767"
        }, 
        {
            "text": "Okay, cool.", 
            "dur": "1.366", 
            "start": "3797.767"
        }, 
        {
            "text": "Thanks again for coming,\nand I&#39;m looking forward to it.", 
            "dur": "2.967", 
            "start": "3799.133"
        }
    ], 
    "title": "Google I/O 2011: Learning to Love JavaScript", 
    "video_defintion": "hd", 
    "topics": [
        "/m/02p97", 
        "/m/045c7b"
    ], 
    "number_views": 204440, 
    "categories": [
        30
    ], 
    "comments": [
        {
            "date": "2015-05-07T09:46:37.820Z", 
            "text": "COOD AFTERNOON MY FRIEND YOU AER WEEL CAME HAVE NICE DAY JASON BY NOW MY FRIEND", 
            "author": "\u202b\u0633\u0627\u0644\u0645 \u0627\u0644\u202c\u200e"
        }, 
        {
            "date": "2015-03-31T12:51:46.300Z", 
            "text": "nobody noticed the id of this youtube video. Read the first 3 characters!\ufeff", 
            "author": "Daniel Brunner"
        }, 
        {
            "date": "2014-10-20T22:50:50.137Z", 
            "text": "", 
            "author": "K.K. Smith"
        }, 
        {
            "date": "2014-10-18T01:10:13.418Z", 
            "text": "Great talk! Although, he kept hitting home \"top-to-bottom\", \"left-to-right\" \nas if this is surprising behavior for a single threaded execution \nenvironment. \ufeff", 
            "author": "mpeterac"
        }, 
        {
            "date": "2014-07-12T11:48:02.624Z", 
            "text": "So insightful.Thx alot.\ufeff", 
            "author": "Sorin Irimies"
        }, 
        {
            "date": "2014-07-11T20:58:57.000Z", 
            "text": "These two sentences sum up so much about the misunderstanding of JS.\n\n\" Javascript inverts the relationship between classes and functions. We \ntreat functions as behavior that can carry data  versus classes which are \ndata that can carry behavior.\"\ufeff", 
            "author": "Ryan Martin"
        }, 
        {
            "date": "2014-05-31T22:03:25.433Z", 
            "text": "Google I/O 2011: Learning to Love JavaScript\ufeff", 
            "author": "CARLOS OLMOS"
        }, 
        {
            "date": "2014-05-14T21:46:44.000Z", 
            "text": "You'll learn more from 20 minutes of this video than reading a tutorial for \na couple of hours. You understand the language's core better - but not sure \nthat you will learn to LOVE it.\nFeels like many arguments for the awesomeness of js boils down to ways to \ncompensate for missing concepts.\nFor instance at 25:30 there's a great explanation of being able to add \nproperties at run time. But it just boils down to \"you can build concepts \nwhich are not necessarily given to you in javascript\". So that's not a \nreason to love JS, it just makes you feel like it's a shame those concepts \nare missing from the start\ufeff", 
            "author": "BenRangel"
        }, 
        {
            "date": "2014-05-01T05:21:32.571Z", 
            "text": "Love to Learning JS \ufeff", 
            "author": "Chit Thiri Maung"
        }, 
        {
            "date": "2014-04-25T09:00:56.641Z", 
            "text": "JS is just so sweet! and am so glad for such kind of talks. I love it!\ufeff", 
            "author": "Zurin IO"
        }, 
        {
            "date": "2014-03-05T15:45:10.954Z", 
            "text": "Learn to Love JavaScript, I wonder how it has evolved. \ufeff", 
            "author": "Abdullah Kadhim"
        }, 
        {
            "date": "2014-03-04T22:49:19.470Z", 
            "text": "", 
            "author": "Milos Glavinic"
        }, 
        {
            "date": "2014-03-01T20:01:23.420Z", 
            "text": "", 
            "author": "Celavie Yang"
        }, 
        {
            "date": "2014-02-27T06:02:22.867Z", 
            "text": "", 
            "author": "Kun Ran (\u7b11\u4e00\u7b11)"
        }, 
        {
            "date": "2014-02-26T16:56:00.780Z", 
            "text": "", 
            "author": "Dallas Vogels"
        }, 
        {
            "date": "2014-02-21T12:00:40.474Z", 
            "text": "", 
            "author": "Slavi\u0161a Peri\u0161i\u0107"
        }, 
        {
            "date": "2014-02-19T20:37:26.568Z", 
            "text": "", 
            "author": "manish agravat"
        }, 
        {
            "date": "2014-01-22T03:15:22.899Z", 
            "text": "", 
            "author": "Gabriela Braga"
        }, 
        {
            "date": "2013-12-31T16:22:12.000Z", 
            "text": "Nice talk. I wasn't aware of the core JavaScript ideas +Alex Russell talks \nabout. I'm going to read Eloquent JavaScript right away.\ufeff", 
            "author": "David Wittenbrink"
        }, 
        {
            "date": "2013-12-19T22:56:49.630Z", 
            "text": "Jim Larry in living Coker\ufeff", 
            "author": "Louie DiNatale"
        }, 
        {
            "date": "2013-12-12T17:24:17.533Z", 
            "text": "NICE\ufeff", 
            "author": "eltxo deAtn"
        }, 
        {
            "date": "2013-12-07T20:15:16.355Z", 
            "text": "Learning to love JavaScript\ufeff", 
            "author": "Justin Young"
        }, 
        {
            "date": "2013-12-03T03:44:54.509Z", 
            "text": "javascript rules!!!!!!\ufeff", 
            "author": "jesus alan aguilar vazquez"
        }, 
        {
            "date": "2013-12-02T17:29:08.808Z", 
            "text": "Why get rid of stampy\ufeff", 
            "author": "TomThe GamingFox"
        }, 
        {
            "date": "2013-11-09T11:19:56.893Z", 
            "text": "Woo Really fantastic and Great\ufeff", 
            "author": "Anto Web Solutions"
        }, 
        {
            "date": "2013-10-11T09:05:08.139Z", 
            "text": "Is there any way to get slides from this presentadion? They look awesome!", 
            "author": "123IGRACH"
        }, 
        {
            "date": "2013-10-03T19:44:03.198Z", 
            "text": "Have you heard about Morsch Muscle Madness? (do a google search for it) It \nis a quick way for you to get ripped fast.", 
            "author": "TheRocking37"
        }, 
        {
            "date": "2013-09-05T16:54:19.979Z", 
            "text": "I'm glad you've changed opinion from no hw control to poor hw control. It \nhas been used apart from the web for quite some time now (google js uses \noutside of web pages). Js can be used to do anything as it's a Turing \ncomplete language, but it isn't the best suited language for close to the \nmetal programming. It is very well suited for gui apps, and a lot of the \nrecent drive in js has been towards this future (the spa movement).", 
            "author": "Wafffl3"
        }, 
        {
            "date": "2013-09-03T08:49:37.695Z", 
            "text": "Even though Node.js provides Javascript hardware access how many actually \nuse it to program microprocessors or write GUI applications? Js is great \nfor the web though for anything other than that it is immature.", 
            "author": "prathik728"
        }, 
        {
            "date": "2013-09-03T05:35:20.278Z", 
            "text": "\"OPEN SOURCE - FUCK YEAH\" ", 
            "author": "Ryan McGowan"
        }, 
        {
            "date": "2013-08-25T22:05:09.094Z", 
            "text": "You're mistaking java and javascript somehow even though they have nothing \nin common. Also while js took it's syntax from c, the design of js is \nheavily based off of scheme and small talk. So js would exist without c, \nbut it would look a lot different.", 
            "author": "Wafffl3"
        }, 
        {
            "date": "2013-08-25T21:54:13.651Z", 
            "text": "Javascript can access hardware but is generally browser limited by design. \nNodejs has hardware access as it's run outside of the browser sandbox. The \nis no programming language war, use the correct language for the job.", 
            "author": "Wafffl3"
        }, 
        {
            "date": "2013-08-14T02:54:22.846Z", 
            "text": "Wow, who shoved a broom up your ass. ", 
            "author": "\u0131ll\u0131ll\u0131 \u01dd\u0287\u0250u \u0131ll\u0131ll\u0131"
        }, 
        {
            "date": "2013-08-03T08:08:28.226Z", 
            "text": "I am learning Javascript and PHP and I'm not feeling a idiot. Perhaps you \nhave born with full knowledge of programming, lucky you. Idiot.", 
            "author": "sisco puig"
        }, 
        {
            "date": "2013-07-23T15:06:16.397Z", 
            "text": "Great stuff!! <3 learning Javascript.\ufeff", 
            "author": "Chacho Jones"
        }, 
        {
            "date": "2013-07-16T21:01:28.249Z", 
            "text": "This is a really great talk. I didn't understand the significance of a lot \nof what he was saying the first time I watched it. However, coming back \nafter about 6 months during which time I worked with javascript \n(intermediate stuff), this guy makes ties in the concepts of javascript \npretty well.", 
            "author": "bertobertoberto3"
        }, 
        {
            "date": "2013-07-11T20:20:38.349Z", 
            "text": "javascript is a BiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiG mess", 
            "author": "Kodjo OHIN"
        }, 
        {
            "date": "2013-07-11T08:16:29.915Z", 
            "text": "Javascript is good only for the front-end part of the web and the way it is \nnow it won't go anywhere apart from the web. The use is so high because \nidiots like you can learn it easily and think that you have some clue about \nprogramming.. But after you learn languages like C, C++, Java, Python or \nother paradigms as those supported by Lisp, you will understand how tiny \nJavascript is and then realize how stupid you are.", 
            "author": "prathik728"
        }, 
        {
            "date": "2013-07-11T06:54:13.933Z", 
            "text": "thats y whole world are running to learn & Use JS in their Project :D .... \nbro u dont know power of JS .. thats y u commneted ..... :D", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-07-06T05:03:31.541Z", 
            "text": "Javascript is a tiny language that has no ability to control hardware.", 
            "author": "prathik728"
        }, 
        {
            "date": "2013-07-01T06:19:13.913Z", 
            "text": "Learning to love Javascript.\ufeff", 
            "author": "Thomas Hauck"
        }, 
        {
            "date": "2013-06-25T15:25:03.628Z", 
            "text": "Viruses isn't caused by JavaScript, but by the combination of the huge \npopularity of the web, ignorance of users and crappy browser \nimplementations.. Actually C++ can do a LOT more damage and faster than \nJavaScript.. ", 
            "author": "bodhiBit"
        }, 
        {
            "date": "2013-06-25T15:24:23.137Z", 
            "text": "Sure, C++ is more powerful for computationally heavy and specific tasks, \nbut how often do you actually need that kind of power as a developer..? The \nmost common use cases like graphics is already built into the layout engine \nof the browser ready for JavaScript to utilize.. Pretty much whatever would \nbe too slow to do in JavaScript can now be delegated to the browser or the \nserver..", 
            "author": "bodhiBit"
        }, 
        {
            "date": "2013-06-25T15:23:58.458Z", 
            "text": "Considering the huge growth and performance improvements in web \ntechnologies over the past 5-10 years, a lot suggest that JavaScript will \nbe the future of app development.. The power of the web greatly outweighs \nthe computational power of a single computer, and harnessing that power is \nincreasingly easier with JavaScript than with C++.. Take a look at \nchromeexperiments[dot]com to see examples of how far the power of the web \ncan take you..", 
            "author": "bodhiBit"
        }, 
        {
            "date": "2013-06-23T09:37:02.834Z", 
            "text": "ok .. i dont understand ... how to speak with u in Words ... One thing we \ncan do .. lets Meet hear @ youtube after 10 years and decide .. result ... \nThanks for All reaply and its was nice to talk with you Brother ....", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-06-22T08:42:06.910Z", 
            "text": "so wats your View java Script is not usefull language ...? according to me \n.. its good Language .. but the problem is their is not many people our \ntheir woh understand how to use this language dont know power of JS it most \nflexible language i know ... now its up to you .. and One more thing ECMA \nscript-6 is Out their watch first and than .. reply me Back thanks .. bro ", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-06-21T23:08:59.154Z", 
            "text": "It's never ever gonna be able to do the computations C++ can.. Java will \nonly be usable on the web, and programs which doesn't require much. Also \njava's the one of the biggest reasons of most of the pasts virus \ninfections, and current ones... If the future will be utilizing easier \nlanguages while them being computational inferior, we'll be going backwards \nnot forwards.", 
            "author": "stibog"
        }, 
        {
            "date": "2013-06-21T13:23:46.893Z", 
            "text": "yeh thats tue but i m talking abt Future and you are talkin abt Past .. C , \nC++ is Good but not more usable in future ..", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-06-21T11:37:09.514Z", 
            "text": "That's kinda stupid to say, as JavaScript wouldn't exist without C++/C.", 
            "author": "stibog"
        }, 
        {
            "date": "2013-06-06T16:26:29.456Z", 
            "text": "", 
            "author": "Syun Guo"
        }, 
        {
            "date": "2013-06-03T18:19:29.301Z", 
            "text": "", 
            "author": "Celavie Yang"
        }, 
        {
            "date": "2013-06-03T06:53:23.956Z", 
            "text": "thanks for sharing :)", 
            "author": "tagabantay"
        }, 
        {
            "date": "2013-06-03T06:45:07.602Z", 
            "text": "i love the color of that rostrum :)", 
            "author": "tagabantay"
        }, 
        {
            "date": "2013-05-23T14:27:14.421Z", 
            "text": "JavaScript is Father of all languge and all other languages in future is \nonly before . JS ... thats i can say after watching this video.", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-05-22T20:30:13.563Z", 
            "text": "<span class=\"proflinkWrapper\"><span class=\"proflinkPrefix\">+</span><a class=\"proflink\" href=\"https://plus.google.com/115664516084342677970\" oid=\"115664516084342677970\">Hardik Shah</a></span>\u00a0", 
            "author": "Sudeep Makwana"
        }, 
        {
            "date": "2013-05-13T05:40:17.088Z", 
            "text": "Google knows when you masturbate.", 
            "author": "Major Wedgie"
        }, 
        {
            "date": "2013-05-10T13:06:53.125Z", 
            "text": "Too hard.", 
            "author": "Major Wedgie"
        }, 
        {
            "date": "2013-04-21T00:53:05.331Z", 
            "text": "haha I actually pointed that out to my wife and said \"see, this is why I \nlove google\". lol", 
            "author": "Jason Welch"
        }, 
        {
            "date": "2013-04-19T02:13:07.224Z", 
            "text": "cool.", 
            "author": "Khalil Zhang"
        }, 
        {
            "date": "2013-04-17T06:43:06.558Z", 
            "text": "Nice Talk", 
            "author": "yuukifax"
        }, 
        {
            "date": "2013-04-04T21:49:13.680Z", 
            "text": "The future for JavaScript is getting brighter and better ", 
            "author": "John E"
        }, 
        {
            "date": "2013-04-04T14:30:31.728Z", 
            "text": "", 
            "author": "Divan Visagie"
        }, 
        {
            "date": "2013-04-03T17:59:55.983Z", 
            "text": "Even beginners can benefit from loving javascript :p", 
            "author": "bpalmer"
        }, 
        {
            "date": "2013-03-29T15:53:07.953Z", 
            "text": "Shouldn't in 27:22 be console.log(this.item); instead of : \nconsole.log(this.value); ? He defined the item and assign to the \"item\" the \nstring \"value\" .... not reverse. Thank for answer :) ", 
            "author": "Pawe\u0142 Brewczy\u0144ski"
        }, 
        {
            "date": "2013-03-23T11:29:42.550Z", 
            "text": "for javascript study_2\ufeff", 
            "author": "Michael Chen"
        }, 
        {
            "date": "2013-03-23T07:26:54.657Z", 
            "text": "What about for a beginner ???", 
            "author": "holly1849"
        }, 
        {
            "date": "2013-03-22T04:53:07.207Z", 
            "text": "Challenging but inspiring video for a JS beginner like me who now wants to \nlearn more!\ufeff", 
            "author": "Casiano Rodriguez-Leon"
        }, 
        {
            "date": "2013-03-20T11:32:34.250Z", 
            "text": "\u52d5\u753b\u3082\u30c6\u30b9\u30c8\ufeff", 
            "author": "Masa Nishi"
        }, 
        {
            "date": "2013-03-18T12:02:12.991Z", 
            "text": "", 
            "author": "Rafael Carvalho e Lima"
        }, 
        {
            "date": "2013-03-15T10:32:51.683Z", 
            "text": "Great stuff Alex.", 
            "author": "David Gilbertson"
        }, 
        {
            "date": "2013-03-14T17:41:13.788Z", 
            "text": "massive ", 
            "author": "Nishant Sharma"
        }, 
        {
            "date": "2013-03-09T00:34:09.944Z", 
            "text": "#javascript #webdev #programming\ufeff", 
            "author": "Sean T. Unwin"
        }, 
        {
            "date": "2013-03-02T19:21:48.211Z", 
            "text": "It would be a shame if you did not bulk up when normal people are able to \nbulk up so easily with Atomic Max Muscle (check it out on Google).", 
            "author": "Noman Zafar"
        }, 
        {
            "date": "2013-02-27T13:38:44.367Z", 
            "text": "Nevermind... just found it: code.google.com/p/io-2012-slides/", 
            "author": "Carlos Garcia"
        }, 
        {
            "date": "2013-02-27T13:21:16.278Z", 
            "text": "Anybody knows how he created that slideshow? I like how it display part of \nthe previous and next slides during the presentation.", 
            "author": "Carlos Garcia"
        }, 
        {
            "date": "2013-02-11T01:35:04.371Z", 
            "text": "Guys I found a site where you can reverse phone for free, if you go to my \nprofile you'll see the link on the descrption ", 
            "author": "Clint Hernandes"
        }, 
        {
            "date": "2013-02-10T22:50:25.493Z", 
            "text": "Like node.js, you can really see the power of v8 there.", 
            "author": "Chris Lensen"
        }, 
        {
            "date": "2013-01-14T14:19:04.220Z", 
            "text": "awsome ", 
            "author": "sofiane arous"
        }, 
        {
            "date": "2013-01-10T20:37:35.354Z", 
            "text": "", 
            "author": "Camilo Bernal"
        }, 
        {
            "date": "2013-01-10T11:28:18.390Z", 
            "text": "Challenging but inspiring video for a JS beginner like me who now wants to \nlearn more!\ufeff", 
            "author": "Keith Broughton"
        }, 
        {
            "date": "2012-12-31T08:04:39.601Z", 
            "text": "sweeeet", 
            "author": "ron chistik"
        }, 
        {
            "date": "2012-12-21T18:34:10.049Z", 
            "text": "", 
            "author": "Minh Long Tr\u1ea7n"
        }, 
        {
            "date": "2012-12-09T09:12:26.089Z", 
            "text": "", 
            "author": "Gayashan Eranga"
        }, 
        {
            "date": "2012-11-13T22:43:22.434Z", 
            "text": "", 
            "author": "Eser Poyraz"
        }, 
        {
            "date": "2012-11-12T07:28:19.392Z", 
            "text": "i like the \"fuck yeah\" sticker on his laptop", 
            "author": "motosteele"
        }, 
        {
            "date": "2012-10-25T05:00:55.274Z", 
            "text": "Slides: infrequently.(org)/11/io/js/", 
            "author": "David Bradbury"
        }, 
        {
            "date": "2012-10-24T19:55:57.961Z", 
            "text": "LOL on fullscreen you can see a sticker on this laptop that says \"Open \nSource FUCK YEAH!\" LOL LOL LOL", 
            "author": "Kendra C"
        }, 
        {
            "date": "2012-10-24T16:46:42.603Z", 
            "text": "No matter how many books, articles or videos I've read/watched, Javascript \nstill feels really, really odd to me. The video I've linked to goes through \nkind of the basics of what Javascript is, and the core concepts you need to \nunderstand to be able to use it well. I understand all of this, but every \ntime I sit down to write some JS, it feels like everything I do is ugly, \nbackwards and/or completely unmanageable once the project starts to grow \nbeyond just a few functions.\n\nRecommended reading, anyone? Is there a book titled: \"This is why JS feels \nso fucked up to you, and how to finally make it 'click'\"?\ufeff", 
            "author": "Tommy Brunn"
        }, 
        {
            "date": "2012-10-25T19:14:44.000Z", 
            "text": "Sadly, Javascript is just as ugly and backward as you perceive it to be, no \namount of reading will change that. Its sole redeeming quality is that it \nisn't PHP. ", 
            "author": "Anton Ekblad"
        }, 
        {
            "date": "2012-10-24T17:38:15.289Z", 
            "text": "I feel the same way, and I would love to see some direction on this.", 
            "author": "Dane Henson"
        }, 
        {
            "date": "2012-10-17T21:39:03.186Z", 
            "text": "thank you ! this is what you need to see if want the best \"intro in a \nnutshell\". everything should fall into place after this. highly recommended.", 
            "author": "anshumanya"
        }, 
        {
            "date": "2012-10-16T22:51:01.114Z", 
            "text": "Learn to love javascript... throuht coffeescript ", 
            "author": "Jesus Bejarano"
        }, 
        {
            "date": "2012-10-13T09:43:15.452Z", 
            "text": "Will take months and months and there will be an enlightenment (if ou are \npatient enought) ;)", 
            "author": "alchemication"
        }, 
        {
            "date": "2012-10-11T20:49:56.681Z", 
            "text": "open source fuck yeah! ;)", 
            "author": "rainbowxthunder"
        }, 
        {
            "date": "2012-10-09T09:55:07.279Z", 
            "text": "Good talk. ", 
            "author": "Ryan Smith"
        }, 
        {
            "date": "2012-10-04T18:54:40.075Z", 
            "text": "\u0422\u0438\u0442\u0440\u044b \u0435\u0441\u0442\u044c \u0432\u043e \u0432\u0441\u0435\u0445 \u0440\u043e\u043b\u0438\u043a\u0430\u0445 YouTube. \u041a\u043d\u043e\u043f\u043e\u0447\u043a\u0430 \u0440\u044f\u0434\u043e\u043c \u0441 \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0430 \n\u0432\u0438\u0434\u0435\u043e. \u0422\u0430\u043c \u043c\u043e\u0436\u043d\u043e \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u0435, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0432\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u043f\u0435\u0440\u0435\u0432\u043e\u0434 (\u0431\u0435\u0442\u0430). \u0421 \n\u043d\u0435\u0434\u0430\u0432\u043d\u0438\u0445 \u043f\u043e\u0440 \u0435\u0441\u0442\u044c \u0435\u0449\u0435 \u0438\u043d\u0442\u0435\u0440\u0430\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u0441\u0443\u0431\u0442\u0438\u0442\u0440\u044b (\u043a\u043d\u043e\u043f\u043e\u0447\u043a\u0430 \u043f\u043e\u0434 \u0432\u0438\u0434\u0435\u043e, \u043d\u0430 \n\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0435, \u0440\u044f\u0434\u043e\u043c \u0441 \u043a\u043d\u043e\u043f\u043e\u0447\u043a\u043e\u0439 \u00ab\u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c\u0441\u044f\u00bb).", 
            "author": "gpostname"
        }, 
        {
            "date": "2012-10-02T21:34:26.167Z", 
            "text": "", 
            "author": "Gadhia Ravi"
        }, 
        {
            "date": "2012-09-30T11:27:03.691Z", 
            "text": "", 
            "author": "David Davida (Dave Jemison)"
        }, 
        {
            "date": "2012-09-29T16:18:00.169Z", 
            "text": "", 
            "author": "Joes Leung"
        }, 
        {
            "date": "2012-09-27T00:33:35.743Z", 
            "text": "Yes, love of javascript must be learned.", 
            "author": "David Douglas"
        }, 
        {
            "date": "2012-09-18T19:45:41.871Z", 
            "text": "He speaks too fast for this topic. It is my second spoken language, I pick \nup every word, but you have to think of what he said as a concept. :)", 
            "author": "Sid"
        }, 
        {
            "date": "2012-09-08T22:37:51.743Z", 
            "text": "Google I/O 2011: Learning to Love JavaScript\ufeff", 
            "author": "Tobias Willig"
        }
    ]
}